/*! File generated by TLObjects' generator. All changes will be ERASED !*/
const { TLObject } = require('../tlobject');
const { TLRequest } = require('../tlobject');
const struct = require('python-struct');
const { readBigIntFromBuffer, 
        readBufferFromBigInt, generateRandomBytes } = require('../../Helpers')


class GetCallConfigRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x55451fa9;
    static SUBCLASS_OF_ID = 0xad0352e8;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x55451fa9;
        this.SUBCLASS_OF_ID = 0xad0352e8;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("a91f4555","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class RequestCallRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x42ff96ed;
    static SUBCLASS_OF_ID = 0xd48afe4f;

    /**
    :returns phone.PhoneCall: Instance of PhoneCall
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x42ff96ed;
        this.SUBCLASS_OF_ID = 0xd48afe4f;

        this.userId = args.userId;
        this.gAHash = args.gAHash;
        this.protocol = args.protocol;
        this.randomId = args.randomId !== undefined ? args.randomId : readBigIntFromBuffer(generateRandomBytes(4),false,true);
        this.video = args.video || null;
    }
    async resolve(client, utils) {
        this.user_id = utils.getInputUser(await client.getInputEntity(this.userId))
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("ed96ff42","hex"),
            struct.pack('<I', (this.video === undefined || this.video === false || this.video === null) ? 0 : 1),
            this.userId.bytes,
            TLObject.serializeBytes(this.gAHash),
            this.protocol.bytes,
            struct.pack('<i', this.randomId),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _user_id;
        let _g_a_hash;
        let _protocol;
        let _random_id;
        let _video;
        let _x;
        let len;
        let flags = reader.readInt();

        _user_id = reader.tgReadObject();
        _g_a_hash = reader.tgReadBytes();
        _protocol = reader.tgReadObject();
        _random_id = reader.readInt();
        _video = Boolean(flags & 1);
        return new this({userId:_user_id,
	gAHash:_g_a_hash,
	protocol:_protocol,
	randomId:_random_id,
	video:_video})
    }
}


class AcceptCallRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x3bd2b4a0;
    static SUBCLASS_OF_ID = 0xd48afe4f;

    /**
    :returns phone.PhoneCall: Instance of PhoneCall
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3bd2b4a0;
        this.SUBCLASS_OF_ID = 0xd48afe4f;

        this.peer = args.peer;
        this.gB = args.gB;
        this.protocol = args.protocol;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("a0b4d23b","hex"),
            this.peer.bytes,
            TLObject.serializeBytes(this.gB),
            this.protocol.bytes,
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _g_b;
        let _protocol;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _g_b = reader.tgReadBytes();
        _protocol = reader.tgReadObject();
        return new this({peer:_peer,
	gB:_g_b,
	protocol:_protocol})
    }
}


class ConfirmCallRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x2efe1722;
    static SUBCLASS_OF_ID = 0xd48afe4f;

    /**
    :returns phone.PhoneCall: Instance of PhoneCall
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2efe1722;
        this.SUBCLASS_OF_ID = 0xd48afe4f;

        this.peer = args.peer;
        this.gA = args.gA;
        this.keyFingerprint = args.keyFingerprint;
        this.protocol = args.protocol;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("2217fe2e","hex"),
            this.peer.bytes,
            TLObject.serializeBytes(this.gA),
            readBufferFromBigInt(this.keyFingerprint,8,true,true),
            this.protocol.bytes,
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _g_a;
        let _key_fingerprint;
        let _protocol;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _g_a = reader.tgReadBytes();
        _key_fingerprint = reader.readLong();
        _protocol = reader.tgReadObject();
        return new this({peer:_peer,
	gA:_g_a,
	keyFingerprint:_key_fingerprint,
	protocol:_protocol})
    }
}


class ReceivedCallRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x17d54f61;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x17d54f61;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.peer = args.peer;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("614fd517","hex"),
            this.peer.bytes,
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        return new this({peer:_peer})
    }
}


class DiscardCallRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xb2cbc1c0;
    static SUBCLASS_OF_ID = 0x8af52aac;

    /**
    :returns Updates: Instance of either UpdatesTooLong, UpdateShortMessage, UpdateShortChatMessage, UpdateShort, UpdatesCombined, Updates, UpdateShortSentMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb2cbc1c0;
        this.SUBCLASS_OF_ID = 0x8af52aac;

        this.peer = args.peer;
        this.duration = args.duration;
        this.reason = args.reason;
        this.connectionId = args.connectionId;
        this.video = args.video || null;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("c0c1cbb2","hex"),
            struct.pack('<I', (this.video === undefined || this.video === false || this.video === null) ? 0 : 1),
            this.peer.bytes,
            struct.pack('<i', this.duration),
            this.reason.bytes,
            readBufferFromBigInt(this.connectionId,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _peer;
        let _duration;
        let _reason;
        let _connection_id;
        let _video;
        let _x;
        let len;
        let flags = reader.readInt();

        _peer = reader.tgReadObject();
        _duration = reader.readInt();
        _reason = reader.tgReadObject();
        _connection_id = reader.readLong();
        _video = Boolean(flags & 1);
        return new this({peer:_peer,
	duration:_duration,
	reason:_reason,
	connectionId:_connection_id,
	video:_video})
    }
}


class SetCallRatingRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x59ead627;
    static SUBCLASS_OF_ID = 0x8af52aac;

    /**
    :returns Updates: Instance of either UpdatesTooLong, UpdateShortMessage, UpdateShortChatMessage, UpdateShort, UpdatesCombined, Updates, UpdateShortSentMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x59ead627;
        this.SUBCLASS_OF_ID = 0x8af52aac;

        this.peer = args.peer;
        this.rating = args.rating;
        this.comment = args.comment;
        this.userInitiative = args.userInitiative || null;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("27d6ea59","hex"),
            struct.pack('<I', (this.userInitiative === undefined || this.userInitiative === false || this.userInitiative === null) ? 0 : 1),
            this.peer.bytes,
            struct.pack('<i', this.rating),
            TLObject.serializeBytes(this.comment),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _peer;
        let _rating;
        let _comment;
        let _user_initiative;
        let _x;
        let len;
        let flags = reader.readInt();

        _peer = reader.tgReadObject();
        _rating = reader.readInt();
        _comment = reader.tgReadString();
        _user_initiative = Boolean(flags & 1);
        return new this({peer:_peer,
	rating:_rating,
	comment:_comment,
	userInitiative:_user_initiative})
    }
}


class SaveCallDebugRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x277add7e;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x277add7e;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.peer = args.peer;
        this.debug = args.debug;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("7edd7a27","hex"),
            this.peer.bytes,
            this.debug.bytes,
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _debug;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _debug = reader.tgReadObject();
        return new this({peer:_peer,
	debug:_debug})
    }
}

module.exports = {
    GetCallConfigRequest,
    RequestCallRequest,
    AcceptCallRequest,
    ConfirmCallRequest,
    ReceivedCallRequest,
    DiscardCallRequest,
    SetCallRatingRequest,
    SaveCallDebugRequest,
};
