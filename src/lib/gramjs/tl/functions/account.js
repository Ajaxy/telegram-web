/*! File generated by TLObjects' generator. All changes will be ERASED !*/
const { TLObject } = require('../tlobject');
const { TLRequest } = require('../tlobject');
const struct = require('python-struct');
const { readBigIntFromBuffer, 
        readBufferFromBigInt, generateRandomBytes } = require('../../Helpers')


class RegisterDeviceRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x68976c6f;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x68976c6f;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.tokenType = args.tokenType;
        this.token = args.token;
        this.appSandbox = args.appSandbox;
        this.secret = args.secret;
        this.otherUids = args.otherUids;
        this.noMuted = args.noMuted || null;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("6f6c9768","hex"),
            struct.pack('<I', (this.noMuted === undefined || this.noMuted === false || this.noMuted === null) ? 0 : 1),
            struct.pack('<i', this.tokenType),
            TLObject.serializeBytes(this.token),
            this.appSandbox ? 0xb5757299 : 0x379779bc,
            TLObject.serializeBytes(this.secret),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.otherUids.length),Buffer.concat(this.otherUids.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _token_type;
        let _token;
        let _app_sandbox;
        let _secret;
        let _other_uids;
        let _no_muted;
        let _x;
        let len;
        let flags = reader.readInt();

        _token_type = reader.readInt();
        _token = reader.tgReadString();
        _app_sandbox = reader.tgReadBool();
        _secret = reader.tgReadBytes();
        reader.readInt();
        _other_uids = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _other_uids.push(_x);
            }
            _no_muted = Boolean(flags & 1);
            return new this({tokenType:_token_type,
	token:_token,
	appSandbox:_app_sandbox,
	secret:_secret,
	otherUids:_other_uids,
	noMuted:_no_muted})
        }
    }


class UnregisterDeviceRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x3076c4bf;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3076c4bf;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.tokenType = args.tokenType;
        this.token = args.token;
        this.otherUids = args.otherUids;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("bfc47630","hex"),
            struct.pack('<i', this.tokenType),
            TLObject.serializeBytes(this.token),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.otherUids.length),Buffer.concat(this.otherUids.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _token_type;
        let _token;
        let _other_uids;
        let _x;
        let len;
        _token_type = reader.readInt();
        _token = reader.tgReadString();
        reader.readInt();
        _other_uids = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _other_uids.push(_x);
            }
            return new this({tokenType:_token_type,
	token:_token,
	otherUids:_other_uids})
        }
    }


class UpdateNotifySettingsRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x84be5b93;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x84be5b93;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.peer = args.peer;
        this.settings = args.settings;
    }
    async resolve(client, utils) {
        this.peer = await client._getInputNotify(this.peer)
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("935bbe84","hex"),
            this.peer.bytes,
            this.settings.bytes,
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _settings;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _settings = reader.tgReadObject();
        return new this({peer:_peer,
	settings:_settings})
    }
}


class GetNotifySettingsRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x12b3ad31;
    static SUBCLASS_OF_ID = 0xcf20c074;

    /**
    :returns PeerNotifySettings: Instance of PeerNotifySettings
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x12b3ad31;
        this.SUBCLASS_OF_ID = 0xcf20c074;

        this.peer = args.peer;
    }
    async resolve(client, utils) {
        this.peer = await client._getInputNotify(this.peer)
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("31adb312","hex"),
            this.peer.bytes,
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        return new this({peer:_peer})
    }
}


class ResetNotifySettingsRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xdb7e1747;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xdb7e1747;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("47177edb","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UpdateProfileRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x78515775;
    static SUBCLASS_OF_ID = 0x2da17977;

    /**
    :returns User: Instance of either UserEmpty, User
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x78515775;
        this.SUBCLASS_OF_ID = 0x2da17977;

        this.about = args.about || null;
        this.lastName = args.lastName || null;
        this.firstName = args.firstName || null;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("75575178","hex"),
            struct.pack('<I', (this.about === undefined || this.about === false || this.about === null) ? 0 : 4 | (this.lastName === undefined || this.lastName === false || this.lastName === null) ? 0 : 2 | (this.firstName === undefined || this.firstName === false || this.firstName === null) ? 0 : 1),
            (this.about === undefined || this.about === false || this.about ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.about)],
            (this.lastName === undefined || this.lastName === false || this.lastName ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.lastName)],
            (this.firstName === undefined || this.firstName === false || this.firstName ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.firstName)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _about;
        let _last_name;
        let _first_name;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 4) {
            _about = reader.tgReadString();
        }
        else {
            _about = null
        }
        if (flags & 2) {
            _last_name = reader.tgReadString();
        }
        else {
            _last_name = null
        }
        if (flags & 1) {
            _first_name = reader.tgReadString();
        }
        else {
            _first_name = null
        }
        return new this({about:_about,
	lastName:_last_name,
	firstName:_first_name})
    }
}


class UpdateStatusRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x6628562c;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6628562c;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.offline = args.offline;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("2c562866","hex"),
            this.offline ? 0xb5757299 : 0x379779bc,
            ])
        }
    static fromReader(reader) {
        let _offline;
        let _x;
        let len;
        _offline = reader.tgReadBool();
        return new this({offline:_offline})
    }
}


class GetWallPapersRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xaabb1763;
    static SUBCLASS_OF_ID = 0xa2c548fd;

    /**
    :returns account.WallPapers: Instance of either WallPapersNotModified, WallPapers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xaabb1763;
        this.SUBCLASS_OF_ID = 0xa2c548fd;

        this.hash = args.hash;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("6317bbaa","hex"),
            struct.pack('<i', this.hash),
            ])
        }
    static fromReader(reader) {
        let _hash;
        let _x;
        let len;
        _hash = reader.readInt();
        return new this({hash:_hash})
    }
}


class ReportPeerRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xae189d5f;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xae189d5f;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.peer = args.peer;
        this.reason = args.reason;
    }
    async resolve(client, utils) {
        this.peer = utils.getInputPeer(await client.getInputEntity(this.peer))
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("5f9d18ae","hex"),
            this.peer.bytes,
            this.reason.bytes,
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _reason;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _reason = reader.tgReadObject();
        return new this({peer:_peer,
	reason:_reason})
    }
}


class CheckUsernameRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x2714d86c;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2714d86c;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.username = args.username;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("6cd81427","hex"),
            TLObject.serializeBytes(this.username),
            ])
        }
    static fromReader(reader) {
        let _username;
        let _x;
        let len;
        _username = reader.tgReadString();
        return new this({username:_username})
    }
}


class UpdateUsernameRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x3e0bdd7c;
    static SUBCLASS_OF_ID = 0x2da17977;

    /**
    :returns User: Instance of either UserEmpty, User
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3e0bdd7c;
        this.SUBCLASS_OF_ID = 0x2da17977;

        this.username = args.username;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("7cdd0b3e","hex"),
            TLObject.serializeBytes(this.username),
            ])
        }
    static fromReader(reader) {
        let _username;
        let _x;
        let len;
        _username = reader.tgReadString();
        return new this({username:_username})
    }
}


class GetPrivacyRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xdadbc950;
    static SUBCLASS_OF_ID = 0xb55aba82;

    /**
    :returns account.PrivacyRules: Instance of PrivacyRules
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xdadbc950;
        this.SUBCLASS_OF_ID = 0xb55aba82;

        this.key = args.key;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("50c9dbda","hex"),
            this.key.bytes,
            ])
        }
    static fromReader(reader) {
        let _key;
        let _x;
        let len;
        _key = reader.tgReadObject();
        return new this({key:_key})
    }
}


class SetPrivacyRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xc9f81ce8;
    static SUBCLASS_OF_ID = 0xb55aba82;

    /**
    :returns account.PrivacyRules: Instance of PrivacyRules
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc9f81ce8;
        this.SUBCLASS_OF_ID = 0xb55aba82;

        this.key = args.key;
        this.rules = args.rules;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("e81cf8c9","hex"),
            this.key.bytes,
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.rules.length),Buffer.concat(this.rules.map(x => x.bytes)),
            ])
        }
    static fromReader(reader) {
        let _key;
        let _rules;
        let _x;
        let len;
        _key = reader.tgReadObject();
        reader.readInt();
        _rules = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _rules.push(_x);
            }
            return new this({key:_key,
	rules:_rules})
        }
    }


class DeleteAccountRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x418d4e0b;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x418d4e0b;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.reason = args.reason;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("0b4e8d41","hex"),
            TLObject.serializeBytes(this.reason),
            ])
        }
    static fromReader(reader) {
        let _reason;
        let _x;
        let len;
        _reason = reader.tgReadString();
        return new this({reason:_reason})
    }
}


class GetAccountTTLRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x08fc711d;
    static SUBCLASS_OF_ID = 0xbaa39d88;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x08fc711d;
        this.SUBCLASS_OF_ID = 0xbaa39d88;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("1d71fc08","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SetAccountTTLRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x2442485e;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2442485e;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.ttl = args.ttl;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("5e484224","hex"),
            this.ttl.bytes,
            ])
        }
    static fromReader(reader) {
        let _ttl;
        let _x;
        let len;
        _ttl = reader.tgReadObject();
        return new this({ttl:_ttl})
    }
}


class SendChangePhoneCodeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x82574ae5;
    static SUBCLASS_OF_ID = 0x6ce87081;

    /**
    :returns auth.SentCode: Instance of SentCode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x82574ae5;
        this.SUBCLASS_OF_ID = 0x6ce87081;

        this.phoneNumber = args.phoneNumber;
        this.settings = args.settings;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("e54a5782","hex"),
            TLObject.serializeBytes(this.phoneNumber),
            this.settings.bytes,
            ])
        }
    static fromReader(reader) {
        let _phone_number;
        let _settings;
        let _x;
        let len;
        _phone_number = reader.tgReadString();
        _settings = reader.tgReadObject();
        return new this({phoneNumber:_phone_number,
	settings:_settings})
    }
}


class ChangePhoneRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x70c32edb;
    static SUBCLASS_OF_ID = 0x2da17977;

    /**
    :returns User: Instance of either UserEmpty, User
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x70c32edb;
        this.SUBCLASS_OF_ID = 0x2da17977;

        this.phoneNumber = args.phoneNumber;
        this.phoneCodeHash = args.phoneCodeHash;
        this.phoneCode = args.phoneCode;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("db2ec370","hex"),
            TLObject.serializeBytes(this.phoneNumber),
            TLObject.serializeBytes(this.phoneCodeHash),
            TLObject.serializeBytes(this.phoneCode),
            ])
        }
    static fromReader(reader) {
        let _phone_number;
        let _phone_code_hash;
        let _phone_code;
        let _x;
        let len;
        _phone_number = reader.tgReadString();
        _phone_code_hash = reader.tgReadString();
        _phone_code = reader.tgReadString();
        return new this({phoneNumber:_phone_number,
	phoneCodeHash:_phone_code_hash,
	phoneCode:_phone_code})
    }
}


class UpdateDeviceLockedRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x38df3532;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x38df3532;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.period = args.period;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("3235df38","hex"),
            struct.pack('<i', this.period),
            ])
        }
    static fromReader(reader) {
        let _period;
        let _x;
        let len;
        _period = reader.readInt();
        return new this({period:_period})
    }
}


class GetAuthorizationsRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xe320c158;
    static SUBCLASS_OF_ID = 0xbf5e0ff;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xe320c158;
        this.SUBCLASS_OF_ID = 0xbf5e0ff;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("58c120e3","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ResetAuthorizationRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xdf77f3bc;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xdf77f3bc;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.hash = args.hash;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("bcf377df","hex"),
            readBufferFromBigInt(this.hash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _hash;
        let _x;
        let len;
        _hash = reader.readLong();
        return new this({hash:_hash})
    }
}


class GetPasswordRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x548a30f5;
    static SUBCLASS_OF_ID = 0x53a211a3;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x548a30f5;
        this.SUBCLASS_OF_ID = 0x53a211a3;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("f5308a54","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class GetPasswordSettingsRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x9cd4eaf9;
    static SUBCLASS_OF_ID = 0xd23fb078;

    /**
    :returns account.PasswordSettings: Instance of PasswordSettings
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9cd4eaf9;
        this.SUBCLASS_OF_ID = 0xd23fb078;

        this.password = args.password;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("f9ead49c","hex"),
            this.password.bytes,
            ])
        }
    static fromReader(reader) {
        let _password;
        let _x;
        let len;
        _password = reader.tgReadObject();
        return new this({password:_password})
    }
}


class UpdatePasswordSettingsRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xa59b102f;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa59b102f;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.password = args.password;
        this.newSettings = args.newSettings;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("2f109ba5","hex"),
            this.password.bytes,
            this.newSettings.bytes,
            ])
        }
    static fromReader(reader) {
        let _password;
        let _new_settings;
        let _x;
        let len;
        _password = reader.tgReadObject();
        _new_settings = reader.tgReadObject();
        return new this({password:_password,
	newSettings:_new_settings})
    }
}


class SendConfirmPhoneCodeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x1b3faa88;
    static SUBCLASS_OF_ID = 0x6ce87081;

    /**
    :returns auth.SentCode: Instance of SentCode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1b3faa88;
        this.SUBCLASS_OF_ID = 0x6ce87081;

        this.hash = args.hash;
        this.settings = args.settings;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("88aa3f1b","hex"),
            TLObject.serializeBytes(this.hash),
            this.settings.bytes,
            ])
        }
    static fromReader(reader) {
        let _hash;
        let _settings;
        let _x;
        let len;
        _hash = reader.tgReadString();
        _settings = reader.tgReadObject();
        return new this({hash:_hash,
	settings:_settings})
    }
}


class ConfirmPhoneRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x5f2178c3;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5f2178c3;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.phoneCodeHash = args.phoneCodeHash;
        this.phoneCode = args.phoneCode;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("c378215f","hex"),
            TLObject.serializeBytes(this.phoneCodeHash),
            TLObject.serializeBytes(this.phoneCode),
            ])
        }
    static fromReader(reader) {
        let _phone_code_hash;
        let _phone_code;
        let _x;
        let len;
        _phone_code_hash = reader.tgReadString();
        _phone_code = reader.tgReadString();
        return new this({phoneCodeHash:_phone_code_hash,
	phoneCode:_phone_code})
    }
}


class GetTmpPasswordRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x449e0b51;
    static SUBCLASS_OF_ID = 0xb064992d;

    /**
    :returns account.TmpPassword: Instance of TmpPassword
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x449e0b51;
        this.SUBCLASS_OF_ID = 0xb064992d;

        this.password = args.password;
        this.period = args.period;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("510b9e44","hex"),
            this.password.bytes,
            struct.pack('<i', this.period),
            ])
        }
    static fromReader(reader) {
        let _password;
        let _period;
        let _x;
        let len;
        _password = reader.tgReadObject();
        _period = reader.readInt();
        return new this({password:_password,
	period:_period})
    }
}


class GetWebAuthorizationsRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x182e6d6f;
    static SUBCLASS_OF_ID = 0x9a365b32;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x182e6d6f;
        this.SUBCLASS_OF_ID = 0x9a365b32;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("6f6d2e18","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ResetWebAuthorizationRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x2d01b9ef;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2d01b9ef;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.hash = args.hash;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("efb9012d","hex"),
            readBufferFromBigInt(this.hash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _hash;
        let _x;
        let len;
        _hash = reader.readLong();
        return new this({hash:_hash})
    }
}


class ResetWebAuthorizationsRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x682d2594;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x682d2594;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("94252d68","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class GetAllSecureValuesRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xb288bc7d;
    static SUBCLASS_OF_ID = 0xe82e4121;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xb288bc7d;
        this.SUBCLASS_OF_ID = 0xe82e4121;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("7dbc88b2","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class GetSecureValueRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x73665bc2;
    static SUBCLASS_OF_ID = 0xe82e4121;

    /**
    :returns Vector<SecureValue>: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x73665bc2;
        this.SUBCLASS_OF_ID = 0xe82e4121;

        this.types = args.types;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("c25b6673","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.types.length),Buffer.concat(this.types.map(x => x.bytes)),
            ])
        }
    static fromReader(reader) {
        let _types;
        let _x;
        let len;
        reader.readInt();
        _types = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _types.push(_x);
            }
            return new this({types:_types})
        }
    }


class SaveSecureValueRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x899fe31d;
    static SUBCLASS_OF_ID = 0x51138ae;

    /**
    :returns SecureValue: Instance of SecureValue
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x899fe31d;
        this.SUBCLASS_OF_ID = 0x51138ae;

        this.value = args.value;
        this.secureSecretId = args.secureSecretId;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("1de39f89","hex"),
            this.value.bytes,
            readBufferFromBigInt(this.secureSecretId,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _value;
        let _secure_secret_id;
        let _x;
        let len;
        _value = reader.tgReadObject();
        _secure_secret_id = reader.readLong();
        return new this({value:_value,
	secureSecretId:_secure_secret_id})
    }
}


class DeleteSecureValueRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xb880bc4b;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb880bc4b;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.types = args.types;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("4bbc80b8","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.types.length),Buffer.concat(this.types.map(x => x.bytes)),
            ])
        }
    static fromReader(reader) {
        let _types;
        let _x;
        let len;
        reader.readInt();
        _types = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _types.push(_x);
            }
            return new this({types:_types})
        }
    }


class GetAuthorizationFormRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xb86ba8e1;
    static SUBCLASS_OF_ID = 0x78049a94;

    /**
    :returns account.AuthorizationForm: Instance of AuthorizationForm
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb86ba8e1;
        this.SUBCLASS_OF_ID = 0x78049a94;

        this.botId = args.botId;
        this.scope = args.scope;
        this.publicKey = args.publicKey;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("e1a86bb8","hex"),
            struct.pack('<i', this.botId),
            TLObject.serializeBytes(this.scope),
            TLObject.serializeBytes(this.publicKey),
            ])
        }
    static fromReader(reader) {
        let _bot_id;
        let _scope;
        let _public_key;
        let _x;
        let len;
        _bot_id = reader.readInt();
        _scope = reader.tgReadString();
        _public_key = reader.tgReadString();
        return new this({botId:_bot_id,
	scope:_scope,
	publicKey:_public_key})
    }
}


class AcceptAuthorizationRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xe7027c94;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe7027c94;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.botId = args.botId;
        this.scope = args.scope;
        this.publicKey = args.publicKey;
        this.valueHashes = args.valueHashes;
        this.credentials = args.credentials;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("947c02e7","hex"),
            struct.pack('<i', this.botId),
            TLObject.serializeBytes(this.scope),
            TLObject.serializeBytes(this.publicKey),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.valueHashes.length),Buffer.concat(this.valueHashes.map(x => x.bytes)),
            this.credentials.bytes,
            ])
        }
    static fromReader(reader) {
        let _bot_id;
        let _scope;
        let _public_key;
        let _value_hashes;
        let _credentials;
        let _x;
        let len;
        _bot_id = reader.readInt();
        _scope = reader.tgReadString();
        _public_key = reader.tgReadString();
        reader.readInt();
        _value_hashes = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _value_hashes.push(_x);
            }
            _credentials = reader.tgReadObject();
            return new this({botId:_bot_id,
	scope:_scope,
	publicKey:_public_key,
	valueHashes:_value_hashes,
	credentials:_credentials})
        }
    }


class SendVerifyPhoneCodeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xa5a356f9;
    static SUBCLASS_OF_ID = 0x6ce87081;

    /**
    :returns auth.SentCode: Instance of SentCode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa5a356f9;
        this.SUBCLASS_OF_ID = 0x6ce87081;

        this.phoneNumber = args.phoneNumber;
        this.settings = args.settings;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("f956a3a5","hex"),
            TLObject.serializeBytes(this.phoneNumber),
            this.settings.bytes,
            ])
        }
    static fromReader(reader) {
        let _phone_number;
        let _settings;
        let _x;
        let len;
        _phone_number = reader.tgReadString();
        _settings = reader.tgReadObject();
        return new this({phoneNumber:_phone_number,
	settings:_settings})
    }
}


class VerifyPhoneRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x4dd3a7f6;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4dd3a7f6;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.phoneNumber = args.phoneNumber;
        this.phoneCodeHash = args.phoneCodeHash;
        this.phoneCode = args.phoneCode;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("f6a7d34d","hex"),
            TLObject.serializeBytes(this.phoneNumber),
            TLObject.serializeBytes(this.phoneCodeHash),
            TLObject.serializeBytes(this.phoneCode),
            ])
        }
    static fromReader(reader) {
        let _phone_number;
        let _phone_code_hash;
        let _phone_code;
        let _x;
        let len;
        _phone_number = reader.tgReadString();
        _phone_code_hash = reader.tgReadString();
        _phone_code = reader.tgReadString();
        return new this({phoneNumber:_phone_number,
	phoneCodeHash:_phone_code_hash,
	phoneCode:_phone_code})
    }
}


class SendVerifyEmailCodeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x7011509f;
    static SUBCLASS_OF_ID = 0x69f3c06e;

    /**
    :returns account.SentEmailCode: Instance of SentEmailCode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7011509f;
        this.SUBCLASS_OF_ID = 0x69f3c06e;

        this.email = args.email;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("9f501170","hex"),
            TLObject.serializeBytes(this.email),
            ])
        }
    static fromReader(reader) {
        let _email;
        let _x;
        let len;
        _email = reader.tgReadString();
        return new this({email:_email})
    }
}


class VerifyEmailRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xecba39db;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xecba39db;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.email = args.email;
        this.code = args.code;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("db39baec","hex"),
            TLObject.serializeBytes(this.email),
            TLObject.serializeBytes(this.code),
            ])
        }
    static fromReader(reader) {
        let _email;
        let _code;
        let _x;
        let len;
        _email = reader.tgReadString();
        _code = reader.tgReadString();
        return new this({email:_email,
	code:_code})
    }
}


class InitTakeoutSessionRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xf05b4804;
    static SUBCLASS_OF_ID = 0x843ebe85;

    /**
    :returns account.Takeout: Instance of Takeout
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf05b4804;
        this.SUBCLASS_OF_ID = 0x843ebe85;

        this.fileMaxSize = args.fileMaxSize || null;
        this.files = args.files || null;
        this.messageChannels = args.messageChannels || null;
        this.messageMegagroups = args.messageMegagroups || null;
        this.messageChats = args.messageChats || null;
        this.messageUsers = args.messageUsers || null;
        this.contacts = args.contacts || null;
    }
    get bytes() {
        if (!((this.file_max_size || this.file_max_size!==null && this.files || this.files!==null) && (this.file_max_size===null || this.file_max_size===false && this.files===null || this.files===false)))
	 throw new Error('file_max_size, files paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("04485bf0","hex"),
            struct.pack('<I', (this.fileMaxSize === undefined || this.fileMaxSize === false || this.fileMaxSize === null) ? 0 : 32 | (this.files === undefined || this.files === false || this.files === null) ? 0 : 32 | (this.messageChannels === undefined || this.messageChannels === false || this.messageChannels === null) ? 0 : 16 | (this.messageMegagroups === undefined || this.messageMegagroups === false || this.messageMegagroups === null) ? 0 : 8 | (this.messageChats === undefined || this.messageChats === false || this.messageChats === null) ? 0 : 4 | (this.messageUsers === undefined || this.messageUsers === false || this.messageUsers === null) ? 0 : 2 | (this.contacts === undefined || this.contacts === false || this.contacts === null) ? 0 : 1),
            (this.fileMaxSize === undefined || this.fileMaxSize === false || this.fileMaxSize ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.fileMaxSize)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _file_max_size;
        let _files;
        let _message_channels;
        let _message_megagroups;
        let _message_chats;
        let _message_users;
        let _contacts;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 32) {
            _file_max_size = reader.readInt();
        }
        else {
            _file_max_size = null
        }
        _files = Boolean(flags & 32);
        _message_channels = Boolean(flags & 16);
        _message_megagroups = Boolean(flags & 8);
        _message_chats = Boolean(flags & 4);
        _message_users = Boolean(flags & 2);
        _contacts = Boolean(flags & 1);
        return new this({fileMaxSize:_file_max_size,
	files:_files,
	messageChannels:_message_channels,
	messageMegagroups:_message_megagroups,
	messageChats:_message_chats,
	messageUsers:_message_users,
	contacts:_contacts})
    }
}


class FinishTakeoutSessionRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x1d2652ee;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1d2652ee;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.success = args.success || null;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("ee52261d","hex"),
            struct.pack('<I', (this.success === undefined || this.success === false || this.success === null) ? 0 : 1),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _success;
        let _x;
        let len;
        let flags = reader.readInt();

        _success = Boolean(flags & 1);
        return new this({success:_success})
    }
}


class ConfirmPasswordEmailRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x8fdf1920;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8fdf1920;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.code = args.code;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("2019df8f","hex"),
            TLObject.serializeBytes(this.code),
            ])
        }
    static fromReader(reader) {
        let _code;
        let _x;
        let len;
        _code = reader.tgReadString();
        return new this({code:_code})
    }
}


class ResendPasswordEmailRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x7a7f2a15;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x7a7f2a15;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("152a7f7a","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class CancelPasswordEmailRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xc1cbd5b6;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xc1cbd5b6;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("b6d5cbc1","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class GetContactSignUpNotificationRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x9f07c728;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9f07c728;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("28c7079f","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SetContactSignUpNotificationRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xcff43f61;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xcff43f61;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.silent = args.silent;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("613ff4cf","hex"),
            this.silent ? 0xb5757299 : 0x379779bc,
            ])
        }
    static fromReader(reader) {
        let _silent;
        let _x;
        let len;
        _silent = reader.tgReadBool();
        return new this({silent:_silent})
    }
}


class GetNotifyExceptionsRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x53577479;
    static SUBCLASS_OF_ID = 0x8af52aac;

    /**
    :returns Updates: Instance of either UpdatesTooLong, UpdateShortMessage, UpdateShortChatMessage, UpdateShort, UpdatesCombined, Updates, UpdateShortSentMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x53577479;
        this.SUBCLASS_OF_ID = 0x8af52aac;

        this.peer = args.peer || null;
        this.compareSound = args.compareSound || null;
    }
    async resolve(client, utils) {
        if (this.peer) {
            this.peer = await client._getInputNotify(this.peer)
        }
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("79745753","hex"),
            struct.pack('<I', (this.peer === undefined || this.peer === false || this.peer === null) ? 0 : 1 | (this.compareSound === undefined || this.compareSound === false || this.compareSound === null) ? 0 : 2),
            (this.peer === undefined || this.peer === false || this.peer ===null) ? Buffer.alloc(0) : [this.peer.bytes],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _peer;
        let _compare_sound;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 1) {
            _peer = reader.tgReadObject();
        }
        else {
            _peer = null
        }
        _compare_sound = Boolean(flags & 2);
        return new this({peer:_peer,
	compareSound:_compare_sound})
    }
}


class GetWallPaperRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xfc8ddbea;
    static SUBCLASS_OF_ID = 0x96a2c98b;

    /**
    :returns WallPaper: Instance of WallPaper
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfc8ddbea;
        this.SUBCLASS_OF_ID = 0x96a2c98b;

        this.wallpaper = args.wallpaper;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("eadb8dfc","hex"),
            this.wallpaper.bytes,
            ])
        }
    static fromReader(reader) {
        let _wallpaper;
        let _x;
        let len;
        _wallpaper = reader.tgReadObject();
        return new this({wallpaper:_wallpaper})
    }
}


class UploadWallPaperRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xdd853661;
    static SUBCLASS_OF_ID = 0x96a2c98b;

    /**
    :returns WallPaper: Instance of WallPaper
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xdd853661;
        this.SUBCLASS_OF_ID = 0x96a2c98b;

        this.file = args.file;
        this.mimeType = args.mimeType;
        this.settings = args.settings;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("613685dd","hex"),
            this.file.bytes,
            TLObject.serializeBytes(this.mimeType),
            this.settings.bytes,
            ])
        }
    static fromReader(reader) {
        let _file;
        let _mime_type;
        let _settings;
        let _x;
        let len;
        _file = reader.tgReadObject();
        _mime_type = reader.tgReadString();
        _settings = reader.tgReadObject();
        return new this({file:_file,
	mimeType:_mime_type,
	settings:_settings})
    }
}


class SaveWallPaperRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x6c5a5b37;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6c5a5b37;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.wallpaper = args.wallpaper;
        this.unsave = args.unsave;
        this.settings = args.settings;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("375b5a6c","hex"),
            this.wallpaper.bytes,
            this.unsave ? 0xb5757299 : 0x379779bc,
            this.settings.bytes,
            ])
        }
    static fromReader(reader) {
        let _wallpaper;
        let _unsave;
        let _settings;
        let _x;
        let len;
        _wallpaper = reader.tgReadObject();
        _unsave = reader.tgReadBool();
        _settings = reader.tgReadObject();
        return new this({wallpaper:_wallpaper,
	unsave:_unsave,
	settings:_settings})
    }
}


class InstallWallPaperRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xfeed5769;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfeed5769;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.wallpaper = args.wallpaper;
        this.settings = args.settings;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("6957edfe","hex"),
            this.wallpaper.bytes,
            this.settings.bytes,
            ])
        }
    static fromReader(reader) {
        let _wallpaper;
        let _settings;
        let _x;
        let len;
        _wallpaper = reader.tgReadObject();
        _settings = reader.tgReadObject();
        return new this({wallpaper:_wallpaper,
	settings:_settings})
    }
}


class ResetWallPapersRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xbb3b9804;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xbb3b9804;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("04983bbb","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class GetAutoDownloadSettingsRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x56da0b3f;
    static SUBCLASS_OF_ID = 0x2fb85921;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x56da0b3f;
        this.SUBCLASS_OF_ID = 0x2fb85921;

    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("3f0bda56","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SaveAutoDownloadSettingsRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x76f36233;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x76f36233;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.settings = args.settings;
        this.high = args.high || null;
        this.low = args.low || null;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("3362f376","hex"),
            struct.pack('<I', (this.high === undefined || this.high === false || this.high === null) ? 0 : 2 | (this.low === undefined || this.low === false || this.low === null) ? 0 : 1),
            this.settings.bytes,
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _settings;
        let _high;
        let _low;
        let _x;
        let len;
        let flags = reader.readInt();

        _settings = reader.tgReadObject();
        _high = Boolean(flags & 2);
        _low = Boolean(flags & 1);
        return new this({settings:_settings,
	high:_high,
	low:_low})
    }
}


class UploadThemeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x1c3db333;
    static SUBCLASS_OF_ID = 0x211fe820;

    /**
    :returns Document: Instance of either DocumentEmpty, Document
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1c3db333;
        this.SUBCLASS_OF_ID = 0x211fe820;

        this.file = args.file;
        this.fileName = args.fileName;
        this.mimeType = args.mimeType;
        this.thumb = args.thumb || null;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("33b33d1c","hex"),
            struct.pack('<I', (this.thumb === undefined || this.thumb === false || this.thumb === null) ? 0 : 1),
            this.file.bytes,
            TLObject.serializeBytes(this.fileName),
            TLObject.serializeBytes(this.mimeType),
            (this.thumb === undefined || this.thumb === false || this.thumb ===null) ? Buffer.alloc(0) : [this.thumb.bytes],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _file;
        let _file_name;
        let _mime_type;
        let _thumb;
        let _x;
        let len;
        let flags = reader.readInt();

        _file = reader.tgReadObject();
        _file_name = reader.tgReadString();
        _mime_type = reader.tgReadString();
        if (flags & 1) {
            _thumb = reader.tgReadObject();
        }
        else {
            _thumb = null
        }
        return new this({file:_file,
	fileName:_file_name,
	mimeType:_mime_type,
	thumb:_thumb})
    }
}


class CreateThemeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x2b7ffd7f;
    static SUBCLASS_OF_ID = 0x56b4c80c;

    /**
    :returns Theme: Instance of either ThemeDocumentNotModified, Theme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2b7ffd7f;
        this.SUBCLASS_OF_ID = 0x56b4c80c;

        this.slug = args.slug;
        this.title = args.title;
        this.document = args.document;
    }
    async resolve(client, utils) {
        this.document = utils.getInputDocument(this.document)
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("7ffd7f2b","hex"),
            TLObject.serializeBytes(this.slug),
            TLObject.serializeBytes(this.title),
            this.document.bytes,
            ])
        }
    static fromReader(reader) {
        let _slug;
        let _title;
        let _document;
        let _x;
        let len;
        _slug = reader.tgReadString();
        _title = reader.tgReadString();
        _document = reader.tgReadObject();
        return new this({slug:_slug,
	title:_title,
	document:_document})
    }
}


class UpdateThemeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x3b8ea202;
    static SUBCLASS_OF_ID = 0x56b4c80c;

    /**
    :returns Theme: Instance of either ThemeDocumentNotModified, Theme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3b8ea202;
        this.SUBCLASS_OF_ID = 0x56b4c80c;

        this.format = args.format;
        this.theme = args.theme;
        this.document = args.document || null;
        this.title = args.title || null;
        this.slug = args.slug || null;
    }
    async resolve(client, utils) {
        if (this.document) {
            this.document = utils.getInputDocument(this.document)
        }
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("02a28e3b","hex"),
            struct.pack('<I', (this.document === undefined || this.document === false || this.document === null) ? 0 : 4 | (this.title === undefined || this.title === false || this.title === null) ? 0 : 2 | (this.slug === undefined || this.slug === false || this.slug === null) ? 0 : 1),
            TLObject.serializeBytes(this.format),
            this.theme.bytes,
            (this.document === undefined || this.document === false || this.document ===null) ? Buffer.alloc(0) : [this.document.bytes],
            (this.title === undefined || this.title === false || this.title ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.title)],
            (this.slug === undefined || this.slug === false || this.slug ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.slug)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _format;
        let _theme;
        let _document;
        let _title;
        let _slug;
        let _x;
        let len;
        let flags = reader.readInt();

        _format = reader.tgReadString();
        _theme = reader.tgReadObject();
        if (flags & 4) {
            _document = reader.tgReadObject();
        }
        else {
            _document = null
        }
        if (flags & 2) {
            _title = reader.tgReadString();
        }
        else {
            _title = null
        }
        if (flags & 1) {
            _slug = reader.tgReadString();
        }
        else {
            _slug = null
        }
        return new this({format:_format,
	theme:_theme,
	document:_document,
	title:_title,
	slug:_slug})
    }
}


class SaveThemeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xf257106c;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf257106c;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.theme = args.theme;
        this.unsave = args.unsave;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("6c1057f2","hex"),
            this.theme.bytes,
            this.unsave ? 0xb5757299 : 0x379779bc,
            ])
        }
    static fromReader(reader) {
        let _theme;
        let _unsave;
        let _x;
        let len;
        _theme = reader.tgReadObject();
        _unsave = reader.tgReadBool();
        return new this({theme:_theme,
	unsave:_unsave})
    }
}


class InstallThemeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x7ae43737;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7ae43737;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.theme = args.theme || null;
        this.format = args.format || null;
        this.dark = args.dark || null;
    }
    get bytes() {
        if (!((this.theme || this.theme!==null && this.format || this.format!==null) && (this.theme===null || this.theme===false && this.format===null || this.format===false)))
	 throw new Error('theme, format paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("3737e47a","hex"),
            struct.pack('<I', (this.theme === undefined || this.theme === false || this.theme === null) ? 0 : 2 | (this.format === undefined || this.format === false || this.format === null) ? 0 : 2 | (this.dark === undefined || this.dark === false || this.dark === null) ? 0 : 1),
            (this.theme === undefined || this.theme === false || this.theme ===null) ? Buffer.alloc(0) : [this.theme.bytes],
            (this.format === undefined || this.format === false || this.format ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.format)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _theme;
        let _format;
        let _dark;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 2) {
            _theme = reader.tgReadObject();
        }
        else {
            _theme = null
        }
        if (flags & 2) {
            _format = reader.tgReadString();
        }
        else {
            _format = null
        }
        _dark = Boolean(flags & 1);
        return new this({theme:_theme,
	format:_format,
	dark:_dark})
    }
}


class GetThemeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x8d9d742b;
    static SUBCLASS_OF_ID = 0x56b4c80c;

    /**
    :returns Theme: Instance of either ThemeDocumentNotModified, Theme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8d9d742b;
        this.SUBCLASS_OF_ID = 0x56b4c80c;

        this.format = args.format;
        this.theme = args.theme;
        this.documentId = args.documentId;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("2b749d8d","hex"),
            TLObject.serializeBytes(this.format),
            this.theme.bytes,
            readBufferFromBigInt(this.documentId,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _format;
        let _theme;
        let _document_id;
        let _x;
        let len;
        _format = reader.tgReadString();
        _theme = reader.tgReadObject();
        _document_id = reader.readLong();
        return new this({format:_format,
	theme:_theme,
	documentId:_document_id})
    }
}


class GetThemesRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x285946f8;
    static SUBCLASS_OF_ID = 0x7fc52204;

    /**
    :returns account.Themes: Instance of either ThemesNotModified, Themes
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x285946f8;
        this.SUBCLASS_OF_ID = 0x7fc52204;

        this.format = args.format;
        this.hash = args.hash;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("f8465928","hex"),
            TLObject.serializeBytes(this.format),
            struct.pack('<i', this.hash),
            ])
        }
    static fromReader(reader) {
        let _format;
        let _hash;
        let _x;
        let len;
        _format = reader.tgReadString();
        _hash = reader.readInt();
        return new this({format:_format,
	hash:_hash})
    }
}

module.exports = {
    RegisterDeviceRequest,
    UnregisterDeviceRequest,
    UpdateNotifySettingsRequest,
    GetNotifySettingsRequest,
    ResetNotifySettingsRequest,
    UpdateProfileRequest,
    UpdateStatusRequest,
    GetWallPapersRequest,
    ReportPeerRequest,
    CheckUsernameRequest,
    UpdateUsernameRequest,
    GetPrivacyRequest,
    SetPrivacyRequest,
    DeleteAccountRequest,
    GetAccountTTLRequest,
    SetAccountTTLRequest,
    SendChangePhoneCodeRequest,
    ChangePhoneRequest,
    UpdateDeviceLockedRequest,
    GetAuthorizationsRequest,
    ResetAuthorizationRequest,
    GetPasswordRequest,
    GetPasswordSettingsRequest,
    UpdatePasswordSettingsRequest,
    SendConfirmPhoneCodeRequest,
    ConfirmPhoneRequest,
    GetTmpPasswordRequest,
    GetWebAuthorizationsRequest,
    ResetWebAuthorizationRequest,
    ResetWebAuthorizationsRequest,
    GetAllSecureValuesRequest,
    GetSecureValueRequest,
    SaveSecureValueRequest,
    DeleteSecureValueRequest,
    GetAuthorizationFormRequest,
    AcceptAuthorizationRequest,
    SendVerifyPhoneCodeRequest,
    VerifyPhoneRequest,
    SendVerifyEmailCodeRequest,
    VerifyEmailRequest,
    InitTakeoutSessionRequest,
    FinishTakeoutSessionRequest,
    ConfirmPasswordEmailRequest,
    ResendPasswordEmailRequest,
    CancelPasswordEmailRequest,
    GetContactSignUpNotificationRequest,
    SetContactSignUpNotificationRequest,
    GetNotifyExceptionsRequest,
    GetWallPaperRequest,
    UploadWallPaperRequest,
    SaveWallPaperRequest,
    InstallWallPaperRequest,
    ResetWallPapersRequest,
    GetAutoDownloadSettingsRequest,
    SaveAutoDownloadSettingsRequest,
    UploadThemeRequest,
    CreateThemeRequest,
    UpdateThemeRequest,
    SaveThemeRequest,
    InstallThemeRequest,
    GetThemeRequest,
    GetThemesRequest,
};
