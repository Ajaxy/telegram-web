/*! File generated by TLObjects' generator. All changes will be ERASED !*/
const { TLObject } = require('../tlobject');
const struct = require('python-struct');
const { readBigIntFromBuffer, 
        readBufferFromBigInt, generateRandomBytes } = require('../../Helpers')


class PaymentForm extends TLObject {
    static CONSTRUCTOR_ID = 0x3f56aea3;
    static SUBCLASS_OF_ID = 0xa0483f19;

    /**
    Constructor for payments.PaymentForm: Instance of PaymentForm
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3f56aea3;
        this.SUBCLASS_OF_ID = 0xa0483f19;

        this.url = args.url;
        this.providerId = args.providerId;
        this.botId = args.botId;
        this.invoice = args.invoice;
        this.users = args.users;
        this.savedCredentials = args.savedCredentials || null;
        this.savedInfo = args.savedInfo || null;
        this.nativeParams = args.nativeParams || null;
        this.nativeProvider = args.nativeProvider || null;
        this.canSaveCredentials = args.canSaveCredentials || null;
        this.passwordMissing = args.passwordMissing || null;
    }
    get bytes() {
        if (!((this.native_params || this.native_params!==null && this.native_provider || this.native_provider!==null) && (this.native_params===null || this.native_params===false && this.native_provider===null || this.native_provider===false)))
	 throw new Error('native_params, native_provider paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("a3ae563f","hex"),
            TLObject.serializeBytes(this.url),
            struct.pack('<I', (this.savedCredentials === undefined || this.savedCredentials === false || this.savedCredentials === null) ? 0 : 2 | (this.savedInfo === undefined || this.savedInfo === false || this.savedInfo === null) ? 0 : 1 | (this.nativeParams === undefined || this.nativeParams === false || this.nativeParams === null) ? 0 : 16 | (this.nativeProvider === undefined || this.nativeProvider === false || this.nativeProvider === null) ? 0 : 16 | (this.canSaveCredentials === undefined || this.canSaveCredentials === false || this.canSaveCredentials === null) ? 0 : 4 | (this.passwordMissing === undefined || this.passwordMissing === false || this.passwordMissing === null) ? 0 : 8),
            struct.pack('<i', this.providerId),
            struct.pack('<i', this.botId),
            this.invoice.bytes,
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.bytes)),
            (this.savedCredentials === undefined || this.savedCredentials === false || this.savedCredentials ===null) ? Buffer.alloc(0) : [this.savedCredentials.bytes],
            (this.savedInfo === undefined || this.savedInfo === false || this.savedInfo ===null) ? Buffer.alloc(0) : [this.savedInfo.bytes],
            (this.nativeParams === undefined || this.nativeParams === false || this.nativeParams ===null) ? Buffer.alloc(0) : [this.nativeParams.bytes],
            (this.nativeProvider === undefined || this.nativeProvider === false || this.nativeProvider ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.nativeProvider)],
            ])
        }
    static fromReader(reader) {
        let _url;
        let _flags;
        let _provider_id;
        let _bot_id;
        let _invoice;
        let _users;
        let _saved_credentials;
        let _saved_info;
        let _native_params;
        let _native_provider;
        let _can_save_credentials;
        let _password_missing;
        let _x;
        let len;
        _url = reader.tgReadString();
        let flags = reader.readInt();

        _provider_id = reader.readInt();
        _bot_id = reader.readInt();
        _invoice = reader.tgReadObject();
        reader.readInt();
        _users = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _users.push(_x);
            }
            if (flags & 2) {
                _saved_credentials = reader.tgReadObject();
            }
            else {
                _saved_credentials = null
            }
            if (flags & 1) {
                _saved_info = reader.tgReadObject();
            }
            else {
                _saved_info = null
            }
            if (flags & 16) {
                _native_params = reader.tgReadObject();
            }
            else {
                _native_params = null
            }
            if (flags & 16) {
                _native_provider = reader.tgReadString();
            }
            else {
                _native_provider = null
            }
            _can_save_credentials = Boolean(flags & 4);
            _password_missing = Boolean(flags & 8);
            return new this({url:_url,
	providerId:_provider_id,
	botId:_bot_id,
	invoice:_invoice,
	users:_users,
	savedCredentials:_saved_credentials,
	savedInfo:_saved_info,
	nativeParams:_native_params,
	nativeProvider:_native_provider,
	canSaveCredentials:_can_save_credentials,
	passwordMissing:_password_missing})
        }
    }


class ValidatedRequestedInfo extends TLObject {
    static CONSTRUCTOR_ID = 0xd1451883;
    static SUBCLASS_OF_ID = 0x8f8044b7;

    /**
    Constructor for payments.ValidatedRequestedInfo: Instance of ValidatedRequestedInfo
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd1451883;
        this.SUBCLASS_OF_ID = 0x8f8044b7;

        this.shippingOptions = args.shippingOptions || null;
        this.id = args.id || null;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("831845d1","hex"),
            struct.pack('<I', (this.shippingOptions === undefined || this.shippingOptions === false || this.shippingOptions === null) ? 0 : 2 | (this.id === undefined || this.id === false || this.id === null) ? 0 : 1),
            (this.shippingOptions === undefined || this.shippingOptions === false || this.shippingOptions ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.shippingOptions.length),Buffer.concat(this.shippingOptions.map(x => x.bytes))]),
            (this.id === undefined || this.id === false || this.id ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.id)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _shipping_options;
        let _id;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 2) {
            reader.readInt();
            _shipping_options = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _shipping_options.push(_x);
                }
            }
            else {
                _shipping_options = null
            }
            if (flags & 1) {
                _id = reader.tgReadString();
            }
            else {
                _id = null
            }
            return new this({shippingOptions:_shipping_options,
	id:_id})
        }
    }


class PaymentResult extends TLObject {
    static CONSTRUCTOR_ID = 0x4e5f810d;
    static SUBCLASS_OF_ID = 0x8ae16a9d;

    /**
    Constructor for payments.PaymentResult: Instance of either PaymentResult, PaymentVerificationNeeded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4e5f810d;
        this.SUBCLASS_OF_ID = 0x8ae16a9d;

        this.updates = args.updates;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("0d815f4e","hex"),
            this.updates.bytes,
            ])
        }
    static fromReader(reader) {
        let _updates;
        let _x;
        let len;
        _updates = reader.tgReadObject();
        return new this({updates:_updates})
    }
}


class PaymentVerificationNeeded extends TLObject {
    static CONSTRUCTOR_ID = 0xd8411139;
    static SUBCLASS_OF_ID = 0x8ae16a9d;

    /**
    Constructor for payments.PaymentResult: Instance of either PaymentResult, PaymentVerificationNeeded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd8411139;
        this.SUBCLASS_OF_ID = 0x8ae16a9d;

        this.url = args.url;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("391141d8","hex"),
            TLObject.serializeBytes(this.url),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _x;
        let len;
        _url = reader.tgReadString();
        return new this({url:_url})
    }
}


class PaymentReceipt extends TLObject {
    static CONSTRUCTOR_ID = 0x500911e1;
    static SUBCLASS_OF_ID = 0x590093c9;

    /**
    Constructor for payments.PaymentReceipt: Instance of PaymentReceipt
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x500911e1;
        this.SUBCLASS_OF_ID = 0x590093c9;

        this.info = args.info || null;
        this.botId = args.botId;
        this.invoice = args.invoice;
        this.providerId = args.providerId;
        this.date = args.date;
        this.credentialsTitle = args.credentialsTitle;
        this.currency = args.currency;
        this.totalAmount = args.totalAmount;
        this.users = args.users;
        this.shipping = args.shipping || null;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("e1110950","hex"),
            (this.info === undefined || this.info === false || this.info ===null) ? Buffer.alloc(0) : [this.info.bytes],
            struct.pack('<I', (this.info === undefined || this.info === false || this.info === null) ? 0 : 1 | (this.shipping === undefined || this.shipping === false || this.shipping === null) ? 0 : 2),
            struct.pack('<i', this.botId),
            this.invoice.bytes,
            struct.pack('<i', this.providerId),
            struct.pack('<i', this.date),
            TLObject.serializeBytes(this.credentialsTitle),
            TLObject.serializeBytes(this.currency),
            readBufferFromBigInt(this.totalAmount,8,true,true),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.bytes)),
            (this.shipping === undefined || this.shipping === false || this.shipping ===null) ? Buffer.alloc(0) : [this.shipping.bytes],
            ])
        }
    static fromReader(reader) {
        let _info;
        let _flags;
        let _bot_id;
        let _invoice;
        let _provider_id;
        let _date;
        let _credentials_title;
        let _currency;
        let _total_amount;
        let _users;
        let _shipping;
        let _x;
        let len;
        if (flags & 1) {
            _info = reader.tgReadObject();
        }
        else {
            _info = null
        }
        let flags = reader.readInt();

        _bot_id = reader.readInt();
        _invoice = reader.tgReadObject();
        _provider_id = reader.readInt();
        _date = reader.readInt();
        _credentials_title = reader.tgReadString();
        _currency = reader.tgReadString();
        _total_amount = reader.readLong();
        reader.readInt();
        _users = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _users.push(_x);
            }
            if (flags & 2) {
                _shipping = reader.tgReadObject();
            }
            else {
                _shipping = null
            }
            return new this({info:_info,
	botId:_bot_id,
	invoice:_invoice,
	providerId:_provider_id,
	date:_date,
	credentialsTitle:_credentials_title,
	currency:_currency,
	totalAmount:_total_amount,
	users:_users,
	shipping:_shipping})
        }
    }


class SavedInfo extends TLObject {
    static CONSTRUCTOR_ID = 0xfb8fe43c;
    static SUBCLASS_OF_ID = 0xad3cf146;

    /**
    Constructor for payments.SavedInfo: Instance of SavedInfo
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfb8fe43c;
        this.SUBCLASS_OF_ID = 0xad3cf146;

        this.savedInfo = args.savedInfo || null;
        this.hasSavedCredentials = args.hasSavedCredentials || null;
    }
    get bytes() {
        return Buffer.concat([
            Buffer.from("3ce48ffb","hex"),
            struct.pack('<I', (this.savedInfo === undefined || this.savedInfo === false || this.savedInfo === null) ? 0 : 1 | (this.hasSavedCredentials === undefined || this.hasSavedCredentials === false || this.hasSavedCredentials === null) ? 0 : 2),
            (this.savedInfo === undefined || this.savedInfo === false || this.savedInfo ===null) ? Buffer.alloc(0) : [this.savedInfo.bytes],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _saved_info;
        let _has_saved_credentials;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 1) {
            _saved_info = reader.tgReadObject();
        }
        else {
            _saved_info = null
        }
        _has_saved_credentials = Boolean(flags & 2);
        return new this({savedInfo:_saved_info,
	hasSavedCredentials:_has_saved_credentials})
    }
}

module.exports = {
    PaymentForm,
    ValidatedRequestedInfo,
    PaymentResult,
    PaymentVerificationNeeded,
    PaymentReceipt,
    SavedInfo,
};
