{"version":3,"sources":["util/schedulers.ts","lib/teact.ts","hooks/useForceUpdate.ts","util/generateIdFor.ts","config.ts","util/orderBy.ts","lib/teactn.tsx","lib/teact-dom.ts","api/tdlib/utils.ts","../node_modules/parcel/src/builtins/bundle-url.js","../node_modules/parcel/src/builtins/bundle-loader.js","api/tdlib/index.ts","modules/tdlib/updaters/system.ts","modules/tdlib/updaters/users.ts","modules/tdlib/updaters/chats.ts","modules/tdlib/updaters/messages.ts","modules/tdlib/updaters/index.ts","modules/tdlib/actions/system.ts","modules/tdlib/actions/chats.ts","util/buildCollectionById.ts","modules/tdlib/actions/messages.ts","modules/tdlib/actions/index.ts","util/dateFormat.ts","modules/tdlib/helpers/users.ts","modules/tdlib/helpers/chats.ts","modules/tdlib/helpers/messages.ts","modules/tdlib/helpers/index.ts","modules/tdlib/selectors/users.ts","modules/tdlib/selectors/chats.ts","modules/tdlib/selectors/messages.ts","modules/tdlib/selectors/index.ts","modules/tdlib/index.ts","modules/auth.ts","modules/chats.ts","modules/index.ts","components/Loading.tsx","components/ui/Button.tsx","components/ui/InputText.tsx","components/ui/Select.tsx","pages/auth/components/AuthPhoneNumber.tsx","pages/auth/components/AuthCode.tsx","pages/auth/Auth.tsx","util/toArray.ts","components/Avatar.tsx","components/MessageOutgoingStatus.tsx","pages/main/components/left/LastMessageMeta.tsx","pages/main/components/left/Badge.tsx","pages/main/components/left/Chat.tsx","pages/main/components/left/ChatList.tsx","components/ui/DropdownMenu.tsx","components/ui/DropdownMenuItem.tsx","pages/main/components/left/SearchInput.tsx","pages/main/components/left/LeftHeader.tsx","pages/main/components/left/LeftColumn.tsx","pages/main/components/middle/PrivateChatHeader.tsx","pages/main/components/middle/GroupHeader.tsx","../node_modules/emoji-regex/index.js","util/parseEmojiOnlyString.ts","pages/main/components/middle/MessageMeta.tsx","pages/main/components/middle/Message.tsx","pages/main/components/middle/MessageList.tsx","pages/main/components/middle/MiddleFooter.tsx","pages/main/components/middle/MiddleColumn.tsx","pages/main/Main.tsx","App.tsx","index.tsx","../node_modules/parcel/src/builtins/loaders/browser/js-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","script","document","createElement","async","charset","src","onerror","onload","getElementsByTagName","appendChild"],"mappings":"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","file":"src.e1e76513.js","sourceRoot":"../src","sourcesContent":["type AnyArgsFunction = (...args: any) => void;\ntype NoArgsFunction = () => void;\ntype Scheduler = typeof requestAnimationFrame | typeof onNextTick | typeof runNow;\n\nexport function debounce<F extends NoArgsFunction>(\n  fn: F,\n  ms: number,\n  shouldRunFirst = true,\n  shouldRunLast = true,\n) {\n  let waitingTimeout: number | null = null;\n\n  return () => {\n    if (waitingTimeout) {\n      clearTimeout(waitingTimeout);\n      waitingTimeout = null;\n    } else if (shouldRunFirst) {\n      fn();\n    }\n\n    // TODO `window.` is a workaround for TS.\n    waitingTimeout = window.setTimeout(() => {\n      if (shouldRunLast) {\n        fn();\n      }\n\n      waitingTimeout = null;\n    }, ms);\n  };\n}\n\nexport function throttle<F extends AnyArgsFunction>(\n  fn: F,\n  ms: number,\n  shouldRunFirst = true,\n) {\n  let interval: number | null = null;\n  let isPending: boolean;\n  let args: Parameters<F>;\n\n  return (..._args: Parameters<F>) => {\n    isPending = true;\n    args = _args;\n\n    if (!interval) {\n      if (shouldRunFirst) {\n        isPending = false;\n        fn(...args);\n      }\n\n      interval = window.setInterval(() => {\n        if (!isPending) {\n          window.clearInterval(interval!);\n          interval = null;\n          return;\n        }\n\n        isPending = false;\n        fn(...args);\n      }, ms);\n    }\n  };\n}\n\nexport function throttleWithRaf<F extends AnyArgsFunction>(fn: F) {\n  return throttleWith(requestAnimationFrame, fn);\n}\n\nexport function throttleWithNextTick<F extends AnyArgsFunction>(fn: F) {\n  return throttleWith(onNextTick, fn);\n}\n\nexport function throttleWithNow<F extends AnyArgsFunction>(fn: F) {\n  return throttleWith(runNow, fn);\n}\n\nexport function throttleWith<F extends AnyArgsFunction>(schedulerFn: Scheduler, fn: F) {\n  let waiting = false;\n  let args: Parameters<F>;\n\n  return (..._args: Parameters<F>) => {\n    args = _args;\n\n    if (!waiting) {\n      waiting = true;\n\n      schedulerFn(() => {\n        waiting = false;\n        fn(...args);\n      });\n    }\n  };\n}\n\nexport function onNextTick(cb: NoArgsFunction) {\n  Promise.resolve().then(cb);\n}\n\nfunction runNow(fn: NoArgsFunction) {\n  fn();\n}\n","// import React from 'react';\n// export { useState } from 'react';\n// export default React;\n\nimport { throttleWithRaf } from '../util/schedulers';\n\nexport type Props = AnyLiteral;\nexport type FC<P extends Props = any> = (props: P) => VirtualElementComponent;\n\nexport enum VirtualElementTypesEnum {\n  Tag,\n  Component,\n}\n\nexport const VIRTUAL_ELEMENT_EMPTY = Symbol('VirtualElementEmpty');\nexport type VirtualElementEmpty = typeof VIRTUAL_ELEMENT_EMPTY;\n\nexport type VirtualElementText = string;\n\nexport interface VirtualElementTag {\n  type: VirtualElementTypesEnum.Tag,\n  tag: string,\n  props: Props,\n  children: VirtualElementChildren,\n}\n\nexport interface VirtualElementComponent {\n  type: VirtualElementTypesEnum.Component,\n  componentInstance: ComponentInstance,\n  props: Props,\n  children: VirtualElementChildren,\n}\n\ninterface ComponentInstance {\n  $element: VirtualElementComponent,\n  $prevElement: VirtualElementComponent,\n  Component: FC,\n  name: string,\n  key?: string,\n  props: Props,\n  children: VirtualElementChildren,\n  state: ComponentInstanceState,\n  render: () => VirtualElementComponent,\n  forceUpdate: Function,\n  onUpdate?: Function,\n  isUnmounted: boolean,\n}\n\nexport type VirtualElement = VirtualElementTag | VirtualElementComponent;\nexport type VirtualElementChild = VirtualElement | VirtualElementEmpty | VirtualElementText;\nexport type VirtualElementChildren = VirtualElementChild[];\n// Fix for default JSX type error.\nexport type JsxChildren = VirtualElementChildren | VirtualElementChild;\n\ninterface ComponentInstanceState {\n  cursor: number,\n  byCursor: {\n    value: any,\n    setter: Function\n  }[],\n}\n\nlet renderingInstance: ComponentInstance;\n\nexport function isEmptyElement($element: VirtualElementChild): $element is VirtualElementEmpty {\n  return $element === VIRTUAL_ELEMENT_EMPTY;\n}\n\nexport function isTextElement($element: VirtualElementChild): $element is VirtualElementText {\n  return typeof $element === 'string';\n}\n\nexport function isTagElement($element: VirtualElementChild): $element is VirtualElementTag {\n  return typeof $element === 'object' && $element.type === VirtualElementTypesEnum.Tag;\n}\n\nexport function isComponentElement($element: VirtualElementChild): $element is VirtualElementComponent {\n  return typeof $element === 'object' && $element.type === VirtualElementTypesEnum.Component;\n}\n\nexport function isRealElement($element: VirtualElementChild): $element is VirtualElement {\n  return isTagElement($element) || isComponentElement($element);\n}\n\nfunction createElement(\n  tag: string | FC,\n  props: Props,\n  ...children: any[]\n): VirtualElement {\n  if (!props) {\n    props = {};\n  }\n\n  if (typeof tag === 'function') {\n    const componentInstance: ComponentInstance = {\n      $element: {} as VirtualElementComponent,\n      $prevElement: {} as VirtualElementComponent,\n      Component: tag,\n      key: props && props.key ? String(props.key) : undefined,\n      name: tag.name,\n      props,\n      children,\n      isUnmounted: false,\n      state: {\n        cursor: 0,\n        byCursor: [],\n      },\n      render() {\n        const rendered = renderComponent(componentInstance);\n\n        if (rendered) {\n          const renderedChildren = getUpdatedChildren(componentInstance.$element, [rendered]);\n          componentInstance.$prevElement = componentInstance.$element;\n          componentInstance.$element = createComponentElement(componentInstance, renderedChildren);\n        }\n\n        return componentInstance.$element;\n      },\n      forceUpdate: throttleWithRaf((newProps?: Props) => {\n        if (newProps) {\n          componentInstance.props = newProps;\n        }\n\n        if (componentInstance.onUpdate && !componentInstance.isUnmounted) {\n          const currentElement = componentInstance.$element;\n          componentInstance.render();\n\n          if (componentInstance.$element !== currentElement) {\n            componentInstance.onUpdate(componentInstance.$prevElement, componentInstance.$element);\n          }\n        }\n      }),\n    };\n\n    componentInstance.$element = createComponentElement(componentInstance);\n\n    return componentInstance.$element;\n  }\n\n  const childrenArray = Array.isArray(children[0]) ? children[0] : children;\n\n  return {\n    type: VirtualElementTypesEnum.Tag,\n    tag,\n    props,\n    children: childrenArray.map((child): VirtualElementChild => {\n      if (child === false || child === null || child === undefined) {\n        // Support for `&&` operators.\n        return VIRTUAL_ELEMENT_EMPTY;\n      } else if (isRealElement(child)) {\n        return child;\n      } else {\n        return String(child);\n      }\n    }),\n  };\n}\n\nfunction createComponentElement(\n  componentInstance: ComponentInstance,\n  children: VirtualElementChildren = [],\n): VirtualElementComponent {\n  const { props } = componentInstance;\n\n  return {\n    componentInstance,\n    type: VirtualElementTypesEnum.Component,\n    props,\n    children,\n  };\n}\n\nfunction renderComponent(componentInstance: ComponentInstance) {\n  renderingInstance = componentInstance;\n  renderingInstance.state.cursor = 0;\n\n  const { Component, props, children } = componentInstance;\n\n  return Component({\n    ...props,\n    children,\n  });\n}\n\nfunction getUpdatedChildren($element: VirtualElement, newChildren: VirtualElementChildren) {\n  const currentLength = $element.children.length;\n  const newLength = newChildren.length;\n  const maxLength = Math.max(currentLength, newLength);\n\n  const children: VirtualElementChildren = [];\n  for (let i = 0; i < maxLength; i++) {\n    children.push(getUpdatedChild($element, i, $element.children[i], newChildren[i]) || VIRTUAL_ELEMENT_EMPTY);\n  }\n  return children;\n}\n\nfunction getUpdatedChild(\n  $element: VirtualElement,\n  childIndex: number,\n  currentChild: VirtualElementChild,\n  newChild: VirtualElementChild,\n) {\n  if (isRealElement(currentChild) && isRealElement(newChild) && !hasElementChanged(currentChild, newChild)) {\n    if (isComponentElement(currentChild) && isComponentElement(newChild)) {\n      currentChild.componentInstance.props = newChild.componentInstance.props;\n      // TODO Support new children\n      return currentChild.componentInstance.render();\n    } else {\n      newChild.children = getUpdatedChildren(currentChild, newChild.children);\n    }\n  } else {\n    if (isComponentElement(currentChild)) {\n      // TODO Remove hooks.\n      currentChild.componentInstance.isUnmounted = true;\n    }\n\n    if (isComponentElement(newChild)) {\n      return newChild.componentInstance.render();\n    }\n  }\n\n  return newChild;\n}\n\nexport function hasElementChanged($old: VirtualElementChild, $new: VirtualElementChild) {\n  if (typeof $old !== typeof $new) {\n    return true;\n  } else if (!isRealElement($old) || !isRealElement($new)) {\n    return $old !== $new;\n  } else if ($old.type !== $new.type) {\n    return true;\n  } else if (isTagElement($old) && isTagElement($new)) {\n    return $old.tag !== $new.tag;\n  } else if (isComponentElement($old) && isComponentElement($new)) {\n    // TODO Support keys.\n    return $old.componentInstance.Component !== $new.componentInstance.Component;\n  }\n\n  return false;\n}\n\nexport function useState(initial: any) {\n  const { cursor, byCursor } = renderingInstance.state;\n\n  if (byCursor[cursor] === undefined) {\n    byCursor[cursor] = {\n      value: initial,\n      setter: ((componentInstance) => (newValue: any) => {\n        if (byCursor[cursor].value !== newValue) {\n          byCursor[cursor].value = newValue;\n          componentInstance.forceUpdate();\n        }\n      })(renderingInstance),\n    };\n  }\n\n  renderingInstance.state.cursor++;\n\n  return [\n    byCursor[cursor].value,\n    byCursor[cursor].setter,\n  ];\n}\n\nexport default {\n  createElement,\n};\n","import { useState } from '../lib/teact';\n\nexport default () => {\n  const [, setRandom] = useState(0);\n\n  return () => {\n    setRandom(Math.random());\n  };\n};\n","export default (store: AnyLiteral) => {\n  let id;\n\n  do {\n    id = String(Math.random()).replace('0.', 'id');\n  } while (store.hasOwnProperty(id));\n\n  return id;\n};\n","export const DEBUG = true;\n","export default <T = AnyLiteral>(\n  collection: T[],\n  orderKey: string | ((member: T) => any),\n  mode: 'asc' | 'desc' = 'asc',\n): T[] => {\n  return collection.sort((a, b) => {\n    let aValue;\n    let bValue;\n\n    if (typeof orderKey === 'function') {\n      aValue = orderKey(a);\n      bValue = orderKey(b);\n    } else {\n      // @typing-hack.\n      aValue = (a as AnyLiteral)[orderKey];\n      bValue = (b as AnyLiteral)[orderKey];\n    }\n\n    return mode === 'asc' ? bValue - aValue : aValue - bValue;\n  });\n};\n","// TODO default?\n// import React, { getGlobal, setGlobal } from 'reactn';\n// export { addReducer, getGlobal, setGlobal, withGlobal, useGlobal } from 'reactn';\n\nimport { UpdateAuthorizationStateType } from '../api/tdlib/types';\nimport useForceUpdate from '../hooks/useForceUpdate';\nimport generateIdFor from '../util/generateIdFor';\nimport { throttleWithRaf } from '../util/schedulers';\n\n/* Polyfill start */\nimport React, { FC, Props, useState } from './teact';\nimport { DEBUG } from '../config';\nimport { ApiUser, ApiChat, ApiMessage } from '../modules/tdlib/types';\nimport orderBy from '../util/orderBy';\n\nexport default React;\n\nexport type GlobalState = {\n  isInitialized: boolean,\n\n  users: {\n    byId: Record<number, ApiUser>,\n  },\n\n  chats: {\n    selectedId?: number;\n    ids: number[],\n    byId: Record<number, ApiChat>,\n  },\n\n  messages: {\n    selectedId?: number;\n    byChatId: Record<number, {\n      byId: Record<number, ApiMessage>\n    }>,\n  },\n\n  // TODO Move to `auth`.\n  isLoggingOut?: boolean,\n  authState?: UpdateAuthorizationStateType,\n  authPhoneNumber?: string,\n};\n\nconst INITIAL_STATE: GlobalState = {\n  isInitialized: false,\n\n  users: {\n    byId: {},\n  },\n\n  chats: {\n    ids: [],\n    byId: {},\n  },\n\n  messages: {\n    byChatId: {},\n  },\n};\n\ntype ActionTypes = (\n  // system\n  'init' | 'setAuthPhoneNumber' | 'setAuthCode' | 'signOut' |\n  // chats\n  'loadChats' | 'loadMoreChats' | 'selectChat' |\n  // messages\n  'loadChatMessages' | 'loadMoreChatMessages' | 'selectMessage' | 'sendTextMessage'\n);\n\nexport type DispatchMap = Record<ActionTypes, Function>;\n\ntype ActionPayload = AnyLiteral;\n\ntype Reducer = (\n  global: GlobalState,\n  actions: DispatchMap,\n  payload?: ActionPayload,\n) => GlobalState | void;\n\ntype MapStateToProps = ((global: GlobalState, ownProps?: any) => AnyLiteral | null);\ntype MapActionsToProps = ((setGlobal: Function, actions: DispatchMap) => Partial<DispatchMap> | null);\n\nlet global = INITIAL_STATE;\n// TODO Remove before release.\n(window as any).getGlobal = getGlobal;\n\nconst reducers: Record<string, Reducer[]> = {};\nconst callbacks: Function[] = [updateContainers];\nconst actions = {} as DispatchMap;\nconst containers: Record<string, {\n  mapStateToProps: MapStateToProps;\n  mapReducersToProps: MapActionsToProps;\n  ownProps: Props;\n  mappedProps: Props;\n  forceUpdate: Function;\n  areMappedPropsChanged: boolean;\n  DEBUG_updates: number;\n  DEBUG_componentName: string;\n}> = {};\n\nfunction runCallbacks() {\n  callbacks.forEach((cb) => cb(global));\n}\n\nconst runCallbacksThrottled = throttleWithRaf(runCallbacks);\n\nexport function setGlobal(newGlobal?: GlobalState) {\n  if (typeof newGlobal === 'object' && newGlobal !== global) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.log('[State] UPDATE', { global, newGlobal });\n    }\n\n    global = newGlobal;\n    runCallbacksThrottled();\n  }\n}\n\nexport function getGlobal() {\n  return global;\n}\n\nexport function getDispatch() {\n  return actions;\n}\n\nfunction onDispatch(name: string, payload?: ActionPayload) {\n  if (reducers[name]) {\n    reducers[name].forEach((reducer) => {\n      const newGlobal = reducer(global, actions, payload);\n      if (newGlobal) {\n        setGlobal(newGlobal);\n      }\n    });\n  }\n}\n\nfunction updateContainers() {\n  Object.keys(containers).forEach((id) => {\n    const {\n      mapStateToProps, mapReducersToProps, ownProps, mappedProps, forceUpdate,\n    } = containers[id];\n    const newMappedProps = {\n      ...mapStateToProps(global, ownProps),\n      ...mapReducersToProps(setGlobal, actions),\n    };\n\n    if (Object.keys(newMappedProps).length && !arePropsShallowEqual(mappedProps, newMappedProps)) {\n      containers[id].mappedProps = newMappedProps;\n      containers[id].areMappedPropsChanged = true;\n      containers[id].DEBUG_updates++;\n\n      forceUpdate();\n    }\n  });\n}\n\nexport function addReducer(name: ActionTypes, reducer: Reducer) {\n  if (!reducers[name]) {\n    reducers[name] = [];\n\n    actions[name] = (payload?: ActionPayload) => {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[State] ACTION', name, payload);\n      }\n\n      onDispatch(name, payload);\n    };\n  }\n\n  reducers[name].push(reducer);\n}\n\nexport function withGlobal(\n  mapStateToProps: MapStateToProps = () => ({}),\n  mapReducersToProps: MapActionsToProps = () => ({}),\n) {\n  return (Component: FC) => {\n    return function Container(props: Props) {\n      const [id] = useState(generateIdFor(containers));\n      const forceUpdate = useForceUpdate();\n\n      // TODO Support unmount.\n      if (!containers[id]) {\n        containers[id] = {\n          mapStateToProps,\n          mapReducersToProps,\n          ownProps: props,\n          mappedProps: {},\n          areMappedPropsChanged: false,\n          forceUpdate,\n          DEBUG_updates: 0,\n          DEBUG_componentName: Component.name,\n        };\n      }\n\n      if (containers[id].areMappedPropsChanged) {\n        containers[id].areMappedPropsChanged = false;\n      } else {\n        containers[id].ownProps = props;\n        containers[id].mappedProps = {\n          ...mapStateToProps(global, props),\n          ...mapReducersToProps(setGlobal, actions),\n        };\n      }\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      return <Component {...containers[id].mappedProps} {...props} />;\n    };\n  };\n}\n\nfunction arePropsShallowEqual(currentProps: Props, newProps: Props) {\n  const currentKeys = Object.keys(currentProps);\n  const currentKeysLength = currentKeys.length;\n  const newKeysLength = Object.keys(newProps).length;\n\n  if (currentKeysLength !== newKeysLength) {\n    return false;\n  }\n\n  return currentKeys.every((prop) => currentProps[prop] === newProps[prop]);\n}\n\ndocument.addEventListener('dblclick', () => {\n  // eslint-disable-next-line no-console\n  console.log('GLOBAL CONTAINERS', orderBy(Object.values(containers), 'DEBUG_updates'));\n});\n","// import ReactDOM from 'react-dom';\n// export default ReactDOM;\n\nimport {\n  hasElementChanged,\n  isComponentElement, isEmptyElement, isRealElement, isTextElement, isTagElement, VIRTUAL_ELEMENT_EMPTY,\n  VirtualElement, VirtualElementChild, VirtualElementComponent,\n} from './teact';\n\nlet $currentRoot: VirtualElementComponent;\n\nfunction render($element: VirtualElementComponent, parentEl: HTMLElement | null) {\n  if (!parentEl) {\n    return;\n  }\n\n  renderWithVirtual(parentEl, 0, $currentRoot, $element);\n\n  $currentRoot = $element;\n}\n\nfunction renderWithVirtual(\n  parentEl: HTMLElement,\n  childIndex: number,\n  $current: VirtualElementChild | undefined,\n  $new: VirtualElementChild,\n) {\n  const currentEl = parentEl.childNodes[childIndex];\n\n  if ($current === undefined && $new !== undefined) {\n    parentEl.appendChild(createNode($new, parentEl, childIndex));\n  } else if ($current !== undefined && $new === undefined) {\n    parentEl.removeChild(currentEl);\n  } else if ($current !== undefined && $new !== undefined) {\n    if (hasElementChanged($current, $new)) {\n      parentEl.replaceChild(createNode($new, parentEl, childIndex), currentEl);\n    } else if (isRealElement($current) && isRealElement($new)) {\n      if (isTagElement($current)) {\n        updateAttributes($current, $new, currentEl as HTMLElement);\n      }\n\n      if (isComponentElement($new)) {\n        renderWithVirtual(parentEl, childIndex, getActualPrevElement($current.children[0]), $new.children[0]);\n      } else {\n        renderChildren($current, $new, currentEl as HTMLElement);\n      }\n    }\n  }\n}\n\nfunction initComponentElement($element: VirtualElementComponent, parentEl: HTMLElement, childIndex: number) {\n  $element.componentInstance.onUpdate = ($previous: VirtualElementComponent, $updated: VirtualElementComponent) => {\n    renderWithVirtual(parentEl, childIndex, $previous, $updated);\n  };\n\n  return $element.children.length ? $element : $element.componentInstance.render();\n}\n\n// Child components tree is always changed on each render so we need to get updated reference for `prevElement`.\nfunction getActualPrevElement($element: VirtualElementChild): VirtualElementChild {\n  return isComponentElement($element) ? $element.componentInstance.$prevElement : $element;\n}\n\nfunction createNode($element: VirtualElementChild, parentEl: HTMLElement, childIndex: number): Node {\n  if (isEmptyElement($element)) {\n    return document.createTextNode('');\n  }\n\n  if (isTextElement($element)) {\n    return document.createTextNode($element);\n  }\n\n  if (isComponentElement($element)) {\n    $element = initComponentElement($element, parentEl, childIndex);\n    return createNode($element.children[0] as VirtualElementChild, parentEl, childIndex);\n  }\n\n  const { tag, props, children = [] } = $element;\n  const element = document.createElement(tag);\n\n  if (isTagElement($element)) {\n    Object.keys(props).forEach((key) => {\n      addAttribute(element, key, props[key]);\n    });\n  }\n\n  children.forEach(($child, i) => {\n    renderWithVirtual(element, i, undefined, $child);\n  });\n\n  return element;\n}\n\nfunction renderChildren($current: VirtualElement, $new: VirtualElement, currentEl: HTMLElement) {\n  const currentLength = isRealElement($current) ? $current.children.length : 0;\n  const newLength = isRealElement($new) ? $new.children.length : 0;\n  const maxLength = Math.max(currentLength, newLength);\n\n  for (let i = 0; i < maxLength; i++) {\n    const $currentChild = getActualPrevElement($current.children[i]);\n\n    renderWithVirtual(\n      currentEl,\n      i,\n      $currentChild,\n      isRealElement($new) ? $new.children[i] : VIRTUAL_ELEMENT_EMPTY,\n    );\n  }\n}\n\nfunction updateAttributes($current: VirtualElement, $new: VirtualElement, element: HTMLElement) {\n  const currentKeys = Object.keys($current.props);\n  const newKeys = Object.keys($new.props);\n\n  currentKeys.forEach((key) => {\n    if (!$new.props.hasOwnProperty(key)) {\n      removeAttribute(element, key, $current.props[key]);\n    }\n  });\n\n  newKeys.forEach((key) => {\n    if (hasAttribute(element, key)) {\n      if ($current.props[key] !== $new.props[key]) {\n        removeAttribute(element, key, $current.props[key]);\n      }\n    }\n\n    addAttribute(element, key, $new.props[key]);\n  });\n}\n\nfunction hasAttribute(element: HTMLElement, key: string) {\n  if (key === 'className') {\n    return element.className !== undefined && element.className !== '';\n  } else if (key === 'className') {\n    return (element as HTMLInputElement).value !== undefined && (element as HTMLInputElement).value !== '';\n  } else if (key.startsWith('on')) {\n    // There is no way to check event listener, so there will be some redundant removes, but it is fine.\n    return true;\n  } else {\n    return element.hasAttribute(key);\n  }\n}\n\nfunction addAttribute(element: HTMLElement, key: string, value: any) {\n  if (key === 'className') {\n    element.className = value;\n  } else if (key === 'value') {\n    (element as HTMLInputElement).value = value;\n  } else if (key.startsWith('on')) {\n    element.addEventListener(key.replace(/^on/, '').toLowerCase(), value);\n\n    if (key === 'onChange') {\n      setupAdditionalOnChangeHandlers(element, value);\n    }\n  } else {\n    element.setAttribute(key, value);\n  }\n}\n\nfunction removeAttribute(element: HTMLElement, key: string, value: any) {\n  if (key === 'className') {\n    element.className = '';\n  } else if (key === 'value') {\n    (element as HTMLInputElement).value = '';\n  } else if (key.startsWith('on')) {\n    element.removeEventListener(key.replace(/^on/, '').toLowerCase(), value);\n\n    if (key === 'onChange') {\n      removeAdditionalOnChangeHandlers(element, value);\n    }\n  } else {\n    element.removeAttribute(key);\n  }\n}\n\nfunction setupAdditionalOnChangeHandlers(element: HTMLElement, handler: EventHandlerNonNull) {\n  element.addEventListener('input', handler);\n  element.addEventListener('paste', handler);\n}\n\nfunction removeAdditionalOnChangeHandlers(element: HTMLElement, handler: EventHandlerNonNull) {\n  element.removeEventListener('paste', handler);\n  element.removeEventListener('input', handler);\n}\n\nexport default { render };\n","export function getOsName() {\n  const { userAgent } = window.navigator;\n\n  if (userAgent.includes('Windows NT 10.0')) return 'Windows 10';\n  if (userAgent.includes('Windows NT 6.2')) return 'Windows 8';\n  if (userAgent.includes('Windows NT 6.1')) return 'Windows 7';\n  if (userAgent.includes('Windows NT 6.0')) return 'Windows Vista';\n  if (userAgent.includes('Windows NT 5.1')) return 'Windows XP';\n  if (userAgent.includes('Windows NT 5.0')) return 'Windows 2000';\n  if (userAgent.includes('Mac')) return 'Mac/iOS';\n  if (userAgent.includes('X11')) return 'UNIX';\n  if (userAgent.includes('Linux')) return 'Linux';\n\n  return 'Unknown';\n}\n\nexport function getBrowser() {\n  const isIE = /* @cc_on!@ */ false;\n  const isEdge = !isIE && !!window.StyleMedia;\n\n  if (navigator.userAgent.includes('Chrome') && !isEdge) {\n    return 'Chrome';\n  } else if (navigator.userAgent.includes('Safari') && !isEdge) {\n    return 'Safari';\n  } else if (navigator.userAgent.includes('Firefox')) {\n    return 'Firefox';\n  } else if (navigator.userAgent.includes('MSIE')) {\n    // IF IE > 10\n    return 'IE';\n  } else if (isEdge) {\n    return 'Edge';\n  } else {\n    return 'Unknown';\n  }\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","import { DEBUG } from '../../config';\nimport { getBrowser, getOsName } from './utils';\n\nlet client: any;\n\nconst INIT_OPTIONS = {\n  logVerbosityLevel: 1,\n  jsLogVerbosityLevel: 3,\n  mode: 'wasm',\n  prefix: 'tdlib',\n  readOnly: false,\n  isBackground: false,\n  useDatabase: false,\n};\n\nconst TD_PARAMETERS = {\n  '@type': 'tdParameters',\n  use_test_dc: false,\n  system_language_code: navigator.language || 'en',\n  device_model: getBrowser(),\n  system_version: getOsName(),\n  application_version: '0.0.1',\n  use_secret_chats: false,\n  use_message_database: true,\n  use_file_database: false,\n  database_directory: '/db',\n  files_directory: '/',\n};\n\nlet TdClient: any;\n\nexport async function init(onUpdate: Function) {\n  if (DEBUG) {\n    // eslint-disable-next-line no-console\n    console.log('[TdLib] INIT');\n  }\n\n  if (!TdClient) {\n    // @ts-ignore\n    const module = await import('tdweb/dist/tdweb');\n    TdClient = module.default;\n  }\n\n  client = new TdClient(INIT_OPTIONS);\n  client.onUpdate = onUpdate;\n}\n\nexport function sendParameters() {\n  const apiId = process.env.REACT_APP_TELEGRAM_API_ID;\n  const apiHash = process.env.REACT_APP_TELEGRAM_API_HASH;\n\n  if (!apiId || !apiHash) {\n    throw new Error('Provide `REACT_APP_TELEGRAM_API_ID` and `REACT_APP_TELEGRAM_API_HASH` env vars.');\n  }\n\n  send({\n    '@type': 'setTdlibParameters',\n    parameters: {\n      ...TD_PARAMETERS,\n      api_id: apiId,\n      api_hash: apiHash,\n    },\n  });\n}\n\n// TODO Types.\nexport async function send(request: any) {\n  if (DEBUG) {\n    // eslint-disable-next-line no-console\n    console.log('[TdLib] SEND', request);\n  }\n\n  try {\n    const result = await client.send(request);\n\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.log('[TdLib] RECEIVE', result);\n    }\n\n    return result;\n  } catch (err) {\n    // TODO Notification\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error('[TdLib] ERROR', err);\n    }\n\n    return null;\n  }\n}\n","import { getGlobal, setGlobal } from '../../../lib/teactn';\n\nimport * as TdLib from '../../../api/tdlib';\nimport { TdLibUpdate, TdLibUpdateAuthorizationState } from '../../../api/tdlib/types';\n\nexport function onUpdate(update: TdLibUpdate) {\n  switch (update['@type']) {\n    case 'updateAuthorizationState':\n      onUpdateAuthorizationState(update);\n      break;\n  }\n}\n\nfunction onUpdateAuthorizationState(update: TdLibUpdateAuthorizationState) {\n  setGlobal({\n    ...getGlobal(),\n    authState: update.authorization_state['@type'],\n  });\n\n  switch (update.authorization_state['@type']) {\n    case 'authorizationStateLoggingOut':\n      setGlobal({\n        ...getGlobal(),\n        isLoggingOut: true,\n      });\n      break;\n    case 'authorizationStateWaitTdlibParameters':\n      TdLib.sendParameters();\n      break;\n    case 'authorizationStateWaitEncryptionKey':\n      TdLib.send({ '@type': 'checkDatabaseEncryptionKey' });\n      break;\n    case 'authorizationStateWaitPhoneNumber':\n      break;\n    case 'authorizationStateWaitCode':\n      break;\n    case 'authorizationStateWaitPassword':\n      break;\n    case 'authorizationStateWaitRegistration':\n      TdLib.send({\n        '@type': 'registerUser',\n        first_name: 'Tester',\n        last_name: 'Account',\n      });\n      break;\n    case 'authorizationStateReady':\n      setGlobal({\n        ...getGlobal(),\n        isLoggingOut: false,\n      });\n      break;\n    case 'authorizationStateClosing':\n      break;\n    case 'authorizationStateClosed':\n      if (!getGlobal().isLoggingOut) {\n        document.title += ': Zzz…';\n      } else {\n        TdLib.init(onUpdate);\n      }\n      break;\n    default:\n      break;\n  }\n}\n","import { getGlobal, setGlobal } from '../../../lib/teactn';\n\nimport { ApiUser } from '../types/users';\nimport { TdLibUpdate } from '../../../api/tdlib/types';\n\nexport function onUpdate(update: TdLibUpdate) {\n  switch (update['@type']) {\n    case 'updateUser': {\n      const { user } = update;\n\n      updateUser(user.id, user);\n\n      break;\n    }\n\n    case 'updateUserFullInfo': {\n      const { user_id, user_full_info } = update;\n\n      updateUser(user_id, user_full_info);\n\n      break;\n    }\n\n    case 'updateUserStatus': {\n      const { user_id, status } = update;\n\n      updateUser(user_id, { status });\n\n      break;\n    }\n  }\n}\n\nfunction updateUser(userId: number, userUpdate: Partial<ApiUser>) {\n  const global = getGlobal();\n\n  setGlobal({\n    ...global,\n    users: {\n      ...global.users,\n      byId: {\n        ...global.users.byId,\n        [userId]: {\n          ...global.users.byId[userId],\n          ...userUpdate,\n        },\n      },\n    },\n  });\n}\n","import { getGlobal, setGlobal } from '../../../lib/teactn';\n\nimport { TdLibUpdate } from '../../../api/tdlib/types';\nimport { ApiChat } from '../types/chats';\n\nexport function onUpdate(update: TdLibUpdate) {\n  switch (update['@type']) {\n    case 'updateNewChat': {\n      updateChat(update.chat.id, update.chat);\n\n      break;\n    }\n\n    case 'updateChatLastMessage': {\n      const { chat_id, order, last_message } = update;\n      const chat = getGlobal().chats.byId[chat_id] || {};\n\n      updateChat(chat_id, {\n        last_message,\n        // @magic\n        order: (order === '0' && chat.order) || order,\n      });\n\n      break;\n    }\n\n    case 'updateChatReadInbox': {\n      const { chat_id, last_read_inbox_message_id, unread_count } = update;\n\n      updateChat(chat_id, {\n        last_read_inbox_message_id,\n        unread_count,\n      });\n\n      break;\n    }\n\n    case 'updateChatReadOutbox': {\n      const { chat_id, last_read_outbox_message_id } = update;\n\n      updateChat(chat_id, {\n        last_read_outbox_message_id,\n      });\n\n      break;\n    }\n  }\n}\n\nfunction updateChat(chatId: number, chatUpdate: Partial<ApiChat>) {\n  const global = getGlobal();\n\n  setGlobal({\n    ...global,\n    chats: {\n      ...global.chats,\n      byId: {\n        ...global.chats.byId,\n        [chatId]: {\n          ...global.chats.byId[chatId],\n          ...chatUpdate,\n        },\n      },\n    },\n  });\n}\n","import { getGlobal, setGlobal } from '../../../lib/teactn';\n\nimport { TdLibUpdate } from '../../../api/tdlib/types';\nimport { ApiMessage } from '../types/messages';\n\nexport function onUpdate(update: TdLibUpdate) {\n  switch (update['@type']) {\n    case 'updateNewMessage': {\n      const { message } = update;\n\n      updateMessage(message.chat_id, message.id, message);\n\n      break;\n    }\n\n    case 'updateMessageSendSucceeded': {\n      const { message, old_message_id } = update;\n\n      replaceMessage(message.chat_id, old_message_id, message);\n\n      break;\n    }\n\n    // case 'updateMessageSendFailed': {\n    //   const { message, old_message_id } = update;\n    //\n    //   updateMessage(message.chat_id, old_message_id, message);\n    //\n    //   break;\n    // }\n  }\n}\n\nfunction updateMessage(chatId: number, messageId: number, messageUpdate: Partial<ApiMessage>) {\n  const global = getGlobal();\n\n  setGlobal({\n    ...global,\n    messages: {\n      ...global.messages,\n      byChatId: {\n        ...global.messages.byChatId,\n        [chatId]: {\n          byId: {\n            ...(global.messages.byChatId[chatId] || {}).byId,\n            [messageId]: {\n              ...((global.messages.byChatId[chatId] || {}).byId || {})[messageId],\n              ...messageUpdate,\n            },\n          },\n        },\n      },\n    },\n  });\n}\n\nfunction replaceMessage(chatId: number, oldMessageId: number, message: ApiMessage) {\n  const global = getGlobal();\n\n  const newMessageId = message.id;\n\n  const newGlobal = {\n    ...global,\n    messages: {\n      ...global.messages,\n      byChatId: {\n        ...global.messages.byChatId,\n        [chatId]: {\n          byId: {\n            ...(global.messages.byChatId[chatId] || {}).byId,\n            [newMessageId]: message,\n          },\n        },\n      },\n    },\n  };\n\n  delete newGlobal.messages.byChatId[chatId].byId[oldMessageId];\n\n  setGlobal(newGlobal);\n}\n","import { TdLibUpdate } from '../../../api/tdlib/types';\n\nimport { DEBUG } from '../../../config';\nimport * as system from './system';\nimport * as users from './users';\nimport * as chats from './chats';\nimport * as messages from './messages';\n\nexport default function onUpdate(update: TdLibUpdate) {\n  if (DEBUG) {\n    // eslint-disable-next-line no-console\n    console.log('[TdLib] UPDATE', update['@type'], { update });\n  }\n\n  system.onUpdate(update);\n  users.onUpdate(update);\n  chats.onUpdate(update);\n  messages.onUpdate(update);\n}\n","import { addReducer } from '../../../lib/teactn';\n\nimport * as TdLib from '../../../api/tdlib';\n\naddReducer('setAuthPhoneNumber', (global, actions, payload) => {\n  const { phoneNumber } = payload!;\n\n  void TdLib.send({\n    '@type': 'setAuthenticationPhoneNumber',\n    phone_number: phoneNumber,\n  });\n});\n\naddReducer('setAuthCode', (global, actions, payload) => {\n  const { code } = payload!;\n\n  void TdLib.send({\n    '@type': 'checkAuthenticationCode',\n    code,\n  });\n});\n\naddReducer('signOut', () => {\n  void TdLib.send({ '@type': 'logOut' });\n});\n","import { addReducer, getGlobal, setGlobal } from '../../../lib/teactn';\n\nimport * as TdLib from '../../../api/tdlib';\n\n// https://core.telegram.org/tdlib/docs/classtd_1_1td__api_1_1get_chats.html\nconst OFFSET_ORDER = '9223372036854775807';\n// Each call to `getChats` produce 100 `updateNewChat` updates, no matter what the next limit is.\nconst LOAD_CHATS_LIMIT = 100;\n\naddReducer('loadChats', () => {\n  void loadChats();\n});\n\naddReducer('loadMoreChats', (global) => {\n  const lastChatId = global.chats.ids[global.chats.ids.length - 1];\n  const lastOrder = global.chats.byId[lastChatId].order;\n  void loadChats(lastChatId, lastOrder);\n});\n\nasync function loadChats(offsetChatId: number | null = null, offsetOrder = OFFSET_ORDER) {\n  const result = await TdLib.send({\n    '@type': 'getChats',\n    offset_chat_id: offsetChatId,\n    offset_order: offsetOrder,\n    limit: LOAD_CHATS_LIMIT,\n  }) as {\n    chat_ids: number[];\n  };\n\n  if (!result) {\n    return;\n  }\n\n  const { chat_ids } = result;\n\n  if (chat_ids.length > 0 && chat_ids[0] === offsetChatId) {\n    chat_ids.shift();\n  }\n\n  const global = getGlobal();\n  const currentIds = global.chats.ids;\n  const newIds = (currentIds && currentIds.length) ? chat_ids.filter((id) => !currentIds.includes(id)) : chat_ids;\n\n  setGlobal({\n    ...global,\n    chats: {\n      ...global.chats,\n      ids: [\n        ...currentIds,\n        ...newIds,\n      ],\n    },\n  });\n}\n","type Member = { id: number };\ntype CollectionById<Member> = Record<number, Member>;\n\nexport default <T extends Member>(collection: T[]) => {\n  return collection.reduce((byId: CollectionById<T>, member: T) => {\n    byId[member.id] = member;\n\n    return byId;\n  }, {});\n};\n","import { addReducer, getGlobal, setGlobal } from '../../../lib/teactn';\n\nimport { ApiMessage } from '../types/messages';\nimport * as TdLib from '../../../api/tdlib';\nimport buildCollectionById from '../../../util/buildCollectionById';\n\nconst MESSAGE_SLICE_LIMIT = 20;\n\naddReducer('loadChatMessages', (global, actions, payload) => {\n  const { chatId, fromMessageId } = payload!;\n\n  void loadChatMessages(chatId, fromMessageId);\n});\n\naddReducer('sendTextMessage', (global, actions, payload) => {\n  const { chatId, text, fromMessageId } = payload!;\n\n  void sendTextMessage(chatId, text, fromMessageId);\n});\n\nasync function loadChatMessages(chatId: number, fromMessageId = 0) {\n  let messages = await loadChatMessagesPart(chatId, fromMessageId);\n\n  if (!messages) {\n    return;\n  }\n\n  // Request without `fromMessageId` always returns only last message.\n  if (!fromMessageId && messages.length) {\n    const messages2 = await loadChatMessagesPart(chatId, messages[0].id);\n\n    if (messages2) {\n      messages = [\n        ...messages,\n        ...messages2,\n      ];\n    }\n  }\n\n  const messagesById = buildCollectionById(messages);\n\n  const global = getGlobal();\n\n  setGlobal({\n    ...global,\n    messages: {\n      ...global.messages,\n      byChatId: {\n        ...global.messages.byChatId,\n        [chatId]: {\n          byId: {\n            ...(global.messages.byChatId[chatId] || {}).byId,\n            ...messagesById,\n          },\n        },\n      },\n    },\n  });\n}\n\nasync function loadChatMessagesPart(chatId: number, fromMessageId = 0) {\n  const result = await TdLib.send({\n    '@type': 'getChatHistory',\n    chat_id: chatId,\n    from_message_id: fromMessageId,\n    offset: 0,\n    limit: MESSAGE_SLICE_LIMIT,\n  }) as {\n    messages: ApiMessage[];\n  };\n\n  if (!result) {\n    return null;\n  }\n\n  return result.messages;\n}\n\nasync function sendTextMessage(chatId: number, text: string, replyToMessageId?: number) {\n  await TdLib.send({\n    '@type': 'sendMessage',\n    chat_id: chatId,\n    input_message_content: {\n      '@type': 'inputMessageText',\n      text: {\n        '@type': 'formattedText',\n        text,\n        entities: [],\n      },\n      disable_web_page_preview: false,\n      clear_draft: true,\n    },\n    reply_to_message_id: replyToMessageId,\n  });\n}\n","import './system';\nimport './chats';\nimport './messages';\n","const WEEKDAYS_SHORT = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nexport function formatTime(datetime: number | Date) {\n  const date = typeof datetime === 'number' ? new Date(datetime) : datetime;\n  const hours = padStart(String(date.getHours()), 2, '0');\n  const minutes = padStart(String(date.getMinutes()), 2, '0');\n\n  return `${hours}:${minutes}`;\n}\n\nexport function formatDate(datetime: number | Date, isShort = false) {\n  const date = typeof datetime === 'number' ? new Date(datetime) : datetime;\n  const day = date.getDate();\n  const month = padStart(String(date.getMonth() + 1), 2, '0');\n  const year = String(date.getFullYear()).slice(0, isShort ? 2 : 4);\n\n  return `${day}.${month}.${year}`;\n}\n\nfunction padStart(str: string, targetLength: number, padString: string) {\n  while (str.length < targetLength) {\n    str = padString + str;\n  }\n\n  return str;\n}\n\nexport function formatPastTimeShort(datetime: number | Date) {\n  const date = typeof datetime === 'number' ? new Date(datetime) : datetime;\n\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  if (date > today) {\n    return formatTime(date);\n  }\n\n  const now = new Date();\n  const weekAgo = new Date();\n  weekAgo.setDate(now.getDate() - 7);\n  today.setHours(0, 0, 0, 0);\n  if (date > weekAgo) {\n    return WEEKDAYS_SHORT[date.getDay()];\n  }\n\n  return formatDate(date, true);\n}\n\nexport function formatPastTime(datetime: number | Date) {\n  const date = typeof datetime === 'number' ? new Date(datetime) : datetime;\n\n  const now = new Date();\n\n  if (date >= now) {\n    return 'just now';\n  }\n\n  const diff = new Date(now.getTime() - date.getTime());\n\n  // within a minute\n  if (diff.getTime() / 1000 < 60) {\n    return 'just now';\n  }\n\n  // within an hour\n  if (diff.getTime() / 1000 < 60 * 60) {\n    const minutes = Math.floor(diff.getTime() / 1000 / 60);\n    return `${minutes === 1 ? '1 minute' : `${minutes} minutes`} ago`;\n  }\n\n  // today\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  if (date > today) {\n    // up to 6 hours ago\n    if (diff.getTime() / 1000 < 6 * 60 * 60) {\n      const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n      return `${hours === 1 ? '1 hour' : `${hours} hours`} ago`;\n    }\n\n    // other\n    return `today at ${formatTime(date)}`;\n  }\n\n  // yesterday\n  const yesterday = new Date();\n  yesterday.setDate(now.getDate() - 1);\n  today.setHours(0, 0, 0, 0);\n  if (date > yesterday) {\n    return `yesterday at ${formatTime(date)}`;\n  }\n\n  return `${formatDate(date)}`;\n}\n","import { ApiUser } from '../types';\nimport { formatDate, formatTime } from '../../../util/dateFormat';\n\nconst SERVICE_NOTIFICATIONS_USER_ID = 777000;\n\nexport function getUserFullName(user: ApiUser) {\n  switch (user.type['@type']) {\n    case 'userTypeBot':\n    case 'userTypeRegular': {\n      if (user.first_name && user.last_name) {\n        return `${user.first_name} ${user.last_name}`;\n      }\n\n      if (user.first_name) {\n        return user.first_name;\n      }\n\n      if (user.last_name) {\n        return user.last_name;\n      }\n\n      break;\n    }\n\n    case 'userTypeDeleted':\n    case 'userTypeUnknown': {\n      return 'Deleted account';\n    }\n  }\n\n  return null;\n}\n\nexport function getUserStatus(user: ApiUser) {\n  if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'service notifications';\n  }\n\n  if (user.type && user.type['@type'] === 'userTypeBot') {\n    return 'bot';\n  }\n\n  if (!user.status) {\n    return '';\n  }\n\n  switch (user.status['@type']) {\n    case 'userStatusEmpty': {\n      return 'last seen a long time ago';\n    }\n\n    case 'userStatusLastMonth': {\n      return 'last seen within a month';\n    }\n\n    case 'userStatusLastWeek': {\n      return 'last seen within a week';\n    }\n\n    case 'userStatusOffline': {\n      const { was_online } = user.status;\n\n      if (!was_online) return 'offline';\n\n      const now = new Date();\n      const wasOnline = new Date(was_online * 1000);\n\n      if (wasOnline >= now) {\n        return 'last seen just now';\n      }\n\n      const diff = new Date(now.getTime() - wasOnline.getTime());\n\n      // within a minute\n      if (diff.getTime() / 1000 < 60) {\n        return 'last seen just now';\n      }\n\n      // within an hour\n      if (diff.getTime() / 1000 < 60 * 60) {\n        const minutes = Math.floor(diff.getTime() / 1000 / 60);\n        return `last seen ${minutes === 1 ? '1 minute' : `${minutes} minutes`} ago`;\n      }\n\n      // today\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      if (wasOnline > today) {\n        // up to 6 hours ago\n        if (diff.getTime() / 1000 < 6 * 60 * 60) {\n          const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n          return `last seen ${hours === 1 ? '1 hour' : `${hours} hours`} ago`;\n        }\n\n        // other\n        return `last seen today at ${formatTime(wasOnline)}`;\n      }\n\n      // yesterday\n      const yesterday = new Date();\n      yesterday.setDate(now.getDate() - 1);\n      today.setHours(0, 0, 0, 0);\n      if (wasOnline > yesterday) {\n        return `last seen yesterday at ${formatTime(wasOnline)}`;\n      }\n\n      return `last seen ${formatDate(wasOnline)}`;\n    }\n\n    case 'userStatusOnline': {\n      return 'online';\n    }\n\n    case 'userStatusRecently': {\n      return 'last seen recently';\n    }\n  }\n\n  return null;\n}\n\nexport function isUserOnline(user: ApiUser) {\n  const { id, status, type } = user;\n\n  if (!status) {\n    return false;\n  }\n\n  if (id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return false;\n  }\n\n  return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n","import { ApiChat, ApiPrivateChat } from '../types';\n\nexport function isPrivateChat(chatId: number) {\n  return chatId > 0;\n}\n\nexport function getPrivateChatUserId(chat: ApiPrivateChat) {\n  return chat.type.user_id;\n}\n\nexport function getChatTitle(chat: ApiChat) {\n  return chat.title || 'Deleted account';\n}\n","import { ApiMessage } from '../types/messages';\n\nexport function getMessageText(message: ApiMessage) {\n  return message.content.text ? message.content.text.text : '%NO_TEXT_MESSAGE%';\n}\n\nexport function isOwnMessage(message: ApiMessage) {\n  return message.is_outgoing;\n}\n\nexport function getSendingState(message: ApiMessage) {\n  if (!message.sending_state) {\n    return 'succeeded';\n  }\n\n  return message.sending_state['@type'] === 'messageSendingStateFailed' ? 'failed' : 'pending';\n}\n","export * from './users';\nexport * from './chats';\nexport * from './messages';\n","import { GlobalState } from '../../../lib/teactn';\n\nexport function selectUser(global: GlobalState, userId: number) {\n  return global.users.byId[userId];\n}\n","import { GlobalState } from '../../../lib/teactn';\n\nexport function selectChat(global: GlobalState, chatId: number) {\n  return global.chats.byId[chatId];\n}\n","import { ApiMessage } from '../types/messages';\nimport { selectChat } from './chats';\nimport { GlobalState } from '../../../lib/teactn';\nimport { getSendingState } from '../helpers';\n\nconst EMPTY_OBJECT = {};\n\nexport function selectChatMessages(global: GlobalState, chatId: number) {\n  return (global.messages.byChatId[chatId] || {}).byId || EMPTY_OBJECT;\n}\n\nexport function selectIsUnread(global: GlobalState, message: ApiMessage) {\n  const chat = selectChat(global, message.chat_id);\n\n  return chat.last_read_outbox_message_id < message.id;\n}\n\nexport function selectOutgoingStatus(global: GlobalState, message: ApiMessage) {\n  if (!selectIsUnread(global, message)) {\n    return 'read';\n  }\n\n  return getSendingState(message);\n}\n","export * from './users';\nexport * from './chats';\nexport * from './messages';\n\n// TODO Add `reselect` to all selectors.\n","import { addReducer, GlobalState } from '../../lib/teactn';\n\nimport * as TdLib from '../../api/tdlib';\n\nimport onUpdate from './updaters';\nimport './actions';\nimport './helpers';\nimport './selectors';\n\naddReducer('init', (global: GlobalState) => {\n  TdLib.init(onUpdate);\n\n  return {\n    ...global,\n    isInitialized: true,\n  };\n});\n","import { addReducer } from '../lib/teactn';\n\naddReducer('setAuthPhoneNumber', (global, actions, payload) => {\n  const { phoneNumber } = payload!;\n\n  return {\n    ...global,\n    authPhoneNumber: phoneNumber,\n  };\n});\n","import { addReducer } from '../lib/teactn';\n\naddReducer('selectChat', (global, actions, payload) => {\n  const { id } = payload!;\n\n  return {\n    ...global,\n    chats: {\n      ...global.chats,\n      selectedId: id,\n    },\n  };\n});\n","import './tdlib';\nimport './auth';\nimport './chats';\n","import React, { FC } from '../lib/teact';\n\nimport './Loading.scss';\n\nconst Loading: FC = () => {\n  return (\n    <div className=\"Loading\">\n      <i className=\"icon-loader\" />\n    </div>\n  );\n};\n\nexport default Loading;\n","import { MouseEvent } from 'react';\n\nimport React, { FC, JsxChildren } from '../../lib/teact';\nimport './Button.scss';\n\ntype OnClickHandler = (e: MouseEvent<HTMLButtonElement>) => void;\n\ninterface IProps {\n  onClick: Function\n  children: JsxChildren,\n  size?: 'default' | 'smaller',\n  color?: 'primary' | 'secondary' | 'translucent',\n  className?: string,\n  round?: boolean;\n}\n\nconst Button: FC<IProps> = ({\n  onClick, children, size = 'default', color = 'primary', className, round,\n}) => {\n  let combinedClass = 'Button';\n  combinedClass += ` ${size} ${color}`;\n\n  if (round) {\n    combinedClass += ' round';\n  }\n  if (className) {\n    combinedClass += ` ${className}`;\n  }\n\n  return (\n    <button type=\"button\" className={combinedClass} onClick={onClick as OnClickHandler}>{children}</button>\n  );\n};\n\nexport default Button;\n","import { ChangeEvent } from 'react';\nimport React, { FC } from '../../lib/teact';\n\ninterface IProps {\n  id?: string,\n  value?: string,\n  label?: string,\n  placeholder?: string,\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void,\n  onKeyPress?: (e: React.KeyboardEvent<HTMLInputElement>) => void,\n}\n\nconst InputText: FC<IProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    placeholder,\n    onChange,\n    onKeyPress,\n  } = props;\n\n  let className = 'input-group';\n  if (value) {\n    className += ' touched';\n  }\n\n  return (\n    <div className={className}>\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n        placeholder={placeholder || label}\n      />\n      {label && (\n        <label>{label}</label>\n      )}\n    </div>\n  );\n};\n\nexport default InputText;\n","import { ChangeEvent } from 'react';\nimport React, { FC, JsxChildren } from '../../lib/teact';\n\ninterface IProps {\n  id?: string,\n  value?: string,\n  label?: string,\n  placeholder?: string,\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void,\n  children: JsxChildren,\n}\n\nconst Select: FC<IProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    placeholder,\n    onChange,\n    children,\n  } = props;\n\n  let className = 'input-group';\n  if (value) {\n    className += ' touched';\n  }\n\n  return (\n    <div className={className}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        placeholder={placeholder || label}\n      >\n        {children}\n      </select>\n      {label && id && (\n        <label htmlFor={id}>{label}</label>\n      )}\n    </div>\n  );\n};\n\nexport default Select;\n","import { ChangeEvent } from 'react';\n\nimport React, { FC, useState } from '../../../lib/teact';\nimport { DispatchMap, withGlobal } from '../../../lib/teactn';\n\nimport Button from '../../../components/ui/Button';\nimport InputText from '../../../components/ui/InputText';\nimport Select from '../../../components/ui/Select';\n\nimport './Auth.scss';\n\ntype IProps = Pick<DispatchMap, 'setAuthPhoneNumber'>;\n\nconst AuthPhoneNumber: FC<IProps> = ({ setAuthPhoneNumber }) => {\n  const [isButtonShown, setIsButtonShown] = useState(false);\n  const [code, setCode] = useState('+7');\n  const [phone, setPhone] = useState('');\n\n  function onCodeChange(e: ChangeEvent<HTMLSelectElement>) {\n    const { target } = e;\n\n    setCode(target.value);\n  }\n\n  function onPhoneNumberChange(e: ChangeEvent<HTMLInputElement>) {\n    const { target } = e;\n\n    target.value = target.value.replace(/[^\\d]+/g, '');\n\n    setPhone(target.value);\n    setIsButtonShown(target.value.length === 10);\n  }\n\n  function handleSubmit() {\n    const phoneNumber = `${code}${phone}`;\n    setAuthPhoneNumber({ phoneNumber });\n  }\n\n  return (\n    <div id=\"auth-phone-number-form\" className=\"auth-form\">\n      <div id=\"logo\" />\n      <h2>Sign in to Telegram</h2>\n      <p className=\"note\">\n        Please confirm your country and\n        <br />enter your phone number.\n      </p>\n      <Select\n        id=\"sign-in-phone-code\"\n        label=\"Country\"\n        value={code}\n        onChange={onCodeChange}\n      >\n        <option value=\"+7\">Russia +7</option>\n      </Select>\n      <InputText\n        id=\"sign-in-phone-number\"\n        label=\"Phone Number\"\n        onChange={onPhoneNumberChange}\n        value={phone}\n      />\n      {isButtonShown && (\n        <Button onClick={handleSubmit}>NEXT</Button>\n      )}\n    </div>\n  );\n};\n\nexport default withGlobal(\n  undefined,\n  (setGlobal, actions) => {\n    const { setAuthPhoneNumber } = actions;\n    return { setAuthPhoneNumber };\n  },\n)(AuthPhoneNumber);\n","import { ChangeEvent } from 'react';\n\nimport React, { FC, useState } from '../../../lib/teact';\nimport { DispatchMap, GlobalState, withGlobal } from '../../../lib/teactn';\n\nimport Button from '../../../components/ui/Button';\nimport InputText from '../../../components/ui/InputText';\n\nimport './Auth.scss';\n\ntype IProps = Pick<GlobalState, 'authPhoneNumber'> & Pick<DispatchMap, 'setAuthCode'>;\n\nconst AuthPhoneNumber: FC<IProps> = ({ authPhoneNumber, setAuthCode }) => {\n  const [isButtonShown, setIsButtonShown] = useState(false);\n  const [code, setCode] = useState(undefined);\n\n  function onCodeChange(e: ChangeEvent<HTMLInputElement>) {\n    const { target } = e;\n\n    target.value = target.value.replace(/[^\\d]+/, '');\n\n    setCode(target.value);\n    setIsButtonShown(target.value.length === 5);\n  }\n\n  function handleSubmit() {\n    setAuthCode({ code });\n  }\n\n  return (\n    <div id=\"auth-code-form\" className=\"auth-form\">\n      <div id=\"monkey\" />\n      <h2>{authPhoneNumber}</h2>\n      <p className=\"note\">\n        We have sent you an SMS\n        <br />with the code.\n      </p>\n      <InputText\n        id=\"sign-in-code\"\n        label=\"Code\"\n        onChange={onCodeChange}\n        value={code}\n      />\n      {isButtonShown && (\n        <Button onClick={handleSubmit}>NEXT</Button>\n      )}\n    </div>\n  );\n};\n\nexport default withGlobal(\n  global => {\n    const { authPhoneNumber } = global;\n    return { authPhoneNumber };\n  },\n  (setGlobal, actions) => {\n    const { setAuthCode } = actions;\n    return { setAuthCode };\n  },\n)(AuthPhoneNumber);\n","import React, { FC } from '../../lib/teact';\nimport { GlobalState, withGlobal } from '../../lib/teactn';\n\nimport AuthPhoneNumber from './components/AuthPhoneNumber';\nimport AuthCode from './components/AuthCode';\n\ntype IProps = Pick<GlobalState, 'authState'>\n\nconst Auth: FC<IProps> = ({ authState }) => {\n  switch (authState) {\n    case 'authorizationStateWaitCode':\n      return <AuthCode />;\n    case 'authorizationStateWaitPassword':\n      // TODO Add password support.\n      return <div>NO PASSWORD SUPPORT</div>;\n    case 'authorizationStateWaitPhoneNumber':\n    default:\n      return <AuthPhoneNumber />;\n  }\n};\n\nexport default withGlobal(\n  global => {\n    const { authState } = global;\n    return { authState };\n  },\n)(Auth);\n","export default <T>(object: Record<string, T>): T[] => {\n  return Object.keys(object).map((key) => object[key]);\n};\n","import React, { FC } from '../lib/teact';\n\nimport { ApiUser, ApiChat } from '../modules/tdlib/types';\nimport { getChatTitle, getUserFullName, isPrivateChat } from '../modules/tdlib/helpers';\n\nimport './Avatar.scss';\n\ninterface IProps {\n  size?: 'small' | 'medium' | 'large',\n  chat?: ApiChat;\n  user?: ApiUser;\n}\n\nconst Avatar: FC<IProps> = ({ size = 'large', chat, user }) => {\n  let content: string | null = '';\n\n  if (user) {\n    const userName = getUserFullName(user);\n    content = userName ? getFirstLetters(userName).slice(0, 2) : null;\n  } else if (chat) {\n    const title = getChatTitle(chat);\n    content = title && getFirstLetters(title).slice(0, isPrivateChat(chat.id) ? 2 : 1);\n  }\n\n  return (\n    <div className={`Avatar size-${size}`}>\n      {content}\n    </div>\n  );\n};\n\nfunction getFirstLetters(phrase: string) {\n  return phrase\n    .replace(/[^\\wа-яё\\s]+/gi, '')\n    .trim()\n    .split(/\\s+/)\n    .map((word: string) => word.length && word[0])\n    .join('')\n    .toUpperCase();\n}\n\nexport default Avatar;\n","import React, { FC } from '../lib/teact';\nimport { GlobalState, withGlobal } from '../lib/teactn';\n\nimport { ApiMessage } from '../modules/tdlib/types';\nimport { selectOutgoingStatus } from '../modules/tdlib/selectors';\n\ntype IProps = {\n  message: ApiMessage,\n  outgoingStatus: ReturnType<typeof selectOutgoingStatus>,\n}\n\nconst MessageOutgoingStatus: FC<IProps> = ({ message, outgoingStatus }) => {\n  return (\n    <span className=\"MessageOutgoingStatus\">{renderOutgoingStatus(message, outgoingStatus)}</span>\n  );\n};\n\nfunction renderOutgoingStatus(message: ApiMessage, outgoingStatus: ReturnType<typeof selectOutgoingStatus>) {\n  switch (outgoingStatus) {\n    case 'read':\n      return <i className=\"icon-message-read\" />;\n    case 'pending':\n      return <i className=\"icon-message-sending\" />;\n    case 'succeeded':\n      return <i className=\"icon-message-delivered\" />;\n    case 'failed':\n      return <i className=\"icon-message-sending-error\" />;\n  }\n\n  return null;\n}\n\nexport default withGlobal(\n  (global: GlobalState, { message }: IProps) => {\n    return {\n      outgoingStatus: selectOutgoingStatus(global, message),\n    };\n  },\n)(MessageOutgoingStatus);\n","import React, { FC } from '../../../../lib/teact';\n\nimport { ApiMessage } from '../../../../modules/tdlib/types';\nimport { formatPastTimeShort } from '../../../../util/dateFormat';\nimport MessageOutgoingStatus from '../../../../components/MessageOutgoingStatus';\nimport './LastMessageMeta.scss';\n\ntype IProps = {\n  message: ApiMessage\n}\n\nconst LastMessageMeta: FC<IProps> = ({ message }) => {\n  return (\n    <div className=\"LastMessageMeta\">\n      {message.is_outgoing && (\n        <MessageOutgoingStatus message={message} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default LastMessageMeta;\n","import React, { FC } from '../../../../lib/teact';\n\nimport { ApiChat } from '../../../../modules/tdlib/types';\nimport './Badge.scss';\n\ntype IProps = {\n  chat: ApiChat\n}\n\n// TODO Support mentions and `is_pinned`.\n\nconst Badge: FC<IProps> = ({ chat }) => {\n  return (\n    chat.unread_count ? (\n      <div className=\"Badge\">\n        {chat.unread_count}\n      </div>\n    ) : (\n      <div />\n    )\n  );\n};\n\nexport default Badge;\n","import React, { FC } from '../../../../lib/teact';\nimport { DispatchMap, withGlobal } from '../../../../lib/teactn';\n\nimport { ApiChat } from '../../../../modules/tdlib/types';\nimport { getChatTitle, getMessageText, isPrivateChat } from '../../../../modules/tdlib/helpers';\nimport Avatar from '../../../../components/Avatar';\nimport LastMessageMeta from './LastMessageMeta';\nimport Badge from './Badge';\nimport './Chat.scss';\n\ntype IProps = {\n  chat: ApiChat,\n  selected: boolean,\n} & Pick<DispatchMap, 'selectChat'>;\n\nconst Chat: FC<IProps> = ({ chat, selected, selectChat }) => {\n  return (\n    <div className={buildClassNames(chat, selected)} onClick={() => selectChat({ id: chat.id })} data-id={chat.id}>\n      <Avatar chat={chat} />\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3>{getChatTitle(chat)}</h3>\n          {chat.last_message && (\n            <LastMessageMeta message={chat.last_message} />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {chat.last_message && (\n            <p className=\"last-message\">{getMessageText(chat.last_message)}</p>\n          )}\n          <Badge chat={chat} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction buildClassNames(chat: ApiChat, isSelected: boolean) {\n  const classNames = ['Chat'];\n\n  classNames.push(isPrivateChat(chat.id) ? 'private' : 'group');\n\n  if (isSelected) {\n    classNames.push('selected');\n  }\n\n  return classNames.join(' ');\n}\n\nexport default withGlobal(\n  undefined,\n  (setGlobal, actions) => {\n    const { selectChat } = actions;\n    return { selectChat };\n  },\n)(Chat);\n","import { UIEvent } from 'react';\nimport React, { FC } from '../../../../lib/teact';\nimport { DispatchMap, GlobalState, withGlobal } from '../../../../lib/teactn';\n\nimport { ApiChat } from '../../../../modules/tdlib/types';\nimport toArray from '../../../../util/toArray';\nimport orderBy from '../../../../util/orderBy';\nimport { throttle } from '../../../../util/schedulers';\nimport Chat from './Chat';\nimport Loading from '../../../../components/Loading';\nimport './ChatList.scss';\n\nconst LOAD_MORE_TRESHOLD_PX = 1000;\nconst SCROLL_THROTTLE_MS = 1000;\n\ntype IProps = {\n  chats: GlobalState['chats']['byId'],\n  loadedChatIds: GlobalState['chats']['ids'],\n  selectedChatId: GlobalState['chats']['selectedId'],\n  areChatsLoaded: boolean;\n} & Pick<DispatchMap, 'loadChats' | 'loadMoreChats'>;\n\nconst handleScrollThrottled = throttle(handleScroll, SCROLL_THROTTLE_MS, true);\n\nconst ChatList: FC<IProps> = ({\n  chats, loadedChatIds, areChatsLoaded, selectedChatId, loadChats, loadMoreChats,\n}) => {\n  if (!areChatsLoaded) {\n    loadChats();\n  }\n\n  const chatsArray = areChatsLoaded && chats ? prepareChats(chats, loadedChatIds) : undefined;\n\n  return (\n    <div className=\"ChatList\" onScroll={(e) => handleScrollThrottled(e, loadMoreChats)}>{\n      areChatsLoaded && chatsArray ? (\n        <div>\n          {chatsArray.map((chat) => (\n            <Chat key={chat.id} chat={chat} selected={chat.id === selectedChatId} />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )\n    }\n    </div>\n  );\n};\n\nfunction prepareChats(chats: Record<number, ApiChat>, loadedChatIds: number[]) {\n  const filtered = toArray(chats)\n    .filter((chat) => Boolean(chat.last_message) && loadedChatIds.includes(chat.id));\n\n  return orderBy(filtered, (chat: ApiChat) => chat.last_message!.date);\n}\n\nfunction handleScroll(e: UIEvent, loadMoreChats: DispatchMap['loadMoreChats']) {\n  const target = e.target as HTMLElement;\n\n  if (target.scrollHeight - (target.scrollTop + target.clientHeight) <= LOAD_MORE_TRESHOLD_PX) {\n    loadMoreChats();\n  }\n}\n\nexport default withGlobal(\n  global => {\n    const { chats } = global;\n    const idsLength = chats.ids.length;\n    const areChatsLoaded = idsLength > 0 && Object.keys(chats.byId).length >= idsLength;\n\n    return {\n      areChatsLoaded,\n      chats: chats.byId,\n      loadedChatIds: chats.ids,\n      selectedChatId: chats.selectedId,\n    };\n  },\n  (setGlobal, actions) => {\n    const { loadChats, loadMoreChats } = actions;\n    return { loadChats, loadMoreChats };\n  },\n)(ChatList);\n","import React, { FC, JsxChildren, useState } from '../../lib/teact';\n\nimport Button from './Button';\n\nimport './DropdownMenu.scss';\n\ninterface IProps {\n  icon: string,\n  size?: 'default' | 'smaller',\n  color?: 'primary' | 'secondary' | 'translucent',\n  positionX?: 'left' | 'right';\n  positionY?: 'top' | 'bottom';\n  children: JsxChildren,\n}\n\nconst DropdownMenu: FC<IProps> = (props) => {\n  const {\n    icon,\n    size = 'smaller',\n    color = 'translucent',\n    children,\n    positionX = 'left',\n    positionY = 'top',\n  } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const [isShown, setIsShown] = useState(false);\n\n  let className = `bubble ${positionY} ${positionX}`;\n\n  if (isOpen) {\n    className += ' open';\n  }\n\n  if (isShown) {\n    className += ' shown';\n  }\n\n  const toggleIsOpen = () => {\n    if (isOpen) {\n      setTimeout(() => setIsShown(false), 150);\n    } else {\n      setIsShown(true);\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"DropdownMenu\">\n      <Button round size={size} color={color} onClick={toggleIsOpen}>\n        <i className={`icon-${icon}`} />\n      </Button>\n      {isOpen && (\n        <div className=\"backdrop\" onClick={toggleIsOpen} />\n      )}\n      <ul className={className}>\n        {children}\n      </ul>\n    </div>\n  );\n};\n\nexport default DropdownMenu;\n","import { MouseEvent } from 'react';\n\nimport React, { FC, JsxChildren } from '../../lib/teact';\n\nimport './DropdownMenu.scss';\n\ntype OnClickHandler = (e: MouseEvent<HTMLButtonElement>) => void;\n\ninterface IProps {\n  icon: string,\n  children: JsxChildren,\n  onClick: OnClickHandler,\n}\n\nconst DropdownMenuItem: FC<IProps> = (props) => {\n  const {\n    icon,\n    children,\n    onClick,\n  } = props;\n\n  return (\n    <li className=\"DropdownMenuItem\">\n      <button type=\"button\" onClick={onClick as OnClickHandler}>\n        <i className={`icon-${icon}`} />\n        {children}\n      </button>\n    </li>\n  );\n};\n\nexport default DropdownMenuItem;\n","import React, { FC } from '../../../../lib/teact';\n\nimport './SearchInput.scss';\n\nconst SearchInput: FC = () => {\n  return (\n    <div className=\"SearchInput\">\n      {/* TODO @not-implemented */}\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        className=\"form-control\"\n      />\n      <i className=\"icon-search\" />\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React, { FC } from '../../../../lib/teact';\nimport { DispatchMap, withGlobal } from '../../../../lib/teactn';\n\nimport DropdownMenu from '../../../../components/ui/DropdownMenu';\nimport DropdownMenuItem from '../../../../components/ui/DropdownMenuItem';\nimport SearchInput from './SearchInput';\n\nimport './LeftHeader.scss';\n\ntype IProps = Pick<DispatchMap, 'signOut'>\n\nfunction onSignOut(signOut: Function) {\n  // eslint-disable-next-line no-restricted-globals, no-alert\n  if (confirm('Are you sure?')) {\n    signOut();\n  }\n}\n\nconst LeftHeader: FC<IProps> = ({ signOut }) => {\n  return (\n    <div id=\"LeftHeader\">\n      <DropdownMenu\n        size=\"smaller\"\n        color=\"translucent\"\n        icon=\"menu\"\n      >\n        {/* TODO @not-implemented */}\n        {/* <DropdownMenuItem icon=\"new-group\" onClick={() => {}}>New Group</DropdownMenuItem> */}\n        {/* <DropdownMenuItem icon=\"user\" onClick={() => {}}>Contacts</DropdownMenuItem> */}\n        {/* <DropdownMenuItem icon=\"archive\" onClick={() => {}}>Archived</DropdownMenuItem> */}\n        {/* <DropdownMenuItem icon=\"saved-messages\" onClick={() => {}}>Saved</DropdownMenuItem> */}\n        {/* <DropdownMenuItem icon=\"settings\" onClick={() => {}}>Settings</DropdownMenuItem> */}\n        {/* <DropdownMenuItem icon=\"help\" onClick={() => {}}>Help</DropdownMenuItem> */}\n        <DropdownMenuItem icon=\"logout\" onClick={() => onSignOut(signOut)}>Log Out</DropdownMenuItem>\n      </DropdownMenu>\n      <SearchInput />\n    </div>\n  );\n};\n\nexport default withGlobal(\n  undefined,\n  (setGlobal, actions) => {\n    const { signOut } = actions;\n    return { signOut };\n  },\n)(LeftHeader);\n","import React, { FC } from '../../../../lib/teact';\n\nimport ChatList from './ChatList';\nimport LeftHeader from './LeftHeader';\nimport './LeftColumn.scss';\n\nconst LeftColumn: FC = () => {\n  return (\n    <div id=\"LeftColumn\">\n      <LeftHeader />\n      <ChatList />\n    </div>\n  );\n};\n\nexport default LeftColumn;\n","import React, { FC } from '../../../../lib/teact';\nimport { withGlobal } from '../../../../lib/teactn';\n\nimport { ApiUser, ApiPrivateChat } from '../../../../modules/tdlib/types';\nimport { selectChat, selectUser } from '../../../../modules/tdlib/selectors';\nimport {\n  getPrivateChatUserId, getUserFullName, getUserStatus, isUserOnline,\n} from '../../../../modules/tdlib/helpers';\nimport Avatar from '../../../../components/Avatar';\n\ntype IProps = {\n  chatId: number;\n  chat: ApiPrivateChat;\n  user: ApiUser;\n};\n\nconst PrivateChatHeader: FC<IProps> = ({ user }) => {\n  return (\n    <div className=\"DialogHeader\">\n      <Avatar size=\"medium\" user={user} />\n      <div>\n        <div className=\"title\">{getUserFullName(user)}</div>\n        <div className={`status ${isUserOnline(user) ? 'online' : ''}`}>{getUserStatus(user)}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal(\n  (global, { chatId }: IProps) => {\n    const chat = selectChat(global, chatId) as ApiPrivateChat;\n    const userId = getPrivateChatUserId(chat);\n    const user = selectUser(global, userId);\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PrivateChatHeader);\n","import React, { FC } from '../../../../lib/teact';\nimport { withGlobal } from '../../../../lib/teactn';\n\nimport { ApiChat } from '../../../../modules/tdlib/types';\nimport Avatar from '../../../../components/Avatar';\n\ntype IProps = {\n  chat: ApiChat;\n};\n\nconst GroupHeader: FC<IProps> = ({ chat }) => {\n  return (\n    <div className=\"GroupHeader\">\n      <Avatar size=\"medium\" chat={chat} />\n      <div>\n        <div className=\"title\">{chat.title}</div>\n        <div className=\"status\">Group Chat</div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal(\n  global => {\n    const { selectedId, byId } = global.chats;\n\n    const chat = selectedId && byId[selectedId];\n\n    return {\n      chat,\n    };\n  },\n)(GroupHeader);\n","\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n","// @ts-ignore\nimport emojiRegex from 'emoji-regex';\n\nconst RE_EMOJI = emojiRegex();\nconst RE_EMOJI_ONLY = new RegExp(`^(?:${emojiRegex().source})+$`, '');\n\nexport default (text: string): number | false => {\n  const isEmojiOnly = RE_EMOJI_ONLY.exec(text);\n\n  if (!isEmojiOnly) {\n    return false;\n  }\n\n  let emojiCount = 0;\n  while (RE_EMOJI.exec(text)) {\n    emojiCount++;\n  }\n\n  return emojiCount;\n};\n","import React, { FC } from '../../../../lib/teact';\n\nimport { ApiMessage } from '../../../../modules/tdlib/types';\nimport { formatTime } from '../../../../util/dateFormat';\nimport MessageOutgoingStatus from '../../../../components/MessageOutgoingStatus';\nimport './MessageMeta.scss';\n\ntype IProps = {\n  message: ApiMessage,\n}\n\nconst MessageMeta: FC<IProps> = ({ message }) => {\n  return (\n    <span className=\"MessageMeta\">\n      <span className=\"message-time\">\n        {formatTime(message.date * 1000)}\n      </span>\n      {message.is_outgoing && (\n        <MessageOutgoingStatus message={message} />\n      )}\n    </span>\n  );\n};\n\n\nexport default MessageMeta;\n","import React, { FC } from '../../../../lib/teact';\nimport { withGlobal } from '../../../../lib/teactn';\n\nimport { ApiUser, ApiMessage } from '../../../../modules/tdlib/types';\nimport { getMessageText, isOwnMessage, getUserFullName } from '../../../../modules/tdlib/helpers';\nimport { selectUser } from '../../../../modules/tdlib/selectors';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport Avatar from '../../../../components/Avatar';\nimport MessageMeta from './MessageMeta';\nimport './Message.scss';\n\ntype IProps = {\n  message: ApiMessage;\n  showAvatar?: boolean;\n  showSenderName?: boolean;\n  sender?: ApiUser;\n};\n\ntype TextPart = string | Element;\n\nconst MAX_EMOJI_COUNT = 3;\n\nconst Message: FC<IProps> = ({\n  message, showAvatar, showSenderName, sender,\n}) => {\n  const className = buildClassName(message);\n  const [contentParts, contentClassName] = buildContent(message);\n  const isText = contentClassName && contentClassName.includes('text');\n\n  return (\n    <div className={className}>\n      {showAvatar && (\n        <Avatar size=\"small\" user={sender} />\n      )}\n      <div className={contentClassName}>\n        {showSenderName && sender && isText && (\n          <div className=\"sender-name\">{getUserFullName(sender)}</div>\n        )}\n        <p>{contentParts}</p>\n        <MessageMeta message={message} />\n      </div>\n    </div>\n  );\n};\n\nfunction buildClassName(message: ApiMessage) {\n  const classNames = ['Message'];\n\n  if (isOwnMessage(message)) {\n    classNames.push('own');\n  }\n\n  return classNames.join(' ');\n}\n\nfunction buildContent(message: ApiMessage): [TextPart | TextPart[] | undefined, string | undefined] {\n  const text = getMessageText(message);\n  const classNames = ['content'];\n  let contentParts: TextPart | TextPart[] | undefined;\n\n  if (text) {\n    const emojiOnlyCount = parseEmojiOnlyString(text);\n\n    if (emojiOnlyCount && emojiOnlyCount <= MAX_EMOJI_COUNT) {\n      classNames.push(`emoji-only-${emojiOnlyCount}`);\n      contentParts = text;\n    } else {\n      classNames.push('text');\n      contentParts = enhanceTextParts(text, [addLineBreaks, addBreaksToLongWords, addLinks]);\n    }\n  }\n\n  classNames.push('status-read');\n\n  return [contentParts, classNames.join(' ')];\n}\n\nfunction enhanceTextParts(text: string, enhancers: ((part: TextPart) => TextPart[])[]) {\n  let parts: TextPart[] = [text];\n\n  for (let i = 0, l = enhancers.length; i < l; i++) {\n    parts = parts.reduce((enhancedParts: TextPart[], part) => {\n      const newParts = enhancers[i](part);\n\n      return [\n        ...enhancedParts,\n        ...newParts,\n      ];\n    }, []);\n  }\n\n  return parts.length === 1 ? parts[0] : parts;\n}\n\nfunction addLineBreaks(part: TextPart): TextPart[] {\n  if (typeof part !== 'string') {\n    return [part];\n  }\n\n  return part\n    .split(/\\r\\n|\\r|\\n/g)\n    .reduce((parts: TextPart[], line: string, i, source) => {\n      parts.push(line);\n\n      if (i !== source.length - 1) {\n        parts.push(<br />);\n      }\n\n      return parts;\n    }, []);\n}\n\nfunction addLinks(part: TextPart): TextPart[] {\n  return replaceWordsWithElements(\n    part,\n    (word) => word.startsWith('http:') || word.startsWith('https:'),\n    (word) => (\n      <a href={word} target=\"_blank\" rel=\"noopener noreferrer\">{word}</a>\n    ),\n  );\n}\n\nfunction addBreaksToLongWords(part: TextPart): TextPart[] {\n  return replaceWordsWithElements(\n    part,\n    (word) => word.length > 50,\n    (word) => (\n      <div className=\"long-word-break-all\">{word}</div>\n    ),\n  );\n}\n\nfunction replaceWordsWithElements(\n  part: TextPart,\n  testFn: (word: string) => boolean,\n  replaceFn: (word: string) => Element,\n): TextPart[] {\n  if (typeof part !== 'string') {\n    return [part];\n  }\n\n  let wasLastTag = false;\n\n  return part\n    .split(' ')\n    .reduce((parts: TextPart[], word: string) => {\n      if (testFn(word)) {\n        if (parts.length > 0 && !wasLastTag) {\n          parts[parts.length - 1] += ' ';\n        }\n        parts.push(replaceFn(word));\n        wasLastTag = true;\n      } else {\n        if (parts.length > 0 && !wasLastTag) {\n          parts[parts.length - 1] += ` ${word}`;\n        } else {\n          parts.push(wasLastTag ? ` ${word}` : word);\n        }\n\n        wasLastTag = false;\n      }\n\n      return parts;\n    }, []);\n}\n\nexport default withGlobal(\n  (global, { message, showSenderName, showAvatar }: IProps) => {\n    if (!showSenderName && !showAvatar) {\n      return null;\n    }\n\n    return {\n      sender: selectUser(global, message.sender_user_id),\n    };\n  },\n)(Message);\n","import React, { FC } from '../../../../lib/teact';\nimport { DispatchMap, withGlobal } from '../../../../lib/teactn';\n\nimport { ApiMessage } from '../../../../modules/tdlib/types';\nimport { selectChatMessages } from '../../../../modules/tdlib/selectors';\nimport { isOwnMessage, isPrivateChat } from '../../../../modules/tdlib/helpers';\nimport orderBy from '../../../../util/orderBy';\nimport toArray from '../../../../util/toArray';\nimport { onNextTick } from '../../../../util/schedulers';\nimport Loading from '../../../../components/Loading';\nimport Message from './Message';\nimport './MessageList.scss';\n\ntype IProps = Pick<DispatchMap, 'loadChatMessages'> & {\n  areMessagesLoaded: boolean,\n  chatId: number;\n  messages?: Record<number, ApiMessage>;\n};\n\nconst MessageList: FC<IProps> = ({\n  areMessagesLoaded, chatId, messages, loadChatMessages,\n}) => {\n  if (!areMessagesLoaded) {\n    loadChatMessages({ chatId });\n  }\n\n  const messagesArray = areMessagesLoaded && messages ? orderBy(toArray(messages), 'date', 'desc') : undefined;\n  const isPrivate = isPrivateChat(chatId);\n\n  onNextTick(() => {\n    const scrollContainer = document.getElementsByClassName('MessageList')[0];\n    scrollContainer.scrollTop = scrollContainer.scrollHeight;\n  });\n\n  return (\n    <div className={`MessageList ${isPrivate ? 'no-avatars' : ''}`}>{\n      areMessagesLoaded && messagesArray ? (\n        <div className=\"messages-container\">\n          {groupMessages(messagesArray).map((messageGroup) => (\n            <div className=\"message-group\">\n              {messageGroup.map((message, i) => {\n                const isOwn = isOwnMessage(message);\n\n                return (\n                  <Message\n                    key={message.id}\n                    message={message}\n                    showAvatar={!isPrivate && !isOwn}\n                    showSenderName={i === 0 && !isPrivate && !isOwn}\n                  />\n                );\n              })}\n            </div>\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )\n    }\n    </div>\n  );\n};\n\nfunction groupMessages(messages: ApiMessage[]) {\n  const messageGroups: ApiMessage[][] = [];\n  let group: ApiMessage[] = [];\n\n  messages.forEach((message, index) => {\n    if (\n      !group.length\n      || message.sender_user_id === group[group.length - 1].sender_user_id\n    ) {\n      group.push(message);\n    }\n\n    if (\n      messages[index + 1]\n      && message.sender_user_id !== messages[index + 1].sender_user_id\n    ) {\n      messageGroups.push(group);\n      group = [];\n    }\n  });\n\n  if (group.length) {\n    messageGroups.push(group);\n  }\n\n  return messageGroups;\n}\n\nexport default withGlobal(\n  global => {\n    const { chats } = global;\n\n    const messages = chats.selectedId ? selectChatMessages(global, chats.selectedId) : undefined;\n    const areMessagesLoaded = messages && Object.keys(messages).length;\n\n    return {\n      chatId: chats.selectedId,\n      areMessagesLoaded,\n      messages,\n    };\n  },\n  (setGlobal, actions) => {\n    const { loadChatMessages } = actions;\n    return { loadChatMessages };\n  },\n)(MessageList);\n","import { ChangeEvent, KeyboardEvent } from 'react';\nimport React, { FC, useState } from '../../../../lib/teact';\nimport { DispatchMap, withGlobal } from '../../../../lib/teactn';\n\nimport { onNextTick } from '../../../../util/schedulers';\nimport InputText from '../../../../components/ui/InputText';\nimport './MiddleFooter.scss';\n\ntype IProps = Pick<DispatchMap, 'sendTextMessage'> & {\n  selectedChatId: number;\n};\n\nconst MiddleFooter: FC<IProps> = ({ selectedChatId, sendTextMessage }) => {\n  const [messageText, setMessageText] = useState('');\n\n  function onChange(e: ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = e;\n    setMessageText(currentTarget.value.trim());\n  }\n\n  function onKeyPress(e: KeyboardEvent<HTMLInputElement>) {\n    const { currentTarget } = e;\n\n    if (e.keyCode === 13 && currentTarget.value.trim().length) {\n      sendTextMessage({\n        chatId: selectedChatId,\n        text: currentTarget.value,\n      });\n\n      // Make sure to clear the text after the latest `onChange`.\n      setTimeout(() => setMessageText(''), 0);\n    }\n  }\n\n  onNextTick(focusInput);\n\n  return (\n    <div className=\"MiddleFooter\">\n      <div id=\"message-input-wrapper\">\n        {/* TODO @not-implemented */}\n        {/* <Button round color=\"translucent\" onClick={() => {}}>\n         <i className=\"icon-smile\" />\n         </Button> */}\n        {/* TODO Convert to textarea, add auto-sizing */}\n        <InputText\n          id=\"message-input-text\"\n          placeholder=\"Message\"\n          onChange={onChange}\n          onKeyPress={onKeyPress}\n          value={messageText}\n        />\n        {/* TODO @not-implemented */}\n        {/* <Button round color=\"translucent\" onClick={() => { }}>\n         <i className=\"icon-attach\" />\n         </Button> */}\n      </div>\n      {/* TODO @not-implemented */}\n      {/* <Button round color=\"primary\" onClick={() => { }}>\n       <i className=\"icon-microphone\" />\n       </Button> */}\n    </div>\n  );\n};\n\nfunction focusInput() {\n  const input = document.getElementById('message-input-text');\n\n  if (input) {\n    input.focus();\n  }\n}\n\nexport default withGlobal(\n  (global) => {\n    const { chats } = global;\n\n    return {\n      selectedChatId: chats.selectedId,\n    };\n  },\n  (setGlobal, actions) => {\n    const { sendTextMessage } = actions;\n    return { sendTextMessage };\n  },\n)(MiddleFooter);\n","import React, { FC } from '../../../../lib/teact';\nimport { withGlobal } from '../../../../lib/teactn';\n\nimport { isPrivateChat } from '../../../../modules/tdlib/helpers';\n\nimport DialogHeader from './PrivateChatHeader';\nimport GroupHeader from './GroupHeader';\nimport MessageList from './MessageList';\nimport MiddleFooter from './MiddleFooter';\nimport './MiddleColumn.scss';\nimport './MiddleHeader.scss';\n\ntype IProps = {\n  selectedChatId: number;\n  areChatsLoaded: boolean;\n};\n\nconst MiddleColumn: FC<IProps> = (props) => {\n  return (\n    <div id=\"MiddleColumn\">\n      {renderSelectedChat(props)}\n      {renderOpenChatScreen(props)}\n    </div>\n  );\n};\n\nfunction renderSelectedChat(props: IProps) {\n  const { selectedChatId } = props;\n\n  if (!selectedChatId) {\n    return null;\n  }\n\n  return (\n    <div className=\"messages-layout\">\n      {isPrivateChat(selectedChatId) ? (\n        <DialogHeader chatId={selectedChatId} />\n      ) : (\n        <GroupHeader chatId={selectedChatId} />\n      )}\n      <MessageList />\n      <MiddleFooter />\n    </div>\n  );\n}\n\nfunction renderOpenChatScreen(props: IProps) {\n  const { selectedChatId, areChatsLoaded } = props;\n\n  if (selectedChatId || !areChatsLoaded) {\n    return null;\n  }\n\n  return (\n    <div className=\"select-chat-note\">\n      <i className=\"icon-chats-placeholder\" />\n      <h2>\n        Open Chat\n        <br />\n        or create a new one\n      </h2>\n\n      {/* TODO @not-implemented */}\n      {/* <div className=\"create-chat-buttons\">\n       <Button round color=\"secondary\" onClick={() => { }}>\n       <i className=\"icon-new-private\" />\n       <span>Private</span>\n       </Button>\n       <Button round color=\"secondary\" onClick={() => { }}>\n       <i className=\"icon-new-group\" />\n       <span>Group</span>\n       </Button>\n       <Button round color=\"secondary\" onClick={() => { }}>\n       <i className=\"icon-new-channel\" />\n       <span>Channel</span>\n       </Button>\n       </div> */}\n    </div>\n  );\n}\n\nexport default withGlobal(\n  (global) => {\n    const { chats } = global;\n\n    const idsLength = chats.ids.length;\n    const areChatsLoaded = idsLength > 0 && Object.keys(chats.byId).length >= idsLength;\n\n    return {\n      selectedChatId: global.chats.selectedId,\n      areChatsLoaded,\n    };\n  },\n)(MiddleColumn);\n","import React, { FC } from '../../lib/teact';\nimport { GlobalState, withGlobal } from '../../lib/teactn';\n\nimport LeftColumn from './components/left/LeftColumn';\nimport MiddleColumn from './components/middle/MiddleColumn';\n// import RightColumn from './components/right/RightColumn';\n\nimport './Main.scss';\n\ntype IProps = GlobalState;\n\nconst Main: FC<IProps> = () => {\n  return (\n    <div id=\"Main\">\n      <LeftColumn />\n      <MiddleColumn />\n      {/* <RightColumn /> */}\n    </div>\n  );\n};\n\nexport default withGlobal(\n\n)(Main);\n","import { FC } from './lib/teact';\nimport React, { DispatchMap, GlobalState, withGlobal } from './lib/teactn';\n\nimport './modules';\n\nimport Loading from './components/Loading';\nimport Auth from './pages/auth/Auth';\nimport Main from './pages/main/Main';\n// import Test from './pages/test/Test';\n\ntype IProps = Pick<GlobalState, 'isInitialized' | 'authState'> & Pick<DispatchMap, 'init'>\n\nconst App: FC<IProps> = ({ isInitialized, authState, init }) => {\n  // return <Test />;\n\n  if (!isInitialized) {\n    init();\n  }\n\n  if (authState) {\n    switch (authState) {\n      case 'authorizationStateWaitCode':\n      case 'authorizationStateWaitPassword':\n      case 'authorizationStateWaitPhoneNumber':\n        return <Auth />;\n      case 'authorizationStateClosed':\n      case 'authorizationStateClosing':\n      case 'authorizationStateLoggingOut':\n      case 'authorizationStateReady':\n        return <Main />;\n    }\n  }\n\n  return <Loading />;\n};\n\nexport default withGlobal(\n  global => {\n    const { isInitialized, authState } = global;\n    return { isInitialized, authState };\n  },\n  (setGlobal, actions) => {\n    const { init } = actions;\n    return { init };\n  },\n)(App);\n","import React, { getGlobal } from './lib/teactn';\nimport TeactDOM from './lib/teact-dom';\n\nimport App from './App';\nimport './styles/index.scss';\n\nTeactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\ndocument.addEventListener('dblclick', () => {\n  // eslint-disable-next-line no-console\n  console.log('GLOBAL STATE', getGlobal());\n});\n","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}