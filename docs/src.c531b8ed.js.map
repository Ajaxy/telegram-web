{"version":3,"sources":["lib/teact.ts","hooks/useForceUpdate.ts","util/generateIdFor.ts","util/throttleWithRaf.ts","lib/teactn.tsx","lib/teact-dom.ts","api/tdlib/utils.ts","../node_modules/parcel/src/builtins/bundle-url.js","../node_modules/parcel/src/builtins/bundle-loader.js","api/tdlib/index.ts","modules/tdlib/updaters/system.ts","modules/tdlib/updaters/chats.ts","modules/tdlib/updaters/messages.ts","modules/tdlib/updaters/index.ts","modules/tdlib/actions/system.ts","modules/tdlib/actions/chats.ts","modules/tdlib/actions/messages.ts","modules/tdlib/actions/index.ts","modules/tdlib/helpers/messages.ts","modules/tdlib/helpers/index.ts","modules/tdlib/index.ts","modules/auth.ts","modules/chats.ts","modules/index.ts","components/Loading.tsx","components/ui/Button.tsx","components/ui/InputText.tsx","components/ui/Select.tsx","pages/auth/components/AuthPhoneNumber.tsx","pages/auth/components/AuthCode.tsx","pages/auth/Auth.tsx","components/Avatar.tsx","pages/main/components/left/Chat.tsx","util/toArray.ts","util/orderBy.ts","pages/main/components/left/ChatList.tsx","pages/main/components/left/LeftColumn.tsx","pages/main/components/middle/MiddleHeader.tsx","util/onNextTick.ts","../node_modules/emoji-regex/index.js","util/parseEmojiOnlyString.ts","pages/main/components/middle/Message.tsx","pages/main/components/middle/MessageList.tsx","pages/main/components/middle/MiddleFooter.tsx","pages/main/components/middle/MiddleColumn.tsx","pages/main/Main.tsx","App.tsx","index.tsx","../node_modules/parcel/src/builtins/loaders/browser/js-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","script","document","createElement","async","charset","src","onerror","onload","getElementsByTagName","appendChild"],"mappings":";AAqQe,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAAA,QAAA,cAAA,EAAA,QAAA,aAAA,EAAA,QAAA,mBAAA,EAAA,QAAA,cAAA,EAAA,QAAA,kBAAA,EAAA,QAAA,SAAA,EAAA,QAAA,QAAA,QAAA,sBAAA,QAAA,6BAAA,EAAA,IA9PH,EAoDR,EA0MW,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,QAAA,wBAAA,EA9Pf,SAAY,GACV,EAAA,EAAA,IAAA,GAAA,MACA,EAAA,EAAA,UAAA,GAAA,YAFF,CAAY,IAAA,QAAA,wBAAA,EAAuB,KAsD5B,IAAM,EAA6C,wBAEpD,SAAU,EAAe,GACtB,OAAA,IAAa,EAGhB,SAAU,EAAc,GACrB,MAAoB,iBAAb,IAA0B,EAAe,GAGnD,SAAU,EAAa,GACpB,MAAoB,WAApB,EAAO,IAAyB,EAAS,OAAS,EAAwB,IAG7E,SAAU,EAAmB,GAC1B,MAAoB,WAApB,EAAO,IAAyB,EAAS,OAAS,EAAwB,UAG7E,SAAU,EAAc,GACrB,OAAA,EAAa,IAAa,EAAmB,GAGtD,SAAS,EACP,EACA,GACA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,EAAA,GAAA,UAAA,GAMI,GAJC,IACH,EAAQ,IAGS,mBAAR,EAAoB,CACvB,IAAA,EAAuC,CAC3C,SAAU,GACV,aAAc,GACd,UAAW,EACX,IAAK,GAAS,EAAM,IAAM,OAAO,EAAM,UAAO,EAC9C,KAAM,EAAI,KACV,MAAK,EACL,SAAQ,EACR,aAAa,EACb,MAAO,CACL,OAAQ,EACR,SAAU,IAEZ,OAAQ,WACA,IAAA,EAAW,EAAgB,GAE7B,GAAA,EAAU,CACN,IAAA,EAAW,EAAmB,EAAkB,SAAU,CAAC,IACjE,EAAkB,aAAe,EAAkB,SACnD,EAAkB,SAAW,EAAuB,EAAmB,GAGlE,OAAA,EAAkB,UAE3B,YAAa,SAAC,GAKR,GAJA,IACF,EAAkB,MAAQ,GAGxB,EAAkB,WAAa,EAAkB,YAAa,CAC1D,IAAA,EAAiB,EAAkB,SACzC,EAAkB,SAEd,EAAkB,WAAa,GACjC,EAAkB,SAAS,EAAkB,aAAc,EAAkB,aAQ9E,OAFP,EAAkB,SAAW,EAAuB,GAE7C,EAAkB,SAGrB,IAAA,EAAgB,MAAM,QAAQ,EAAS,IAAM,EAAS,GAAK,EAE1D,MAAA,CACL,KAAM,EAAwB,IAC9B,IAAG,EACH,MAAK,EACL,SAAU,EAAc,IAAI,SAAC,GACvB,OAAA,EAAc,GACT,GACY,IAAV,GAAA,MAAmB,EAErB,EAEA,OAAO,MA8GP,QAAA,sBAAA,EAxGf,IAAM,EAAyB,SAC7B,EACA,QAAA,IAAA,IAAA,EAAA,IAEQ,IAAA,EAAA,EAAA,MAED,MAAA,CACL,kBAAiB,EACjB,KAAM,EAAwB,UAC9B,MAAK,EACL,SAAQ,IAIZ,SAAS,EAAgB,IACvB,EAAoB,GACF,MAAM,OAAS,EAEzB,IAAA,EAAA,EAAA,UAAW,EAAA,EAAA,MAAO,EAAA,EAAA,SAEnB,OAAA,EAAS,EAAA,EAAA,GACX,GAAK,CACR,SAAQ,KAIZ,SAAS,EAAmB,EAA0B,GAM/C,IALC,IAAA,EAAgB,EAAS,SAAS,OAClC,EAAY,EAAY,OACxB,EAAY,KAAK,IAAI,EAAe,GAEpC,EAAmC,GAChC,EAAI,EAAG,EAAI,EAAW,IAC7B,EAAS,KAAK,EAAgB,EAAU,EAAG,EAAS,SAAS,GAAI,EAAY,KAAO,GAE/E,OAAA,EAGT,SAAS,EACP,EACA,EACA,EACA,GAEI,GAAA,EAAc,IAAiB,EAAc,KAAc,EAAkB,EAAc,GAAW,CACpG,GAAA,EAAmB,IAAiB,EAAmB,GAGlD,OAFP,EAAa,kBAAkB,MAAQ,EAAS,kBAAkB,MAE3D,EAAa,kBAAkB,SAEtC,EAAS,SAAW,EAAmB,EAAc,EAAS,eAQ5D,GALA,EAAmB,KAErB,EAAa,kBAAkB,aAAc,GAG3C,EAAmB,GACd,OAAA,EAAS,kBAAkB,SAI/B,OAAA,EAGH,SAAU,EAAkB,EAA2B,GACvD,OAAA,EAAO,KAAgB,EAAA,KAEhB,EAAc,IAAS,EAAc,GACvC,IAAS,EACP,EAAK,OAAS,EAAK,OAEnB,EAAa,IAAS,EAAa,GACrC,EAAK,MAAQ,EAAK,IAChB,EAAmB,IAAS,EAAmB,GAEjD,EAAK,kBAAkB,YAAc,EAAK,kBAAkB,eAF9D,IAMH,SAAU,EAAS,GACjB,IAKQ,EALR,EAAA,EAAA,MAAE,EAAA,EAAA,OAAQ,EAAA,EAAA,SAgBT,YAdyB,IAArB,EAAS,KAClB,EAAS,GAAU,CACjB,MAAO,EACP,QAAU,EAKP,EAL6B,SAAC,GAC3B,EAAS,GAAQ,QAAU,IAC7B,EAAS,GAAQ,MAAQ,EACzB,EAAkB,kBAKxB,EAAkB,MAAM,UAGnB,CACL,EAAS,GAAQ,MACjB,EAAS,GAAQ,QAIN,IAAA,EAAA,CACb,cAAa,GADA,QAAA,QAAA;;AC7Pd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EARD,IAAA,EAAA,QAAA,gBAEgB,EAAA,WACR,IAAG,GAAH,EAAA,EAAA,UAAA,GAAG,GAEF,OAAA,WACL,EAAU,KAAK,YAElB,QAAA,QAAA;;ACAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EARc,IAAA,EAAA,SAAC,GACV,IAAA,EAED,GACD,EAAK,OAAO,KAAK,UAAU,QAAQ,KAAM,YAClC,EAAM,eAAe,IAEvB,OAAA,GACR,QAAA,QAAA;;ACQA,aAhBa,SAAU,EAAgB,GAClC,IACA,EADA,GAAU,EAGP,OAAA,WAAU,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,EAAA,GAAA,UAAA,GACf,EAAO,EAEF,IACH,GAAU,EAEV,sBAAsB,WACpB,GAAU,EACV,EAAE,WAAA,EAAI,OAIb,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;;ACmLA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAAA,QAAA,UAAA,EAAA,QAAA,YAAA,EAAA,QAAA,WAAA,EAAA,QAAA,WAAA,EAAA,QAAA,aAAA,EA9LD,IAAA,EAAA,EAAA,QAAA,4BACA,EAAA,EAAA,QAAA,0BACA,EAAA,EAAA,QAAA,4BAiDA,EAAA,EAAA,QAAA,YA2IC,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAA,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YA1Lc,EAAA,EAAA,QA0Ld,QAAA,QAAA,EApKD,IAAM,EAA6B,CACjC,eAAe,EAEf,MAAO,CACL,IAAK,GACL,KAAM,IAGR,SAAU,CACR,SAAU,KA+BV,EAAS,EAEP,EAAsC,GACtC,EAAwB,CAAC,GACzB,EAAU,GACV,EAMD,GAEC,SAAU,EAAU,GACxB,QAAQ,IAAI,iBAAkB,CAAE,OAAM,EAAE,UAAS,SAExB,IAAd,GAA6B,IAAc,IACpD,EAAS,GAGX,IAGI,SAAU,IACP,OAAA,EAGH,SAAU,IACP,OAAA,EAGT,SAAS,EAAW,EAAc,GAC5B,EAAS,IACX,EAAS,GAAM,QAAQ,SAAC,GAChB,IAAA,EAAY,EAAQ,EAAQ,EAAS,QAElB,IAAd,GAA6B,IAAc,IACpD,EAAS,KAKf,IAOF,SAAS,IACP,EAAU,QAAQ,SAAA,GAAM,OAAA,EAAG,KAG7B,IAAM,GAAwB,EAAgB,EAAA,SAAA,GAE9C,SAAS,IACP,OAAO,KAAK,GAAY,QAAQ,SAAA,GACxB,IAAA,EAAA,EAAA,GAAE,EAAA,EAAA,gBAAiB,EAAA,EAAA,mBAAoB,EAAA,EAAA,SAAU,EAAA,EAAA,YAAa,EAAA,EAAA,YAC9D,EAAc,EAAA,EAAA,GACf,EAAgB,EAAQ,IACxB,EAAmB,EAAW,IAG9B,EAAqB,EAAa,KACrC,EAAW,GAAI,YAAc,EAC7B,OAKA,SAAU,EAAW,EAAmB,GACvC,EAAS,KACZ,EAAS,GAAQ,GAEjB,EAAQ,GAAQ,SAAC,GACf,QAAQ,IAAI,iBAAkB,EAAM,GAEpC,EAAW,EAAM,KAIrB,EAAS,GAAM,KAAK,GAGhB,SAAU,EACd,EACA,GAEO,YAHP,IAAA,IAAA,EAAA,WAA0C,MAAA,UAC1C,IAAA,IAAA,EAAA,WAA+C,MAAA,KAExC,SAAC,GACC,OAAA,SAAmB,GACjB,IAAA,GAAA,EAAA,EAAA,WAAA,EAAA,EAAA,SAAA,IAAA,GACD,GAAc,EAApB,EAAA,WAkBO,OAfF,EAAW,KACd,EAAW,GAAM,CACf,gBAAe,EACf,mBAAkB,EAClB,SAAU,EACV,YAAW,EAAA,EAAA,GACN,EAAgB,EAAQ,IACxB,EAAmB,EAAW,IAEnC,YAAW,IAIf,EAAW,GAAI,SAAW,EAEnB,EAAA,QAAA,cAAC,EAAS,EAAA,GAAK,EAAW,GAAI,YAAiB,MAK5D,SAAS,EAAqB,EAAqB,GAC3C,IAAA,EAAc,OAAO,KAAK,GAI5B,OAHsB,EAAY,SAChB,OAAO,KAAK,GAAU,QAMrC,EAAY,MAAM,SAAC,GAAS,OAAA,EAAa,KAAU,EAAS;;ACbtD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlLf,IAMI,EANJ,EAAA,QAAA,WAQA,SAAS,EAAO,EAAmC,GAC5C,IAIL,EAAkB,EAAU,EAAG,EAAc,GAE7C,EAAe,GAGjB,SAAS,EACP,EACA,EACA,EACA,GAGM,IAAA,EAAY,EAAS,WAAW,IAEjC,GAAY,EACf,EAAS,YAAY,EAAW,EAAM,EAAU,IACvC,IAAa,EACtB,EAAS,YAAY,GACZ,GAAY,KACjB,EAAkB,EAAA,mBAAA,EAAU,GAC9B,EAAS,aAAa,EAAW,EAAM,EAAU,GAAa,IACrD,EAAc,EAAA,eAAA,KAAa,EAAc,EAAA,eAAA,MAC9C,EAAa,EAAA,cAAA,IACf,EAAiB,EAAU,EAAM,IAG/B,EAAmB,EAAA,oBAAA,GACrB,EAAkB,EAAU,EAAY,EAAqB,EAAS,SAAS,IAAK,EAAK,SAAS,IAElG,EAAe,EAAU,EAAM,KAMvC,SAAS,EAAqB,EAAmC,EAAuB,GAK/E,OAJP,EAAS,kBAAkB,SAAW,SAAC,EAAoC,GACzE,EAAkB,EAAU,EAAY,EAAW,IAG9C,EAAS,SAAS,OAAS,EAAW,EAAS,kBAAkB,SAI1E,SAAS,EAAqB,GACrB,OAAA,EAAmB,EAAA,oBAAA,GAAY,EAAS,kBAAkB,aAAe,EAGlF,SAAS,EAAW,EAA+B,EAAuB,GACpE,IAAA,EAAe,EAAA,gBAAA,GACV,OAAA,SAAS,eAAe,IAG7B,IAAA,EAAc,EAAA,eAAA,GACT,OAAA,SAAS,eAAe,GAG7B,IAAA,EAAmB,EAAA,oBAAA,GAEd,OAAA,GADP,EAAW,EAAqB,EAAU,EAAU,IACzB,SAAS,GAA2B,EAAU,GAGnE,IAAA,EAAA,EAAA,IAAK,EAAA,EAAA,MAAO,EAAA,EAAA,SAAA,OAAA,IAAA,EAAA,GAAA,EACd,EAAU,SAAS,cAAc,GAYhC,OAVH,EAAa,EAAA,cAAA,IACf,OAAO,KAAK,GAAO,QAAQ,SAAC,GAC1B,EAAa,EAAS,EAAK,EAAM,MAIrC,EAAS,QAAQ,SAAC,EAAQ,GACxB,EAAkB,EAAS,EAAG,KAAM,KAG/B,EAGT,SAAS,EAAe,EAA0B,EAAsB,GAKjE,IAJC,IAAA,GAAgB,EAAc,EAAA,eAAA,GAAY,EAAS,SAAS,OAAS,EACrE,GAAY,EAAc,EAAA,eAAA,GAAQ,EAAK,SAAS,OAAS,EACzD,EAAY,KAAK,IAAI,EAAe,GAEjC,EAAI,EAAG,EAAI,EAAW,IAAK,CAGlC,EACE,EACA,EAJoB,EAAqB,EAAS,SAAS,KAM3D,EAAc,EAAA,eAAA,GAAQ,EAAK,SAAS,GAAK,EAJ1B,wBASrB,SAAS,EAAiB,EAA0B,EAAsB,GAClE,IAAA,EAAc,OAAO,KAAK,EAAS,OACnC,EAAU,OAAO,KAAK,EAAK,OAEjC,EAAY,QAAQ,SAAC,GACd,EAAK,MAAM,eAAe,IAC7B,EAAgB,EAAS,EAAK,EAAS,MAAM,MAIjD,EAAQ,QAAQ,SAAC,GACX,EAAa,EAAS,IACpB,EAAS,MAAM,KAAS,EAAK,MAAM,IACrC,EAAgB,EAAS,EAAK,EAAS,MAAM,IAIjD,EAAa,EAAS,EAAK,EAAK,MAAM,MAI1C,SAAS,EAAa,EAAsB,GACtC,MAAQ,cAAR,OACkC,IAAtB,EAAQ,YACb,EAAI,WAAW,YAIxB,EAAQ,aAAa,GAIzB,SAAS,EAAa,EAAsB,EAAa,GAC3C,cAAR,EACF,EAAQ,UAAY,EACX,EAAI,WAAW,OACxB,EAAQ,iBAAiB,EAAI,QAAQ,MAAO,IAAI,cAAe,GAEnD,aAAR,GACF,EAAgC,EAAS,IAG3C,EAAQ,aAAa,EAAK,GAI9B,SAAS,EAAgB,EAAsB,EAAa,GAC9C,cAAR,SACK,EAAQ,UACN,EAAI,WAAW,OACxB,EAAQ,oBAAoB,EAAI,QAAQ,MAAO,IAAI,cAAe,GAEtD,aAAR,GACF,EAAiC,EAAS,IAG5C,EAAQ,gBAAgB,GAI5B,SAAS,EAAgC,EAAsB,GAC7D,EAAQ,iBAAiB,QAAS,GAClC,EAAQ,iBAAiB,QAAS,GAGpC,SAAS,EAAiC,EAAsB,GAC9D,EAAQ,oBAAoB,QAAS,GACrC,EAAQ,oBAAoB,QAAS,GAGxB,IAAA,EAAA,CAAE,OAAM,GAAR,QAAA,QAAA;;ACnJd,aAlCK,SAAU,IACN,IAAA,EAAA,OAAA,UAAA,UAEJ,OAAyC,GAAzC,EAAU,QAAQ,mBAAiC,cACX,GAAxC,EAAU,QAAQ,kBAAgC,aACV,GAAxC,EAAU,QAAQ,kBAAgC,aACV,GAAxC,EAAU,QAAQ,kBAAgC,iBACV,GAAxC,EAAU,QAAQ,kBAAgC,cACV,GAAxC,EAAU,QAAQ,kBAAgC,gBACrB,GAA7B,EAAU,QAAQ,OAAqB,WACV,GAA7B,EAAU,QAAQ,OAAqB,QACR,GAA/B,EAAU,QAAQ,SAAuB,QAEtC,UAGH,SAAU,IACV,IACA,IAAoB,OAAO,WAE3B,OAA0C,GAA1C,UAAU,UAAU,QAAQ,WAAoB,GAEC,GAA1C,UAAU,UAAU,QAAQ,WAAoB,GAEL,GAA3C,UAAU,UAAU,QAAQ,WAC9B,WAC0C,GAAxC,UAAU,UAAU,QAAQ,QAE9B,KACE,EACF,OAEA,UATA,SAFA,SAaV,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAAA,QAAA,WAAA;;AClCD,IAAIA,EAAY,KAChB,SAASC,IAKAD,OAJFA,IACHA,EAAYE,KAGPF,EAGT,SAASE,IAEH,IACI,MAAA,IAAIC,MACV,MAAOC,GACHC,IAAAA,GAAW,GAAKD,EAAIE,OAAOC,MAAM,iEACjCF,GAAAA,EACKG,OAAAA,EAAWH,EAAQ,IAIvB,MAAA,IAGT,SAASG,EAAWC,GACX,OAAC,GAAKA,GAAKC,QAAQ,wEAAwE,MAAQ,IAG5GC,QAAQT,aAAeD,EACvBU,QAAQH,WAAaA;;AC5BrB,IAAIN,EAAeU,QAAQ,gBAAgBV,aAE3C,SAASW,EAAgBC,GAClBC,MAAMC,QAAQF,KACjBA,EAAU,CAACA,IAGTG,IAAAA,EAAKH,EAAQA,EAAQI,OAAS,GAE9B,IACKC,OAAAA,QAAQC,QAAQR,QAAQK,IAC/B,MAAOb,GACHA,GAAa,qBAAbA,EAAIiB,KACC,OAAA,IAAIC,EAAY,SAAUF,EAASG,GACxCC,EAAYV,EAAQW,MAAM,GAAI,IAC3BC,KAAK,WACGd,OAAAA,QAAQK,KAEhBS,KAAKN,EAASG,KAIfnB,MAAAA,GAIV,SAASoB,EAAYV,GACZK,OAAAA,QAAQQ,IAAIb,EAAQc,IAAIC,IAGjC,IAAIC,EAAgB,GACpB,SAASC,EAAqBC,EAAMC,GAClCH,EAAcE,GAAQC,EAGxBC,OAAOvB,QAAUA,QAAUE,EAC3BF,QAAQwB,KAAOX,EACfb,QAAQyB,SAAWL,EAEnB,IAAIjB,EAAU,GACd,SAASe,EAAWQ,GACdpB,IAAAA,EAMAH,GALAC,MAAMC,QAAQqB,KAChBpB,EAAKoB,EAAO,GACZA,EAASA,EAAO,IAGdvB,EAAQuB,GACHvB,OAAAA,EAAQuB,GAGbL,IAAAA,GAAQK,EAAOC,UAAUD,EAAOE,YAAY,KAAO,EAAGF,EAAOnB,SAAWmB,GAAQG,cAChFC,EAAeX,EAAcE,GAC7BS,OAAAA,EACK3B,EAAQuB,GAAUI,EAAavC,IAAiBmC,GACpDX,KAAK,SAAUgB,GAKPA,OAJHA,GACFR,OAAOG,OAAOD,SAASnB,EAAIyB,GAGtBA,IACNC,MAAM,SAASC,GAGVA,aAFC9B,EAAQuB,GAETO,SAXRH,EAgBN,SAASnB,EAAYuB,GACdA,KAAAA,SAAWA,EACXC,KAAAA,QAAU,KAGjBxB,EAAYyB,UAAUrB,KAAO,SAAUsB,EAAWC,GAEzC,OADc,OAAjB,KAAKH,UAAkB,KAAKA,QAAU,IAAI3B,QAAQ,KAAK0B,WACpD,KAAKC,QAAQpB,KAAKsB,EAAWC,IAGtC3B,EAAYyB,UAAUJ,MAAQ,SAAUM,GAE/B,OADc,OAAjB,KAAKH,UAAkB,KAAKA,QAAU,IAAI3B,QAAQ,KAAK0B,WACpD,KAAKC,QAAQH,MAAMM;;ACE3B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,EAAA,QAAA,eAAA,EAAA,QAAA,KAAA,EAnFD,IAEI,EA0BA,EA5BJ,EAAA,QAAA,WAmFC,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,MAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OA/EK,EAAe,CACnB,kBAAmB,EACnB,oBAAqB,EACrB,KAAM,OACN,OAAQ,QACR,UAAU,EACV,cAAc,EACd,aAAa,GAGT,EAAgB,CACX,QAAA,eACT,aAAa,EACb,qBAAsB,UAAU,UAAY,KAC5C,cAAc,EAJM,EAAA,cAKpB,gBAAgB,EALI,EAAA,aAMpB,oBAAqB,QACrB,kBAAkB,EAClB,sBAAsB,EACtB,mBAAmB,EACnB,mBAAoB,MACpB,gBAAiB,KAKb,SAAgB,EAAK,GAqD1B,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAlDK,OAFJ,QAAQ,IAAI,gBAEP,EAAD,CAAA,EAAA,GAEa,CAAA,EAAM,QAAO,iBAAP,CAAO,QAAA,QAAA,sBAgD/B,KAAA,EAhDS,EAAS,EAAA,OACf,EAAW,EAAO,QA+CrB,EAAA,MAAA,EAAA,KAAA,EAAA,OA5CC,EAAS,IAAI,EAAS,IACf,SAAW,EA2CnB,CAAA,QAxCK,SAAU,IACR,IACA,EAAN,mCAcA,EAAK,CACM,QAAA,qBACT,WAAU,EAAA,EAAA,GACL,GAAa,CAChB,OAnBJ,UAoBI,SAAU,MAMV,SAAgB,EAAK,GAa1B,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAZC,QAAQ,IAAI,eAAgB,GAY7B,EAAA,MAAA,EAAA,KAAA,EATkB,OASlB,EAAA,KAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IATkB,CAAA,EAAM,EAAO,KAAK,IASpC,KAAA,EALG,OAJM,EAAS,EAAA,OAEf,QAAQ,IAAI,kBAAmB,GAE/B,CAAA,EAAO,GAKV,KAAA,EAAA,OAHG,EAAA,EAAA,OACA,QAAQ,MAAM,gBAAiB,GAElC,CAAA,EAAA,GAAA,KAAA,EAAA,MAAA,CAAA;;ACpBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,EA/DD,IAAA,EAAA,QAAA,uBAEA,EAAA,EAAA,QAAA,uBA6DC,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YA1DK,SAAU,EAAS,GACf,OAAA,EAAO,UACR,IAAA,2BACH,EAA2B,IAKjC,SAAS,EAA2B,GAM1B,QALC,EAAA,EAAA,WAAA,EAAA,EAAA,IACJ,EADI,EAAA,cACO,CACd,UAAW,EAAO,oBAAoB,YAGhC,EAAO,oBAAoB,UAC5B,IAAA,gCACM,EAAA,EAAA,WAAA,EAAA,EAAA,IACJ,EADI,EAAA,cACO,CACd,cAAc,KAEhB,MACG,IAAA,wCACH,EAAM,iBACN,MACG,IAAA,sCACH,EAAM,KAAK,CAAW,QAAA,+BACtB,MACG,IAAA,oCAEA,IAAA,6BAEA,IAAA,iCACH,MACG,IAAA,qCACH,EAAM,KAAK,CACA,QAAA,eACT,WAAY,SACZ,UAAW,YAEb,MACG,IAAA,2BACM,EAAA,EAAA,WAAA,EAAA,EAAA,IACJ,EADI,EAAA,cACO,CACd,cAAc,KAEhB,MACG,IAAA,4BACH,MACG,IAAA,4BACE,EAAY,EAAA,aAAA,aAGf,EAAM,KAAK,GAFX,SAAS,OAAS;;;AChCzB,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,EAvBD,IAAA,EAAA,QAAA,uBAuBC,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAnBK,SAAU,EAAS,GAmBxB,IAAA,EAlBS,OAAA,EAAO,UACR,IAAA,kBACK,EAAA,EAAA,aAAA,OAAA,IAAA,KAAA,IAEF,GAAS,EAAf,EAAA,cAES,EAAA,EAAA,WAAA,EAAA,EAAA,GACJ,GAAM,CACT,MAAK,EAAA,EAAA,GACA,EAAO,OAAK,CACf,KAAI,EAAA,EAAA,GACC,EAAO,MAAM,OAAI,EAAA,GAAA,EACnB,EAAO,KAAK,IAAK,EAAO,KAAI;;;ACyCxC,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,EA1DD,IAAA,EAAA,QAAA,uBA0DC,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAtDK,SAAU,EAAS,GACf,OAAA,EAAO,UACR,IAAA,wBACH,EAAwB,GACxB,MAEG,IAAA,mBACH,EAAmB,IAKzB,SAAS,EAAwB,GA0ChC,IAAA,EAzCS,EAAA,EAAA,QAAS,EAAA,EAAA,MAAO,EAAA,EAAA,aAElB,GAAS,EAAf,EAAA,aACM,EAAO,EAAO,MAAM,KAAK,IAAY,IAElC,EAAA,EAAA,WAAA,EAAA,EAAA,GACJ,GAAM,CACT,MAAK,EAAA,EAAA,GACA,EAAO,OAAK,CACf,KAAI,EAAA,EAAA,GACC,EAAO,MAAM,OAAI,EAAA,GAAA,EACnB,GAAO,EAAA,EAAA,GACH,GAAI,CACP,aAAY,EAEZ,MAAiB,MAAV,GAAiB,EAAK,OAAS,IAAK,SAQrD,SAAS,EAAmB,GAkB3B,IAAA,EAjBS,EAAA,EAAA,QAEF,GAAS,EAAf,EAAA,cAES,EAAA,EAAA,WAAA,EAAA,EAAA,GACJ,GAAM,CACT,SAAQ,EAAA,EAAA,GACH,EAAO,UAAQ,CAClB,SAAQ,EAAA,EAAA,GACH,EAAO,SAAS,WAAQ,EAAA,GAAA,EAC1B,EAAQ,SAAO,EACV,EAAO,SAAS,SAAS,EAAQ,UAAY,GAAG,CACpD,IAJI;;ACrCb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAVD,IAAA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,eAQC,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EANa,SAAU,EAAS,GAC/B,QAAQ,IAAI,iBAAkB,EAAO,SAAU,CAAE,OAAM,IAEvD,EAAO,SAAS,GAChB,EAAM,SAAS,GACf,EAAS,SAAS;;ACWpB,aAtBA,IAAA,EAAA,QAAA,uBAEA,EAAA,EAAA,QAAA,uBAoBA,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAlBA,EAAW,EAAA,YAAA,qBAAsB,SAAC,EAAQ,EAAS,GACzC,IAAA,EAAA,EAAA,YAEH,EAAM,KAAK,CACL,QAAA,+BACT,aAAc,OAIlB,EAAW,EAAA,YAAA,cAAe,SAAC,EAAQ,EAAS,GAClC,IAAA,EAAA,EAAA,KAEH,EAAM,KAAK,CACL,QAAA,0BACT,KAAI,OAIR,EAAW,EAAA,YAAA,UAAW,WACf,EAAM,KAAK,CAAW,QAAA;;;ACoB5B,IAAA,EAAA,UAAA,GA3CD,EAAA,QAAA,uBAEA,EAAA,EAAA,QAAA,uBAyCC,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,MAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAnCD,SAAe,IAmCd,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAxBgB,MAVG,sBACC,EASJ,CAAA,EAAM,EAAM,KAAK,CACrB,QAAA,WACT,eAXiB,EAYjB,aAbgB,sBAchB,MAAO,MAoBV,KAAA,EAjBK,OAPE,EAAS,EAAA,SAWP,EAAa,EAAM,SACrB,GAAS,EAAT,EAAA,cAEG,EAAA,EAAA,WAAA,EAAA,EAAA,GACJ,GAAM,CACT,MAAK,EAAA,EAAA,GACA,EAAO,OAAK,CACf,IAAG,EACE,EAAO,MAAM,IACb,QAIV,CAAA,IAhBG,CAAA,SAvBJ,EAAW,EAAA,YAAA,YAAa,WACjB;;;ACmFN,IAAA,EAAA,UAAA,GAxFD,EAAA,QAAA,uBAEA,EAAA,EAAA,QAAA,uBAsFC,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,MAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GApFK,EAAsB,GAc5B,SAAe,EAAiB,EAAgB,GAsE/C,YAtE+C,IAAA,IAAA,EAAA,GAsE/C,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EArEgB,MAAA,CAAA,EAAM,EAAqB,EAAQ,IAqEnD,KAAA,EAnEK,OAFA,EAAW,EAAA,QAOV,IAAiB,EAAS,OAA3B,CAAA,EAAA,GACgB,CAAA,EAAM,EAAqB,EAAQ,EAAS,GAAG,KALjE,CAAA,GAkEH,KAAA,GA7DS,EAAY,EAAA,UAGhB,EAAQ,EACH,EACA,IAwDV,EAAA,MAAA,EAAA,KAAA,EAAA,OAnDO,GAAS,EAAT,EAAA,cAEG,EAAA,EAAA,WAAA,EAAA,EAAA,GACJ,GAAM,CACT,SAAQ,EAAA,EAAA,GACH,EAAO,UAAQ,CAClB,SAAQ,EAAA,EAAA,GACH,EAAO,SAAS,WAAQ,EAAA,GAAA,EAC1B,GAAM,EACD,EAAO,SAAS,SAAS,IAAW,GACrC,GAAQ,SAyCpB,CAAA,QAlCD,SAAe,EAAqB,EAAgB,GAkCnD,YAlCmD,IAAA,IAAA,EAAA,GAkCnD,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAjCgB,MAAA,CAAA,EAAM,EAAM,KAAK,CACrB,QAAA,iBACT,QAAS,EACT,gBAAiB,EACjB,OAAQ,EACR,MAAO,KA4BV,KAAA,EAvBK,OAVE,EAAS,EAAA,QAcf,CAAA,EAAO,EAAO,UAHZ,CAAA,QAMJ,SAAe,EAAgB,EAAgB,EAAc,GAgB5D,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EAfC,MAAA,CAAA,EAAM,EAAM,KAAK,CACN,QAAA,cACT,QAAS,EACT,sBAAuB,CACZ,QAAA,mBACT,KAAM,CACK,QAAA,gBACT,KAAI,EACJ,SAAU,IAEZ,0BAA0B,EAC1B,aAAa,GAEf,oBAAqB,KAExB,KAAA,EAAA,OAfC,EAAA,OAeD,CAAA,SAlFD,EAAW,EAAA,YAAA,mBAAoB,SAAC,EAAQ,EAAS,GACzC,IAAA,EAAA,EAED,EAFG,EAAA,OAAQ,EAAA,kBAKlB,EAAW,EAAA,YAAA,kBAAmB,SAAC,EAAQ,EAAS,GACxC,IAAA,EAAA,EAED,EAFG,EAAA,OAAQ,EAAA,KAAM,EAAA;;ACXxB,aAFA,QAAA,YACA,QAAA,WACA,QAAA;;ACMC,aANK,SAAU,EAAe,GACtB,OAAA,EAAQ,QAAQ,KAAO,EAAQ,QAAQ,KAAK,KAAO,oBAGtD,SAAU,EAAa,GACpB,OAAA,EAAQ,YAChB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAAA,QAAA,aAAA;;ACRD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,IAAA,EAAA,QAAA,cAAA,OAAA,KAAA,GAAA,QAAA,SAAA,GAAA,YAAA,GAAA,eAAA,GAAA,OAAA,eAAA,QAAA,EAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA;;;ACQA,IAAA,EAAA,UAAA,GARA,EAAA,QAAA,oBAEA,EAAA,EAAA,QAAA,oBAEA,EAAA,EAAA,QAAA,eAIA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAHA,QAAA,aACA,QAAA,aAEA,IAAA,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,aAAA,EAAW,EAAA,YAAA,OAAQ,SAAC,GAGlB,OAFA,EAAM,KAAK,EAAX,SAEA,EAAA,EAAA,GACK,GAAM,CACT,eAAe;;;ACXnB,IAAA,EAAA,UAAA,GAFA,EAAA,QAAA,iBAEA,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,aAAA,EAAW,EAAA,YAAA,qBAAsB,SAAC,EAAQ,EAAS,GACzC,IAAA,EAAA,EAAA,YAER,OAAA,EAAA,EAAA,GACK,GAAM,CACT,gBAAiB;;;ACLrB,IAAA,EAAA,UAAA,GAFA,EAAA,QAAA,iBAEA,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,aAAA,EAAW,EAAA,YAAA,aAAc,SAAC,EAAQ,EAAS,GACjC,IAAA,EAAA,EAAA,GAER,OAAA,EAAA,EAAA,GACK,GAAM,CACT,MAAK,EAAA,EAAA,GACA,EAAO,OAAK,CACf,WAAY;;ACPlB,aAFA,QAAA,WACA,QAAA,UACA,QAAA;;;;ACMe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EARf,IAAA,EAAA,EAAA,QAAA,iBAQe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GANf,QAAA,kBAEA,IAAM,EAAc,WACX,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,WAAS,eAGlB,EAAA,EAAA,QAAA,QAAA;;ACUA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAhBf,IAAA,EAAA,EAAA,QAAA,oBAgBe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAff,QAAA,iBASA,IAAM,EAAqB,SAAC,GAAE,IAAA,EAAA,EAAA,QAAS,EAAA,EAAA,SAEnC,OAAA,EAAA,QAAA,cAAA,SAAA,CAAQ,UAAU,SAAS,QAAS,GAA4B,IAIrD,EAAA,EAAA,QAAA,QAAA;;ACOA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAxBf,IAAA,EAAA,EAAA,QAAA,oBAwBe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAtBf,QAAA,oBASA,IAAM,EAAwB,SAAC,GAAE,IAAA,EAAA,EAAA,GAAI,EAAA,EAAA,SAAU,EAAA,EAAA,WAAY,EAAA,EAAA,YAEvD,OAAA,EAAA,QAAA,cAAA,QAAA,CACE,UAAU,YACV,KAAK,OACL,GAAI,EACJ,SAAU,EACV,WAAY,EACZ,YAAa,KAKJ,EAAA,EAAA,QAAA,QAAA;;ACLA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAnBf,IAAA,EAAA,EAAA,QAAA,oBAmBe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAjBf,QAAA,iBASA,IAAM,EAAqB,SAAC,GAAE,IAAA,EAAA,EAAA,SAAU,EAAA,EAAA,GAAI,EAAA,EAAA,KAAM,EAAA,EAAA,SAE9C,OAAA,EAAA,QAAA,cAAA,SAAA,CAAQ,UAAU,SAAS,GAAI,EAAI,KAAM,EAAM,SAAU,GACtD,IAKQ,EAAA,EAAA,QAAA,QAAA;;ACqCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAvDf,IAAA,EAAA,EAAA,QAAA,uBACA,EAAA,QAAA,uBAEA,EAAA,EAAA,QAAA,kCACA,EAAA,EAAA,QAAA,qCACA,EAAA,EAAA,QAAA,kCAkDe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAhDf,QAAA,0BAIA,IAAM,EAA8B,SAAC,GAAE,IAAA,EAAA,EAAA,mBAC/B,GAAA,EAAA,EAAA,WAAA,GAAC,EAAA,EAAA,GAAe,EAAA,EAAA,GAmBpB,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,GAAG,0BACN,EAAA,QAAA,cAAA,MAAA,CAAK,GAAG,SACR,EAAA,QAAA,cAAA,KAAA,KAAA,uBACA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,QAAf,kCAEE,EAAA,QAAA,cAAA,KAAA,MAFF,uBAIA,EAAA,QAAA,cAAA,MAAA,KACE,EAAA,QAAA,cAAC,EAAD,QAAO,CAAC,GAAG,sBACT,EAAA,QAAA,cAAA,SAAA,CAAQ,MAAM,MAAI,eAGtB,EAAA,QAAA,cAAA,MAAA,KACE,EAAA,QAAA,cAAC,EAAD,QAAU,CAAC,GAAG,uBAAuB,YAAY,eAAe,SA9B7D,SAAoB,GACrB,IAAA,EAAS,EAAE,OAEjB,EAAO,MAAQ,EAAO,MAAM,QAAQ,UAAW,IAE/C,EAAyC,KAAxB,EAAO,MAAM,YA2B5B,EAAA,QAAA,cAAA,MAAA,KACG,GACC,EAAA,QAAA,cAAC,EAAD,QAAO,CAAC,QA1BP,WAED,IAAA,EAAY,SAAS,eAAe,sBACpC,EAAc,SAAS,eAAe,wBACtC,EAAc,GAAG,EAAU,MAAQ,EAAY,MACrD,EAAmB,CAAE,YAAW,MAqBG,WAOxB,GAAA,EACb,EAAA,iBAAA,EACA,SAAC,EAAW,GAEH,MAAA,CAAE,mBADD,EAAA,qBAHG,CAMb,GANa,QAAA,QAAA;;;ACRA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA/Cf,IAAA,EAAA,EAAA,QAAA,uBACA,EAAA,QAAA,uBAEA,EAAA,EAAA,QAAA,kCACA,EAAA,EAAA,QAAA,qCA2Ce,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAzCf,QAAA,mBAIA,IAAM,EAA8B,SAAC,GAAE,IAAA,EAAA,EAAA,gBAAiB,EAAA,EAAA,YAChD,GAAA,EAAA,EAAA,WAAA,GAAC,EAAA,EAAA,GAAe,EAAA,EAAA,GAiBpB,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,GAAG,kBACN,EAAA,QAAA,cAAA,MAAA,CAAK,GAAG,WACR,EAAA,QAAA,cAAA,KAAA,KAAK,GACL,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,QAAf,0BAEE,EAAA,QAAA,cAAA,KAAA,MAFF,kBAIA,EAAA,QAAA,cAAA,MAAA,KACE,EAAA,QAAA,cAAC,EAAD,QAAU,CAAC,GAAG,eAAe,YAAY,OAAO,SAvB7C,SAAa,GACd,IAAA,EAAS,EAAE,OAEjB,EAAO,MAAQ,EAAO,MAAM,QAAQ,SAAU,IAE9C,EAAyC,IAAxB,EAAO,MAAM,YAoB5B,EAAA,QAAA,cAAA,MAAA,KACG,GACC,EAAA,QAAA,cAAC,EAAD,QAAO,CAAC,QAnBP,WACD,IACA,EADY,SAAS,eAAe,gBACnB,MACvB,EAAY,CAAE,KAAI,MAgBiB,WAOxB,GAAA,EACb,EAAA,YAAA,SAAA,GAES,MAAA,CAAE,gBADD,EAAA,kBAGV,SAAC,EAAW,GAEH,MAAA,CAAE,YADD,EAAA,cANG,CASb,GATa,QAAA,QAAA;;;AC5BA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EArBf,IAAA,EAAA,EAAA,QAAA,oBACA,EAAA,QAAA,oBAEA,EAAA,EAAA,QAAA,iCACA,EAAA,EAAA,QAAA,0BAiBe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAbf,IAAM,EAAmB,SAAC,GAChB,OADkB,EAAA,WAEnB,IAAA,6BACI,OAAA,EAAA,QAAA,cAAC,EAAD,QAAS,MACb,IAAA,iCAEI,OAAA,EAAA,QAAA,cAAA,MAAA,KAAA,uBACJ,IAAA,oCACL,QACS,OAAA,EAAA,QAAA,cAAC,EAAD,QAAgB,QAId,GAAA,EACb,EAAA,YAAA,SAAA,GAES,MAAA,CAAE,UADD,EAAA,YAFG,CAKb,GALa,QAAA,QAAA;;ACYA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAjCf,IAAA,EAAA,EAAA,QAAA,iBAiCe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA7Bf,QAAA,iBAQA,IAAM,EAAqB,SAAC,GAAE,IAAA,EAAA,EAAA,KAAA,OAAA,IAAA,EAAA,QAAA,EAAgB,EAAA,EAAA,KAAM,EAAA,EAAA,SAEhD,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAW,eAAe,GAC5B,EAAO,EAAe,GAAQ,IAKrC,SAAS,EAAe,GAClB,OAAC,EAAK,MAIH,EAAK,MACT,QAAQ,aAAc,IACtB,MAAM,KACN,IAAI,SAAC,GAAiB,OAAA,EAAK,GAAG,gBAC9B,MAAM,EAAG,GACT,KAAK,IARC,GAWI,IAAA,EAAA,EAAA,QAAA,QAAA;;;ACJA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA7Bf,IAAA,EAAA,EAAA,QAAA,0BACA,EAAA,QAAA,0BAIA,EAAA,QAAA,qCAEA,EAAA,EAAA,QAAA,kCAsBe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GApBf,QAAA,eAQA,IAAM,EAAmB,SAAC,GAAE,IAAA,EAAA,EAAA,KAAM,EAAA,EAAA,WAAY,EAAA,EAAA,WAE1C,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAW,SAAQ,EAAa,WAAa,IAAM,QAAS,WAAM,OAAA,EAAW,CAAE,GAAI,EAAK,OAC3F,EAAA,QAAA,cAAC,EAAD,QAAO,CAAC,KAAM,IACd,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,QACb,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,SAAS,EAAK,OAC7B,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,gBAAgB,EAAK,eAAgB,EAAe,EAAA,gBAAA,EAAK,kBAMjE,GAAA,EACb,EAAA,YAAA,SAAC,EAAQ,GACC,IAAA,EAAA,EAAA,MACA,EAAA,EAAA,GAED,MAAA,CACL,KAAM,EAAM,KAAK,GACjB,WAAY,OAAO,KAAQ,EAAM,aAGrC,SAAC,EAAW,GAEH,MAAA,CAAE,WADD,EAAA,aAXG,CAcb,GAda,QAAA,QAAA;;AC3Bd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAFc,IAAA,EAAA,SAAI,GACV,OAAA,OAAO,KAAK,GAAQ,IAAI,SAAA,GAAO,OAAA,EAAO,MAC9C,QAAA,QAAA;;ACmBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EArBc,IAAA,EAAA,SACb,EACA,EACA,GAEO,YAFP,IAAA,IAAA,EAAA,OAEO,EAAW,KAAK,SAAC,EAAG,GACrB,IAAA,EACA,EAYG,MAViB,mBAAb,GACT,EAAS,EAAS,GAClB,EAAS,EAAS,KAGlB,EAAU,EAAiB,GAC3B,EAAU,EAAiB,IAId,OAAR,EAAgB,EAAS,EAAS,EAAS,KAErD,QAAA,QAAA;;;ACiBc,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAtCf,IAAA,EAAA,EAAA,QAAA,0BACA,EAAA,QAAA,0BAIA,EAAA,EAAA,QAAA,WAEA,EAAA,EAAA,QAAA,mCAEA,QAAA,mBACA,IAAA,EAAA,EAAA,QAAA,6BACA,EAAA,EAAA,QAAA,6BA2Be,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GApBf,IAAM,EAAuB,SAAC,GAAE,IAAA,EAAA,EAAA,MAAO,EAAA,EAAA,eAAgB,EAAA,EAAA,UAMnD,OALG,GACH,IAIA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,YACb,EACE,EAAA,QAAA,cAAA,MAAA,KACG,EAAM,IAAI,SAAC,GAAE,IAAA,EAAA,EAAA,GACZ,OAAA,EAAA,QAAA,cAAC,EAAD,QAAK,CAAC,IAAK,EAAI,GAAI,OAIvB,EAAA,QAAA,cAAC,EAAD,QAAQ,QAMD,GAAA,EACb,EAAA,YAAA,SAAA,GACQ,IAAA,EAAY,EAAO,MAAM,IAAI,OAC7B,EAAiB,EAAY,GAAK,OAAO,KAAK,EAAO,MAAM,MAAM,QAAU,EAM1E,MAAA,CACL,MANkB,GAEhB,EAAQ,EAAA,UAAA,EAAQ,EAAA,SAAA,EAAO,MAAM,MAAO,SAAA,GAAQ,OAAA,EAAK,cAAgB,EAAK,aAAa,OACnF,KAIF,eAAc,IAGlB,SAAC,EAAW,GAEH,MAAA,CAAE,UADD,EAAA,YAfG,CAkBb,GAlBa,QAAA,QAAA;;AC5BA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAVf,IAAA,EAAA,EAAA,QAAA,0BAEA,EAAA,EAAA,QAAA,eAQe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GANf,IAAM,EAAiB,WAEnB,OAAA,EAAA,QAAA,cAAC,EAAD,QAAS,OAIE,EAAA,EAAA,QAAA,QAAA;;;ACUA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EApBf,IAAA,EAAA,EAAA,QAAA,0BACA,EAAA,QAAA,0BAEA,EAAA,EAAA,QAAA,kCAiBe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAff,QAAA,uBAMA,IAAM,EAA2B,SAAC,GAAE,IAAA,EAAA,EAAA,KAEhC,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,gBACb,EAAA,QAAA,cAAC,EAAD,QAAO,CAAC,KAAK,SAAS,KAAM,IAC5B,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,SAAS,EAAK,SAKpB,GAAA,EACb,EAAA,YAAA,SAAA,GACQ,IAAA,EAAA,EAAA,MAAE,EAAA,EAAA,WAAY,EAAA,EAAA,KAIb,MAAA,CACL,KAHW,GAAc,EAAK,KAJrB,CAUb,GAVa,QAAA,QAAA;;AClBd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAFc,IAAA,EAAA,SAAC,GACd,QAAQ,UAAU,KAAK,IACxB,QAAA,QAAA;;ACFD,aAEA,OAAA,QAAA,WAEA,MAAA;;ACeC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAlBD,IAAA,EAAA,EAAA,QAAA,gBAkBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhBD,IAAM,GAAW,EAAjB,EAAA,WACM,EAAgB,IAAI,OAAO,QAAS,EAAa,EAAA,WAAA,OAAS,MAAO,IAExD,EAAA,SAAC,GAGV,IAFgB,EAAc,KAAK,GAG9B,OAAA,EAIH,IADF,IAAA,EAAa,EACX,EAAS,KAAK,IAClB,IAGK,OAAA,GACR,QAAA,QAAA;;;AC4Gc,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA/Hf,IAAA,EAAA,EAAA,QAAA,0BACA,EAAA,QAAA,0BAGA,EAAA,QAAA,qCACA,EAAA,EAAA,QAAA,0CACA,EAAA,EAAA,QAAA,kCAyHe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAxHf,QAAA,kBAwHe,IAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GA/GT,EAAsB,SAAC,GAAE,IAEzB,EACA,EAHyB,EAAA,EAAA,QAAS,EAAA,EAAA,WAChC,GAAO,EAAe,EAAA,gBAAA,GAIxB,GAAA,EAAM,CACF,IAAA,GAAiB,EAAqB,EAAA,SAAA,GAExC,GACF,EAAY,EAAiB,cAAc,OAAmB,EAC9D,EAAY,IAEZ,EAAY,OACZ,EAAY,EAAiB,EAAM,CAAC,EAAe,EAAsB,KAK3E,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAW,YAAW,EAAa,WAAa,IAAE,MAAI,EAAa,EAAA,cAAA,GAAW,MAAQ,KACzF,EAAA,QAAA,cAAC,EAAD,QAAO,CAAC,KAAK,SAAO,MACpB,EAAA,QAAA,cAAA,MAAA,CAAK,UAAW,GAAY,KAKlC,SAAS,EAAiB,EAAc,GAGjC,IAFD,IAAA,EAAoB,CAAC,GAEhB,EAAA,SAAA,EAAO,GACd,EAAQ,EAAM,OAAO,SAAC,EAA2B,GACzC,IAAA,EAAW,EAAU,GAAG,GAE9B,OAAA,EACK,EACA,IAEJ,KARI,EAAI,EAAG,EAAI,EAAU,OAAQ,EAAI,EAAG,IAApC,EAAA,GAWF,OAAiB,IAAjB,EAAM,OAAe,EAAM,GAAK,EAGzC,SAAS,EAAc,GACjB,MAAgB,iBAAT,EACF,CAAC,GAGH,EACJ,MAAM,OACN,OAAO,SAAC,EAAmB,GAInB,OAHP,EAAM,KAAK,GACX,EAAM,KAAK,EAAA,QAAA,cAAA,KAAA,OAEJ,GACN,IAGP,SAAS,EAAS,GACT,OAAA,EACL,EACA,SAAA,GAAQ,OAAA,EAAK,WAAW,UAAY,EAAK,WAAW,WACpD,SAAA,GACE,OAAA,EAAA,QAAA,cAAA,IAAA,CAAG,KAAM,EAAM,OAAO,UAAU,KAKtC,SAAS,EAAqB,GACrB,OAAA,EACL,EACA,SAAA,GAAQ,OAAA,EAAK,OAAS,IACtB,SAAA,GACE,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,uBAAuB,KAK5C,SAAS,EACP,EACA,EACA,GAEI,GAAgB,iBAAT,EACF,MAAA,CAAC,GAGN,IAAA,GAAa,EAEV,OAAA,EACJ,MAAM,KACN,OAAO,SAAC,EAAmB,EAAc,GAiBjC,OAhBH,EAAO,IACL,EAAM,OAAS,IAAM,IACvB,EAAM,EAAM,OAAS,IAAM,KAE7B,EAAM,KAAK,EAAU,IACrB,GAAa,IAET,EAAM,OAAS,IAAM,EACvB,EAAM,EAAM,OAAS,IAAM,IAAI,EAE/B,EAAM,KAAK,EAAa,IAAI,EAAS,GAGvC,GAAa,GAGR,GACN,IAGQ,IAAA,GAAA,EACb,EAAA,YAAA,SAAC,EAAQ,GACC,IAAA,EAAA,EAAA,SACA,EAAA,EAAA,GAED,MAAA,CACL,WAAY,OAAO,KAAQ,EAAS,aAGxC,SAAC,EAAW,GAEH,MAAA,CAAE,cADD,EAAA,gBAVG,CAab,GAba,QAAA,QAAA;;;ACpFA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA3Cf,IAAA,EAAA,EAAA,QAAA,0BACA,EAAA,QAAA,0BAIA,EAAA,EAAA,QAAA,6BACA,EAAA,EAAA,QAAA,gCAEA,EAAA,EAAA,QAAA,mCACA,EAAA,EAAA,QAAA,cAkCe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhCf,QAAA,sBAOA,IAAM,EAA0B,SAAC,GAAE,IAAA,EAAA,EAAA,eAAgB,EAAA,EAAA,SAAU,EAAA,EAAA,iBAWzD,OAVG,GACH,EAAiB,CAAE,OAAQ,KAGlB,EAAA,EAAA,SAAA,WACH,IAAA,EAAkB,SAAS,uBAAuB,eAAe,GACvE,EAAgB,UAAY,EAAgB,eAI5C,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,eACb,EACE,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,sBACZ,EAAS,IAAI,SAAA,GACZ,OAAA,EAAA,QAAA,cAAC,EAAD,QAAQ,CAAC,IAAK,EAAQ,GAAI,QAAS,OAIvC,EAAA,QAAA,cAAC,EAAD,QAAQ,QAMD,GAAA,EACb,EAAA,YAAA,SAAA,GACU,IAAA,EAAA,EAAA,MAAO,EAAA,EAAA,SAET,EAAe,EAAM,WAAa,EAAS,SAAS,EAAM,YAAc,KAEvE,MAAA,CACL,eAAgB,EAAM,WAEtB,SAAU,IAAgB,EAAQ,EAAA,SAAA,EAAc,OAAQ,UAG5D,SAAC,EAAW,GAEH,MAAA,CAAE,iBADD,EAAA,mBAbG,CAgBb,GAhBa,QAAA,QAAA;;;ACHA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAxCf,IAAA,EAAA,EAAA,QAAA,0BACA,EAAA,QAAA,0BAEA,EAAA,EAAA,QAAA,wCACA,QAAA,uBACA,IAAA,EAAA,EAAA,QAAA,gCAmCe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA7Bf,IAAM,EAA2B,SAAC,GAAE,IAAA,EAAA,EAAA,eAAgB,EAAA,EAAA,gBAehD,OAHS,EAAA,EAAA,SAAA,GAGT,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,gBACb,EAAA,QAAA,cAAC,EAAD,QAAU,CAAC,GAAG,qBAAqB,YAAY,UAAU,WAfpD,SAAmC,GACxB,KAAd,EAAE,SAAkB,KAAK,MAAM,OAAO,SACxC,EAAgB,CACd,OAAQ,EACR,KAAM,KAAK,QAGR,KAAA,MAAQ,SAanB,SAAS,IACD,IAAA,EAAQ,SAAS,eAAe,sBAElC,GACF,EAAM,QAIK,IAAA,GAAA,EACb,EAAA,YAAA,SAAC,GAGQ,MAAA,CACL,eAHM,EAAA,MAGgB,aAG1B,SAAC,EAAW,GAEH,MAAA,CAAE,gBADD,EAAA,kBATG,CAYb,GAZa,QAAA,QAAA;;;ACVA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA9Bf,IAAA,EAAA,EAAA,QAAA,0BACA,EAAA,QAAA,0BAEA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,mBAyBe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAvBf,QAAA,uBAMA,IAAM,EAA2B,SAAC,GAAE,IAAA,EAAA,EAAA,eAEhC,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,gBACZ,EACC,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,mBACb,EAAA,QAAA,cAAC,EAAD,QAAa,MACb,EAAA,QAAA,cAAC,EAAD,QAAY,MACZ,EAAA,QAAA,cAAC,EAAD,QAAa,OAGf,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,oBAAkB,uCAO1B,GAAA,EACb,EAAA,YAAA,SAAC,GACQ,MAAA,CACL,eAAgB,EAAO,MAAM,aAHpB,CAMb,GANa,QAAA,QAAA;;ACTA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EArBf,IAAA,EAAA,EAAA,QAAA,oBACA,EAAA,QAAA,oBAEA,EAAA,EAAA,QAAA,iCACA,EAAA,EAAA,QAAA,qCAiBe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAdf,QAAA,eAIA,IAAM,EAAmB,WAErB,OAAA,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,QACb,EAAA,QAAA,cAAC,EAAD,QAAW,MACX,EAAA,QAAA,cAAC,EAAD,QAAa,QAMJ,GAAA,EAEb,EAAA,aAFa,CAEb,GAFa,QAAA,QAAA;;;ACiBA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EArCf,IAAA,EAAA,EAAA,QAAA,iBAEA,QAAA,aAEA,IAAA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,sBACA,EAAA,EAAA,QAAA,sBA+Be,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EA1Bf,IAAM,EAAkB,SAAC,GAAE,IAAA,EAAA,EAAA,cAAe,EAAA,EAAA,UAAW,EAAA,EAAA,KAS/C,GARJ,QAAQ,IAAI,gBAAiB,GAIxB,GACH,IAGE,EACM,OAAA,GACD,IAAA,6BACA,IAAA,iCACA,IAAA,oCACI,OAAA,EAAA,QAAA,cAAC,EAAD,QAAK,MACT,IAAA,2BACA,IAAA,4BACA,IAAA,+BACA,IAAA,0BACI,OAAA,EAAA,QAAA,cAAC,EAAD,QAAK,MAIX,OAAA,EAAA,QAAA,cAAC,EAAD,QAAQ,OAGF,GAAA,EACb,EAAA,YAAA,SAAA,GAES,MAAA,CAAE,cADD,EAAA,cACgB,UADD,EAAA,YAGzB,SAAC,EAAW,GAEH,MAAA,CAAE,KADD,EAAA,OANG,CASb,GATa,QAAA,QAAA;;ACvBf,aAfA,IAAA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,oBAEA,EAAA,EAAA,QAAA,UAYA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAXA,QAAA,iBAWA,IAAA,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YATA,EAAS,QAAA,OACP,EAAA,QAAA,cAAC,EAAD,QAAI,MACJ,SAAS,eAAe,SAG1B,SAAS,iBAAiB,WAAY,WACpC,QAAQ,IAAI,gBAAgB,EAA5B,EAAA,gBAGF,SAAS,iBAAiB,cAAe,YAC9B,EAAA,EAAA,WAAA,EAAA,EAAA,IACJ,EADI,EAAA,cACO,CACd,UAAW;;AClBff,OAAOvB,QAAU,SAAsB0B,GAC9B,OAAA,IAAIlB,QAAQ,SAAUC,EAASG,GAChC2B,IAAAA,EAASC,SAASC,cAAc,UACpCF,EAAOG,OAAQ,EACfH,EAAOlB,KAAO,kBACdkB,EAAOI,QAAU,QACjBJ,EAAOK,IAAMlB,EACba,EAAOM,QAAU,SAAUZ,GACzBM,EAAOM,QAAUN,EAAOO,OAAS,KACjClC,EAAOqB,IAGTM,EAAOO,OAAS,WACdP,EAAOM,QAAUN,EAAOO,OAAS,KACjCrC,KAGF+B,SAASO,qBAAqB,QAAQ,GAAGC,YAAYT","file":"src.c531b8ed.js","sourceRoot":"../src","sourcesContent":["// import React from 'react';\n// export { useState } from 'react';\n// export default React;\n\nexport type Props = AnyLiteral;\nexport type FC<P extends Props = any> = (props: P) => VirtualElementComponent;\n\nexport enum VirtualElementTypesEnum {\n  Tag,\n  Component,\n}\n\nexport type VirtualElementEmpty = 'VIRTUAL_ELEMENT_EMPTY';\n\nexport type VirtualElementText = string;\n\nexport interface VirtualElementTag {\n  type: VirtualElementTypesEnum.Tag,\n  tag: string,\n  props: Props,\n  children: VirtualElementChildren,\n}\n\nexport interface VirtualElementComponent {\n  type: VirtualElementTypesEnum.Component,\n  componentInstance: ComponentInstance,\n  props: Props,\n  children: VirtualElementChildren,\n}\n\ninterface ComponentInstance {\n  $element: VirtualElementComponent,\n  $prevElement: VirtualElementComponent,\n  Component: FC,\n  name: string,\n  key?: string,\n  props: Props,\n  children: VirtualElementChildren,\n  state: ComponentInstanceState,\n  render: () => VirtualElementComponent,\n  forceUpdate: Function,\n  onUpdate?: Function,\n  isUnmounted: boolean,\n}\n\nexport type VirtualElement = VirtualElementTag | VirtualElementComponent;\nexport type VirtualElementChild = VirtualElement | VirtualElementEmpty | VirtualElementText;\nexport type VirtualElementChildren = VirtualElementChild[];\n// Fix for default JSX type error.\nexport type JsxChildren = VirtualElementChildren | VirtualElementChild;\n\ninterface ComponentInstanceState {\n  cursor: number,\n  byCursor: {\n    value: any,\n    setter: Function\n  }[],\n}\n\nlet renderingInstance: ComponentInstance;\n\nexport const VIRTUAL_ELEMENT_EMPTY: VirtualElementEmpty = 'VIRTUAL_ELEMENT_EMPTY';\n\nexport function isEmptyElement($element: VirtualElementChild): $element is VirtualElementEmpty {\n  return $element === VIRTUAL_ELEMENT_EMPTY;\n}\n\nexport function isTextElement($element: VirtualElementChild): $element is VirtualElementText {\n  return typeof $element === 'string' && !isEmptyElement($element);\n}\n\nexport function isTagElement($element: VirtualElementChild): $element is VirtualElementTag {\n  return typeof $element === 'object' && $element.type === VirtualElementTypesEnum.Tag;\n}\n\nexport function isComponentElement($element: VirtualElementChild): $element is VirtualElementComponent {\n  return typeof $element === 'object' && $element.type === VirtualElementTypesEnum.Component;\n}\n\nexport function isRealElement($element: VirtualElementChild): $element is VirtualElement {\n  return isTagElement($element) || isComponentElement($element);\n}\n\nfunction createElement(\n  tag: string | FC,\n  props: Props,\n  ...children: any[]\n): VirtualElement {\n  if (!props) {\n    props = {};\n  }\n\n  if (typeof tag === 'function') {\n    const componentInstance: ComponentInstance = {\n      $element: {} as VirtualElementComponent,\n      $prevElement: {} as VirtualElementComponent,\n      Component: tag,\n      key: props && props.key ? String(props.key) : undefined,\n      name: tag.name,\n      props,\n      children,\n      isUnmounted: false,\n      state: {\n        cursor: 0,\n        byCursor: [],\n      },\n      render: () => {\n        const rendered = renderComponent(componentInstance);\n\n        if (rendered) {\n          const children = getUpdatedChildren(componentInstance.$element, [rendered]);\n          componentInstance.$prevElement = componentInstance.$element;\n          componentInstance.$element = createComponentElement(componentInstance, children);\n        }\n\n        return componentInstance.$element;\n      },\n      forceUpdate: (props?: Props) => {\n        if (props) {\n          componentInstance.props = props;\n        }\n\n        if (componentInstance.onUpdate && !componentInstance.isUnmounted) {\n          const currentElement = componentInstance.$element;\n          componentInstance.render();\n\n          if (componentInstance.$element !== currentElement) {\n            componentInstance.onUpdate(componentInstance.$prevElement, componentInstance.$element);\n          }\n        }\n      },\n    };\n\n    componentInstance.$element = createComponentElement(componentInstance);\n\n    return componentInstance.$element;\n  }\n\n  const childrenArray = Array.isArray(children[0]) ? children[0] : children;\n\n  return {\n    type: VirtualElementTypesEnum.Tag,\n    tag,\n    props,\n    children: childrenArray.map((child): VirtualElementChild => {\n      if (isRealElement(child)) {\n        return child;\n      } else if (child === false || child === null || child === undefined) {\n        // Support for `&&` operators.\n        return VIRTUAL_ELEMENT_EMPTY;\n      } else {\n        return String(child);\n      }\n    }),\n  };\n}\n\nconst createComponentElement = (\n  componentInstance: ComponentInstance,\n  children: VirtualElementChildren = [],\n): VirtualElementComponent => {\n  const { props } = componentInstance;\n\n  return {\n    componentInstance,\n    type: VirtualElementTypesEnum.Component,\n    props,\n    children,\n  };\n};\n\nfunction renderComponent(componentInstance: ComponentInstance) {\n  renderingInstance = componentInstance;\n  renderingInstance.state.cursor = 0;\n\n  const { Component, props, children } = componentInstance;\n\n  return Component({\n    ...props,\n    children,\n  });\n}\n\nfunction getUpdatedChildren($element: VirtualElement, newChildren: VirtualElementChildren) {\n  const currentLength = $element.children.length;\n  const newLength = newChildren.length;\n  const maxLength = Math.max(currentLength, newLength);\n\n  const children: VirtualElementChildren = [];\n  for (let i = 0; i < maxLength; i++) {\n    children.push(getUpdatedChild($element, i, $element.children[i], newChildren[i]) || VIRTUAL_ELEMENT_EMPTY);\n  }\n  return children;\n}\n\nfunction getUpdatedChild(\n  $element: VirtualElement,\n  childIndex: number,\n  currentChild: VirtualElementChild,\n  newChild: VirtualElementChild,\n) {\n  if (isRealElement(currentChild) && isRealElement(newChild) && !hasElementChanged(currentChild, newChild)) {\n    if (isComponentElement(currentChild) && isComponentElement(newChild)) {\n      currentChild.componentInstance.props = newChild.componentInstance.props;\n      // TODO Support new children\n      return currentChild.componentInstance.render();\n    } else {\n      newChild.children = getUpdatedChildren(currentChild, newChild.children);\n    }\n  } else {\n    if (isComponentElement(currentChild)) {\n      // TODO Remove hooks.\n      currentChild.componentInstance.isUnmounted = true;\n    }\n\n    if (isComponentElement(newChild)) {\n      return newChild.componentInstance.render();\n    }\n  }\n\n  return newChild;\n}\n\nexport function hasElementChanged($old: VirtualElementChild, $new: VirtualElementChild) {\n  if (typeof $old !== typeof $new) {\n    return true;\n  } else if (isTextElement($old) || isTextElement($new)) {\n    return $old !== $new;\n  } else if ($old.type !== $new.type) {\n    return true;\n  } else if (isTagElement($old) && isTagElement($new)) {\n    return $old.tag !== $new.tag;\n  } else if (isComponentElement($old) && isComponentElement($new)) {\n    // TODO Support keys.\n    return $old.componentInstance.Component !== $new.componentInstance.Component;\n  }\n}\n\nexport function useState(initial: any) {\n  const { cursor, byCursor } = renderingInstance.state;\n\n  if (typeof byCursor[cursor] === 'undefined') {\n    byCursor[cursor] = {\n      value: initial,\n      setter: ((componentInstance) => (newValue: any) => {\n        if (byCursor[cursor].value !== newValue) {\n          byCursor[cursor].value = newValue;\n          componentInstance.forceUpdate();\n        }\n      })(renderingInstance),\n    };\n\n    renderingInstance.state.cursor++;\n  }\n\n  return [\n    byCursor[cursor].value,\n    byCursor[cursor].setter,\n  ];\n}\n\nexport default {\n  createElement,\n};\n\n","import { useState } from '../lib/teact';\n\nexport default  () => {\n  const [, setRandom] = useState(0);\n\n  return () => {\n    setRandom(Math.random());\n  }\n};\n","export default (store: AnyLiteral) => {\n  let id;\n\n  do {\n    id = String(Math.random()).replace('0.', 'id');\n  } while (store.hasOwnProperty(id));\n\n  return id;\n};\n","export default function throttleWithRaf(fn) {\n  let waiting = false;\n  let args;\n\n  return function (..._args) {\n    args = _args;\n\n    if (!waiting) {\n      waiting = true;\n\n      requestAnimationFrame(() => {\n        waiting = false;\n        fn(...args);\n      });\n    }\n  };\n}\n","// TODO default?\n// import React, { getGlobal, setGlobal } from 'reactn';\n// export { addReducer, getGlobal, setGlobal, withGlobal, useGlobal } from 'reactn';\n\nimport { UpdateAuthorizationStateType } from '../api/tdlib/updates';\nimport useForceUpdate from '../hooks/useForceUpdate';\nimport generateIdFor from '../util/generateIdFor';\nimport throttleWithRaf from '../util/throttleWithRaf';\n\nexport default React;\n\nexport type GlobalState = {\n  isInitialized: boolean,\n\n  chats: {\n    selectedId?: number;\n    ids: number[],\n    byId: Record<string, ApiChat>,\n  },\n\n  messages: {\n    selectedId?: number;\n    byChatId: Record<string, ApiMessage[]>,\n  },\n\n  // TODO Move to `auth`.\n  isLoggingOut?: boolean,\n  authState?: UpdateAuthorizationStateType,\n  authPhoneNumber?: string,\n};\n\nconst INITIAL_STATE: GlobalState = {\n  isInitialized: false,\n\n  chats: {\n    ids: [],\n    byId: {},\n  },\n\n  messages: {\n    byChatId: {}\n  }\n};\n\ntype ActionTypes = (\n  // system\n  'init' | 'setAuthPhoneNumber' | 'setAuthCode' | 'signOut' |\n  // chats\n  'loadChats' | 'selectChat' |\n  // messages\n  'loadChatMessages' | 'selectMessage' | 'sendTextMessage'\n  );\n\nexport type DispatchMap = Record<ActionTypes, Function>;\n\n/* Polyfill start */\nimport React, { FC, Props, useState } from './teact';\nimport { ApiMessage } from '../modules/tdlib/types/messages';\nimport { ApiChat } from '../modules/tdlib/types/chats';\n\ntype ActionPayload = AnyLiteral;\n\ntype Reducer = (\n  global: GlobalState,\n  actions: DispatchMap,\n  payload?: ActionPayload,\n) => GlobalState | void;\n\ntype MapStateToProps = ((global: GlobalState, ownProps?: any) => AnyLiteral);\ntype MapActionsToProps = ((setGlobal: Function, actions: DispatchMap) => Partial<DispatchMap>);\n\nlet global = INITIAL_STATE;\n\nconst reducers: Record<string, Reducer[]> = {};\nconst callbacks: Function[] = [updateContainers];\nconst actions = {} as DispatchMap;\nconst containers: Record<string, {\n  mapStateToProps: MapStateToProps,\n  mapReducersToProps: MapActionsToProps,\n  ownProps: Props;\n  mappedProps: Props;\n  forceUpdate: Function;\n}> = {};\n\nexport function setGlobal(newGlobal: GlobalState) {\n  console.log('[State] UPDATE', { global, newGlobal });\n\n  if (typeof newGlobal !== 'undefined' && newGlobal !== global) {\n    global = newGlobal;\n  }\n\n  runCallbacksThrottled();\n}\n\nexport function getGlobal() {\n  return global;\n}\n\nexport function getDispatch() {\n  return actions;\n}\n\nfunction onDispatch(name: string, payload?: ActionPayload) {\n  if (reducers[name]) {\n    reducers[name].forEach((reducer) => {\n      const newGlobal = reducer(global, actions, payload);\n\n      if (typeof newGlobal !== 'undefined' && newGlobal !== global) {\n        global = newGlobal;\n      }\n    });\n  }\n\n  runCallbacksThrottled();\n}\n\n// export function addCallback(cb: Function) {\n//   callbacks.push(cb);\n// }\n\nfunction runCallbacks() {\n  callbacks.forEach(cb => cb(global));\n}\n\nconst runCallbacksThrottled = throttleWithRaf(runCallbacks);\n\nfunction updateContainers() {\n  Object.keys(containers).forEach(id => {\n    const { mapStateToProps, mapReducersToProps, ownProps, mappedProps, forceUpdate } = containers[id];\n    const newMappedProps = {\n      ...mapStateToProps(global, ownProps),\n      ...mapReducersToProps(setGlobal, actions),\n    };\n\n    if (!arePropsShallowEqual(mappedProps, newMappedProps)) {\n      containers[id].mappedProps = newMappedProps;\n      forceUpdate();\n    }\n  });\n}\n\nexport function addReducer(name: ActionTypes, reducer: Reducer) {\n  if (!reducers[name]) {\n    reducers[name] = [];\n\n    actions[name] = (payload?: ActionPayload) => {\n      console.log('[State] ACTION', name, payload);\n\n      onDispatch(name, payload);\n    };\n  }\n\n  reducers[name].push(reducer);\n}\n\nexport function withGlobal(\n  mapStateToProps: MapStateToProps = () => ({}),\n  mapReducersToProps: MapActionsToProps = () => ({}),\n) {\n  return (Component: FC) => {\n    return function Container(props: Props) {\n      const [id] = useState(generateIdFor(containers));\n      const forceUpdate = useForceUpdate();\n\n      // TODO Support unmount.\n      if (!containers[id]) {\n        containers[id] = {\n          mapStateToProps,\n          mapReducersToProps,\n          ownProps: props,\n          mappedProps: {\n            ...mapStateToProps(global, props),\n            ...mapReducersToProps(setGlobal, actions),\n          },\n          forceUpdate,\n        };\n      }\n\n      containers[id].ownProps = props;\n\n      return <Component {...containers[id].mappedProps} {...props} />;\n    };\n  };\n}\n\nfunction arePropsShallowEqual(currentProps: Props, newProps: Props) {\n  const currentKeys = Object.keys(currentProps);\n  const currentKeysLength = currentKeys.length;\n  const newKeysLength = Object.keys(newProps).length;\n\n  if (currentKeysLength !== newKeysLength) {\n    return false;\n  }\n\n  return currentKeys.every((prop) => currentProps[prop] === newProps[prop]);\n}\n","// import ReactDOM from 'react-dom';\n// export default ReactDOM;\n\nimport {\n  hasElementChanged,\n  isComponentElement, isEmptyElement, isRealElement, isTextElement, isTagElement, VIRTUAL_ELEMENT_EMPTY,\n  VirtualElement, VirtualElementChild, VirtualElementComponent,\n} from './teact';\n\nlet $currentRoot: VirtualElementComponent;\n\nfunction render($element: VirtualElementComponent, parentEl: HTMLElement | null) {\n  if (!parentEl) {\n    return;\n  }\n\n  renderWithVirtual(parentEl, 0, $currentRoot, $element);\n\n  $currentRoot = $element;\n}\n\nfunction renderWithVirtual(\n  parentEl: HTMLElement,\n  childIndex: number,\n  $current: VirtualElementChild | null,\n  $new: VirtualElementChild,\n) {\n\n  const currentEl = parentEl.childNodes[childIndex];\n\n  if (!$current && $new) {\n    parentEl.appendChild(createNode($new, parentEl, childIndex));\n  } else if ($current && !$new) {\n    parentEl.removeChild(currentEl);\n  } else if ($current && $new) {\n    if (hasElementChanged($current, $new)) {\n      parentEl.replaceChild(createNode($new, parentEl, childIndex), currentEl);\n    } else if (isRealElement($current) && isRealElement($new)) {\n      if (isTagElement($current)) {\n        updateAttributes($current, $new, currentEl as HTMLElement);\n      }\n\n      if (isComponentElement($new)) {\n        renderWithVirtual(parentEl, childIndex, getActualPrevElement($current.children[0]), $new.children[0]);\n      } else {\n        renderChildren($current, $new, currentEl as HTMLElement);\n      }\n    }\n  }\n}\n\nfunction initComponentElement($element: VirtualElementComponent, parentEl: HTMLElement, childIndex: number) {\n  $element.componentInstance.onUpdate = ($previous: VirtualElementComponent, $updated: VirtualElementComponent) => {\n    renderWithVirtual(parentEl, childIndex, $previous, $updated);\n  };\n\n  return $element.children.length ? $element : $element.componentInstance.render();\n}\n\n// Child components tree is always changed on each render so we need to get updated reference for `prevElement`.\nfunction getActualPrevElement($element: VirtualElementChild): VirtualElementChild {\n  return isComponentElement($element) ? $element.componentInstance.$prevElement : $element;\n}\n\nfunction createNode($element: VirtualElementChild, parentEl: HTMLElement, childIndex: number): Node {\n  if (isEmptyElement($element)) {\n    return document.createTextNode('');\n  }\n\n  if (isTextElement($element)) {\n    return document.createTextNode($element);\n  }\n\n  if (isComponentElement($element)) {\n    $element = initComponentElement($element, parentEl, childIndex);\n    return createNode($element.children[0] as VirtualElementChild, parentEl, childIndex);\n  }\n\n  const { tag, props, children = [] } = $element;\n  const element = document.createElement(tag);\n\n  if (isTagElement($element)) {\n    Object.keys(props).forEach((key) => {\n      addAttribute(element, key, props[key]);\n    });\n  }\n\n  children.forEach(($child, i) => {\n    renderWithVirtual(element, i, null, $child);\n  });\n\n  return element;\n}\n\nfunction renderChildren($current: VirtualElement, $new: VirtualElement, currentEl: HTMLElement) {\n  const currentLength = isRealElement($current) ? $current.children.length : 0;\n  const newLength = isRealElement($new) ? $new.children.length : 0;\n  const maxLength = Math.max(currentLength, newLength);\n\n  for (let i = 0; i < maxLength; i++) {\n    const $currentChild = getActualPrevElement($current.children[i]);\n\n    renderWithVirtual(\n      currentEl,\n      i,\n      $currentChild,\n      isRealElement($new) ? $new.children[i] : VIRTUAL_ELEMENT_EMPTY,\n    );\n  }\n}\n\nfunction updateAttributes($current: VirtualElement, $new: VirtualElement, element: HTMLElement) {\n  const currentKeys = Object.keys($current.props);\n  const newKeys = Object.keys($new.props);\n\n  currentKeys.forEach((key) => {\n    if (!$new.props.hasOwnProperty(key)) {\n      removeAttribute(element, key, $current.props[key]);\n    }\n  });\n\n  newKeys.forEach((key) => {\n    if (hasAttribute(element, key)) {\n      if ($current.props[key] !== $new.props[key]) {\n        removeAttribute(element, key, $current.props[key]);\n      }\n    }\n\n    addAttribute(element, key, $new.props[key]);\n  });\n}\n\nfunction hasAttribute(element: HTMLElement, key: string) {\n  if (key === 'className') {\n    return typeof element.className !== 'undefined';\n  } else if (key.startsWith('on')) {\n    // There is no way to check event listener, so there will be some redundant removes, but it is fine.\n    return true;\n  } else {\n    element.hasAttribute(key);\n  }\n}\n\nfunction addAttribute(element: HTMLElement, key: string, value: any) {\n  if (key === 'className') {\n    element.className = value;\n  } else if (key.startsWith('on')) {\n    element.addEventListener(key.replace(/^on/, '').toLowerCase(), value);\n\n    if (key === 'onChange') {\n      setupAdditionalOnChangeHandlers(element, value);\n    }\n  } else {\n    element.setAttribute(key, value);\n  }\n}\n\nfunction removeAttribute(element: HTMLElement, key: string, value: any) {\n  if (key === 'className') {\n    delete element.className;\n  } else if (key.startsWith('on')) {\n    element.removeEventListener(key.replace(/^on/, '').toLowerCase(), value);\n\n    if (key === 'onChange') {\n      removeAdditionalOnChangeHandlers(element, value);\n    }\n  } else {\n    element.removeAttribute(key);\n  }\n}\n\nfunction setupAdditionalOnChangeHandlers(element: HTMLElement, handler: EventHandlerNonNull) {\n  element.addEventListener('input', handler);\n  element.addEventListener('paste', handler);\n}\n\nfunction removeAdditionalOnChangeHandlers(element: HTMLElement, handler: EventHandlerNonNull) {\n  element.removeEventListener('paste', handler);\n  element.removeEventListener('input', handler);\n}\n\nexport default { render };\n","export function getOsName() {\n  const { userAgent } = window.navigator;\n\n  if (userAgent.indexOf('Windows NT 10.0') != -1) return 'Windows 10';\n  if (userAgent.indexOf('Windows NT 6.2') != -1) return 'Windows 8';\n  if (userAgent.indexOf('Windows NT 6.1') != -1) return 'Windows 7';\n  if (userAgent.indexOf('Windows NT 6.0') != -1) return 'Windows Vista';\n  if (userAgent.indexOf('Windows NT 5.1') != -1) return 'Windows XP';\n  if (userAgent.indexOf('Windows NT 5.0') != -1) return 'Windows 2000';\n  if (userAgent.indexOf('Mac') != -1) return 'Mac/iOS';\n  if (userAgent.indexOf('X11') != -1) return 'UNIX';\n  if (userAgent.indexOf('Linux') != -1) return 'Linux';\n\n  return 'Unknown';\n}\n\nexport function getBrowser() {\n  let isIE = /*@cc_on!@*/ false;\n  let isEdge = !isIE && !!window.StyleMedia;\n\n  if (navigator.userAgent.indexOf('Chrome') != -1 && !isEdge) {\n    return 'Chrome';\n  } else if (navigator.userAgent.indexOf('Safari') != -1 && !isEdge) {\n    return 'Safari';\n  } else if (navigator.userAgent.indexOf('Firefox') != -1) {\n    return 'Firefox';\n  } else if (navigator.userAgent.indexOf('MSIE') != -1) {\n    //IF IE > 10\n    return 'IE';\n  } else if (isEdge) {\n    return 'Edge';\n  } else {\n    return 'Unknown';\n  }\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","import { getBrowser, getOsName } from './utils';\n\nlet client: any;\n\nconst INIT_OPTIONS = {\n  logVerbosityLevel: 1,\n  jsLogVerbosityLevel: 3,\n  mode: 'wasm',\n  prefix: 'tdlib',\n  readOnly: false,\n  isBackground: false,\n  useDatabase: false,\n};\n\nconst TD_PARAMETERS = {\n  '@type': 'tdParameters',\n  use_test_dc: false,\n  system_language_code: navigator.language || 'en',\n  device_model: getBrowser(),\n  system_version: getOsName(),\n  application_version: '0.0.1',\n  use_secret_chats: false,\n  use_message_database: true,\n  use_file_database: false,\n  database_directory: '/db',\n  files_directory: '/',\n};\n\nlet TdClient: any;\n\nexport async function init(onUpdate: Function) {\n  console.log('[TdLib] INIT');\n\n  if (!TdClient) {\n    // @ts-ignore\n    const module = await import('tdweb/dist/tdweb');\n    TdClient = module.default;\n  }\n\n  client = new TdClient(INIT_OPTIONS);\n  client.onUpdate = onUpdate;\n}\n\nexport function sendParameters() {\n  const apiId = process.env.REACT_APP_TELEGRAM_API_ID;\n  const apiHash = process.env.REACT_APP_TELEGRAM_API_HASH;\n\n  if (!apiId || !apiHash) {\n    if (\n      window.confirm(\n        'API id is missing!\\n' +\n        'In order to obtain an API id and develop your own application ' +\n        'using the Telegram API please visit https://core.telegram.org/api/obtaining_api_id',\n      )\n    ) {\n      window.location.href = 'https://core.telegram.org/api/obtaining_api_id';\n    }\n  }\n\n  send({\n    '@type': 'setTdlibParameters',\n    parameters: {\n      ...TD_PARAMETERS,\n      api_id: apiId,\n      api_hash: apiHash,\n    },\n  });\n}\n\n// TODO Types.\nexport async function send(request: any) {\n  console.log('[TdLib] SEND', request);\n\n  try {\n    const result = await client.send(request);\n\n    console.log('[TdLib] RECEIVE', result);\n\n    return result;\n  } catch (err) {\n    // TODO Notification\n    console.error('[TdLib] ERROR', err);\n  }\n}\n","import { getGlobal, setGlobal } from '../../../lib/teactn';\n\nimport * as TdLib from '../../../api/tdlib';\nimport { TdLibUpdate, TdLibUpdateAuthorizationState } from '../../../api/tdlib/updates';\n\nexport function onUpdate(update: TdLibUpdate) {\n  switch (update['@type']) {\n    case 'updateAuthorizationState':\n      onUpdateAuthorizationState(update);\n      break;\n  }\n}\n\nfunction onUpdateAuthorizationState(update: TdLibUpdateAuthorizationState) {\n  setGlobal({\n    ...getGlobal(),\n    authState: update.authorization_state['@type'],\n  });\n\n  switch (update.authorization_state['@type']) {\n    case 'authorizationStateLoggingOut':\n      setGlobal({\n        ...getGlobal(),\n        isLoggingOut: true,\n      });\n      break;\n    case 'authorizationStateWaitTdlibParameters':\n      TdLib.sendParameters();\n      break;\n    case 'authorizationStateWaitEncryptionKey':\n      TdLib.send({ '@type': 'checkDatabaseEncryptionKey' });\n      break;\n    case 'authorizationStateWaitPhoneNumber':\n      break;\n    case 'authorizationStateWaitCode':\n      break;\n    case 'authorizationStateWaitPassword':\n      break;\n    case 'authorizationStateWaitRegistration':\n      TdLib.send({\n        '@type': 'registerUser',\n        first_name: 'Tester',\n        last_name: 'Account',\n      });\n      break;\n    case 'authorizationStateReady':\n      setGlobal({\n        ...getGlobal(),\n        isLoggingOut: false,\n      });\n      break;\n    case 'authorizationStateClosing':\n      break;\n    case 'authorizationStateClosed':\n      if (!getGlobal().isLoggingOut) {\n        document.title += ': Zzz…';\n      } else {\n        TdLib.init(onUpdate);\n      }\n      break;\n    default:\n      break;\n  }\n}\n","import { getGlobal, setGlobal } from '../../../lib/teactn';\n\nimport { TdLibUpdate } from '../../../api/tdlib/updates';\n\nexport function onUpdate(update: TdLibUpdate) {\n  switch (update['@type']) {\n    case 'updateNewChat':\n      const { byId = {} } = getGlobal().chats || {};\n\n      const global = getGlobal();\n\n      setGlobal({\n        ...global,\n        chats: {\n          ...global.chats,\n          byId: {\n            ...global.chats.byId,\n            [update.chat.id]: update.chat,\n          },\n        },\n      });\n      break;\n  }\n}\n","import { getGlobal, setGlobal } from '../../../lib/teactn';\n\nimport { TdLibUpdate } from '../../../api/tdlib/updates';\n\nexport function onUpdate(update: TdLibUpdate) {\n  switch (update['@type']) {\n    case 'updateChatLastMessage':\n      onUpdateChatLastMessage(update);\n      break;\n\n    case 'updateNewMessage':\n      onUpdateNewMessage(update);\n      break;\n  }\n}\n\nfunction onUpdateChatLastMessage(update: TdLibUpdate) {\n  const { chat_id, order, last_message } = update;\n\n  const global = getGlobal();\n  const chat = global.chats.byId[chat_id] || {};\n\n  setGlobal({\n    ...global,\n    chats: {\n      ...global.chats,\n      byId: {\n        ...global.chats.byId,\n        [chat_id]: {\n          ...chat,\n          last_message,\n          // @magic\n          order: order === '0' && chat.order || order,\n        },\n      },\n    },\n  });\n}\n\n\nfunction onUpdateNewMessage(update: TdLibUpdate) {\n  const { message } = update;\n\n  const global = getGlobal();\n\n  setGlobal({\n    ...global,\n    messages: {\n      ...global.messages,\n      byChatId: {\n        ...global.messages.byChatId,\n        [message.chat_id]: [\n          ...(global.messages.byChatId[message.chat_id] || []),\n          message,\n        ],\n      },\n    },\n  });\n}\n","import { TdLibUpdate } from '../../../api/tdlib/updates';\n\nimport * as system from './system';\nimport * as chats from './chats';\nimport * as messages from './messages';\n\nexport default function onUpdate(update: TdLibUpdate) {\n  console.log('[TdLib] UPDATE', update['@type'], { update });\n\n  system.onUpdate(update);\n  chats.onUpdate(update);\n  messages.onUpdate(update);\n}\n","import { addReducer } from '../../../lib/teactn';\n\nimport * as TdLib from '../../../api/tdlib';\n\naddReducer('setAuthPhoneNumber', (global, actions, payload) => {\n  const { phoneNumber } = payload!;\n\n  void TdLib.send({\n    '@type': 'setAuthenticationPhoneNumber',\n    phone_number: phoneNumber,\n  });\n});\n\naddReducer('setAuthCode', (global, actions, payload) => {\n  const { code } = payload!;\n\n  void TdLib.send({\n    '@type': 'checkAuthenticationCode',\n    code,\n  });\n});\n\naddReducer('signOut', () => {\n  void TdLib.send({ '@type': 'logOut' });\n});\n","import { addReducer, getGlobal, setGlobal } from '../../../lib/teactn';\n\nimport * as TdLib from '../../../api/tdlib';\n\naddReducer('loadChats', () => {\n  void loadChats();\n});\n\nasync function loadChats() {\n  let offsetOrder = '9223372036854775807'; // 2^63 - 1\n  let offsetChatId = 0;\n  // if (!replace && chats && chats.length > 0) {\n  //   const chat = ChatStore.get(chats[chats.length - 1]);\n  //   if (chat) {\n  //     offsetOrder = chat.order;\n  //     offsetChatId = chat.id;\n  //   }\n  // }\n\n  const result = await TdLib.send({\n    '@type': 'getChats',\n    offset_chat_id: offsetChatId,\n    offset_order: offsetOrder,\n    limit: 25,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  const { chat_ids } = result;\n  const global = getGlobal();\n\n  setGlobal({\n    ...global,\n    chats: {\n      ...global.chats,\n      ids: [\n        ...global.chats.ids,\n        ...chat_ids,\n      ],\n    },\n  });\n}\n","import { addReducer, getGlobal, setGlobal } from '../../../lib/teactn';\n\nimport * as TdLib from '../../../api/tdlib';\n\nconst MESSAGE_SLICE_LIMIT = 20;\n\naddReducer('loadChatMessages', (global, actions, payload) => {\n  const { chatId, fromMessageId } = payload!;\n\n  void loadChatMessages(chatId, fromMessageId);\n});\n\naddReducer('sendTextMessage', (global, actions, payload) => {\n  const { chatId, text, fromMessageId } = payload!;\n\n  void sendTextMessage(chatId, text, fromMessageId);\n});\n\nasync function loadChatMessages(chatId: number, fromMessageId = 0) {\n  let messages = await loadChatMessagesPart(chatId, fromMessageId);\n\n  if (!messages) {\n    return;\n  }\n\n  // Request without `fromMessageId` always returns only last message.\n  if (!fromMessageId && messages.length) {\n    const messages2 = await loadChatMessagesPart(chatId, messages[0].id);\n\n    if (messages2) {\n      messages = [\n        ...messages,\n        ...messages2,\n      ];\n    }\n  }\n\n  const global = getGlobal();\n\n  setGlobal({\n    ...global,\n    messages: {\n      ...global.messages,\n      byChatId: {\n        ...global.messages.byChatId,\n        [chatId]: [\n          ...(global.messages.byChatId[chatId] || []),\n          ...messages,\n        ],\n      },\n    },\n  });\n}\n\nasync function loadChatMessagesPart(chatId: number, fromMessageId = 0) {\n  const result = await TdLib.send({\n    '@type': 'getChatHistory',\n    chat_id: chatId,\n    from_message_id: fromMessageId,\n    offset: 0,\n    limit: MESSAGE_SLICE_LIMIT,\n  }) as {\n    messages: AnyLiteral[];\n  };\n\n  if (!result) {\n    return;\n  }\n\n  return result.messages;\n}\n\nasync function sendTextMessage(chatId: number, text: string, replyToMessageId?: number) {\n  await TdLib.send({\n    '@type': 'sendMessage',\n    chat_id: chatId,\n    input_message_content: {\n      '@type': 'inputMessageText',\n      text: {\n        '@type': 'formattedText',\n        text,\n        entities: [],\n      },\n      disable_web_page_preview: false,\n      clear_draft: true,\n    },\n    reply_to_message_id: replyToMessageId,\n  });\n}\n","import './system';\nimport './chats';\nimport './messages';\n","import { ApiMessage } from '../types/messages';\n\nexport function getMessageText(message: ApiMessage) {\n  return message.content.text ? message.content.text.text : '%NO_TEXT_MESSAGE%';\n}\n\nexport function isOwnMessage(message: ApiMessage) {\n  return message.is_outgoing;\n}\n","export * from './messages';\n","import { addReducer, GlobalState } from '../../lib/teactn';\n\nimport * as TdLib from '../../api/tdlib';\n\nimport onUpdate from './updaters';\nimport './actions';\nimport './helpers';\n\naddReducer('init', (global: GlobalState) => {\n  TdLib.init(onUpdate);\n\n  return {\n    ...global,\n    isInitialized: true,\n  };\n});\n","import { addReducer } from '../lib/teactn';\n\naddReducer('setAuthPhoneNumber', (global, actions, payload) => {\n  const { phoneNumber } = payload!;\n\n  return {\n    ...global,\n    authPhoneNumber: phoneNumber,\n  };\n});\n","import { addReducer } from '../lib/teactn';\n\naddReducer('selectChat', (global, actions, payload) => {\n  const { id } = payload!;\n\n  return {\n    ...global,\n    chats: {\n      ...global.chats,\n      selectedId: id,\n    }\n  };\n});\n","import './tdlib';\nimport './auth';\nimport './chats';\n","import React, { FC } from '../lib/teact';\n\nimport './Loading.scss';\n\nconst Loading: FC = () => {\n  return <div className=\"Loading\">Loading...</div>\n};\n\nexport default Loading;\n","import { MouseEvent } from 'react';\n\nimport React, { FC, JsxChildren } from '../../lib/teact';\nimport './Button.scss';\n\ntype OnClickHandler = (e: MouseEvent<HTMLButtonElement>) => void;\n\ninterface IProps {\n  onClick: Function\n  children: JsxChildren,\n}\n\nconst Button: FC<IProps> = ({ onClick, children }) => {\n  return (\n    <button className=\"Button\" onClick={onClick as OnClickHandler}>{children}</button>\n  );\n};\n\nexport default Button;\n","import { ChangeEvent } from 'react';\nimport React, { FC } from '../../lib/teact';\n\nimport './InputText.scss';\n\ninterface IProps {\n  id?: string,\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void,\n  onKeyPress?: (e: React.KeyboardEvent<HTMLInputElement>) => void,\n  placeholder: string,\n}\n\nconst InputText: FC<IProps> = ({ id, onChange, onKeyPress, placeholder }) => {\n  return (\n    <input\n      className=\"InputText\"\n      type=\"text\"\n      id={id}\n      onChange={onChange}\n      onKeyPress={onKeyPress}\n      placeholder={placeholder}\n    />\n  );\n};\n\nexport default InputText;\n","import { ChangeEvent } from 'react';\nimport React, { FC, JsxChildren } from '../../lib/teact';\n\nimport './Select.scss';\n\ninterface IProps {\n  id?: string,\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void,\n  name?: string,\n  children: JsxChildren,\n}\n\nconst Select: FC<IProps> = ({ onChange, id, name, children }) => {\n  return (\n    <select className='Select' id={id} name={name} onChange={onChange}>\n      {children}\n    </select>\n  );\n};\n\nexport default Select;\n","import { ChangeEvent } from 'react';\n\nimport React, { FC, useState } from '../../../lib/teact';\nimport { DispatchMap, withGlobal } from '../../../lib/teactn';\n\nimport Button from '../../../components/ui/Button';\nimport InputText from '../../../components/ui/InputText';\nimport Select from '../../../components/ui/Select';\n\nimport './AuthPhoneNumber.scss';\n\ntype IProps = Pick<DispatchMap, 'setAuthPhoneNumber'>;\n\nconst AuthPhoneNumber: FC<IProps> = ({ setAuthPhoneNumber }) => {\n  const [isButtonShown, setIsButtonShown] = useState(false);\n\n  function onPhoneNumberChange(e: ChangeEvent<HTMLInputElement>) {\n    const target = e.target;\n\n    target.value = target.value.replace(/[^\\d]+/g, '');\n\n    setIsButtonShown(target.value.length === 10);\n  }\n\n  function handleSubmit() {\n    // TODO ref\n    const codeInput = document.getElementById('sign-in-phone-code') as HTMLSelectElement;\n    const numberInput = document.getElementById('sign-in-phone-number') as HTMLInputElement;\n    const phoneNumber = `${codeInput.value}${numberInput.value}`;\n    setAuthPhoneNumber({ phoneNumber });\n  }\n\n  return (\n    <div id=\"auth-phone-number-form\">\n      <div id=\"logo\" />\n      <h2>Sign in to Telegram</h2>\n      <div className=\"note\">\n        Please confirm your country and\n        <br />enter phone number.\n      </div>\n      <div>\n        <Select id=\"sign-in-phone-code\">\n          <option value=\"+7\">Russia +7</option>\n        </Select>\n      </div>\n      <div>\n        <InputText id=\"sign-in-phone-number\" placeholder=\"Phone Number\" onChange={onPhoneNumberChange} />\n      </div>\n      <div>\n        {isButtonShown && (\n          <Button onClick={handleSubmit}>NEXT</Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal(\n  undefined,\n  (setGlobal, actions) => {\n    const { setAuthPhoneNumber } = actions;\n    return { setAuthPhoneNumber };\n  },\n)(AuthPhoneNumber);\n","import { ChangeEvent } from 'react';\n\nimport React, { FC, useState } from '../../../lib/teact';\nimport { DispatchMap, GlobalState, withGlobal } from '../../../lib/teactn';\n\nimport Button from '../../../components/ui/Button';\nimport InputText from '../../../components/ui/InputText';\n\nimport './AuthCode.scss';\n\ntype IProps = Pick<GlobalState, 'authPhoneNumber'> & Pick<DispatchMap, 'setAuthCode'>;\n\nconst AuthPhoneNumber: FC<IProps> = ({ authPhoneNumber, setAuthCode }) => {\n  const [isButtonShown, setIsButtonShown] = useState(false);\n\n  function onCodeChange(e: ChangeEvent<HTMLInputElement>) {\n    const target = e.target;\n\n    target.value = target.value.replace(/[^\\d]+/, '');\n\n    setIsButtonShown(target.value.length === 5);\n  }\n\n  function handleSubmit() {\n    const codeInput = document.getElementById('sign-in-code') as HTMLInputElement;\n    const code = codeInput.value;\n    setAuthCode({ code });\n  }\n\n  return (\n    <div id=\"auth-code-form\">\n      <div id=\"monkey\" />\n      <h2>{authPhoneNumber}</h2>\n      <div className=\"note\">\n        We have sent you an SMS\n        <br />with the code.\n      </div>\n      <div>\n        <InputText id=\"sign-in-code\" placeholder=\"Code\" onChange={onCodeChange} />\n      </div>\n      <div>\n        {isButtonShown && (\n          <Button onClick={handleSubmit}>NEXT</Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal(\n  global => {\n    const { authPhoneNumber } = global;\n    return { authPhoneNumber };\n  },\n  (setGlobal, actions) => {\n    const { setAuthCode } = actions;\n    return { setAuthCode };\n  },\n)(AuthPhoneNumber);\n","import React, { FC } from '../../lib/teact';\nimport { GlobalState, withGlobal } from '../../lib/teactn';\n\nimport AuthPhoneNumber from './components/AuthPhoneNumber';\nimport AuthCode from './components/AuthCode';\n\ntype IProps = Pick<GlobalState, 'authState'>\n\nconst Auth: FC<IProps> = ({ authState }) => {\n  switch (authState) {\n    case 'authorizationStateWaitCode':\n      return <AuthCode />;\n    case 'authorizationStateWaitPassword':\n      // TODO Add password support.\n      return <div>NO PASSWORD SUPPORT</div>;\n    case 'authorizationStateWaitPhoneNumber':\n    default:\n      return <AuthPhoneNumber />;\n  }\n};\n\nexport default withGlobal(\n  global => {\n    const { authState } = global;\n    return { authState };\n  },\n)(Auth);\n","import React, { FC, JsxChildren } from '../lib/teact';\n\nimport { ApiChat } from '../modules/tdlib/types/chats';\n\nimport './Avatar.scss';\n\ninterface IProps {\n  size?: 'small' | 'medium' | 'large',\n  chat?: ApiChat;\n  children?: JsxChildren,\n}\n\nconst Avatar: FC<IProps> = ({ size = 'large', chat, children }) => {\n  return (\n    <div className={`Avatar size-${size}`}>\n      {chat ? getChatLetters(chat) : children}\n    </div>\n  );\n};\n\nfunction getChatLetters(chat: ApiChat) {\n  if (!chat.title) {\n    return '';\n  }\n\n  return chat.title\n    .replace(/[^\\W\\w\\s]+/, '')\n    .split(' ')\n    .map((word: string) => word[0].toUpperCase())\n    .slice(0, 2)\n    .join('');\n}\n\nexport default Avatar;\n","import React, { FC } from '../../../../lib/teact';\nimport { DispatchMap, withGlobal } from '../../../../lib/teactn';\n\nimport { ApiChat } from '../../../../modules/tdlib/types/chats';\n\nimport { getMessageText } from '../../../../modules/tdlib/helpers';\n\nimport Avatar from '../../../../components/Avatar';\n\nimport './Chat.scss';\n\ntype IProps = {\n  id: number,\n  chat: ApiChat,\n  isSelected: boolean,\n} & Pick<DispatchMap, 'selectChat'>;\n\nconst Chat: FC<IProps> = ({ chat, isSelected, selectChat }) => {\n  return (\n    <div className={`Chat ${isSelected ? 'selected' : ''}`} onClick={() => selectChat({ id: chat.id })}>\n      <Avatar chat={chat} />\n      <div className=\"info\">\n        <div className=\"title\">{chat.title}</div>\n        <div className=\"last-message\">{chat.last_message && getMessageText(chat.last_message)}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal(\n  (global, ownProps) => {\n    const { chats } = global;\n    const { id } = ownProps;\n\n    return {\n      chat: chats.byId[id],\n      isSelected: Number(id) === chats.selectedId,\n    };\n  },\n  (setGlobal, actions) => {\n    const { selectChat } = actions;\n    return { selectChat };\n  },\n)(Chat);\n","export default <T>(object: Record<string, T>): T[] => {\n  return Object.keys(object).map(key => object[key]);\n};\n","export default <T = AnyLiteral>(\n  collection: T[],\n  orderKey: string | ((member: T) => any),\n  mode: 'asc' | 'desc' = 'asc',\n) => {\n  return collection.sort((a, b) => {\n    let aValue;\n    let bValue;\n\n    if (typeof orderKey === 'function') {\n      aValue = orderKey(a);\n      bValue = orderKey(b);\n    } else {\n      // @typing-hack.\n      aValue = (a as AnyLiteral)[orderKey];\n      bValue = (b as AnyLiteral)[orderKey];\n    }\n\n\n    return mode == 'asc' ? bValue - aValue : aValue - bValue;\n  });\n};\n","import React, { FC } from '../../../../lib/teact';\nimport { DispatchMap, GlobalState, withGlobal } from '../../../../lib/teactn';\n\nimport { ApiChat } from '../../../../modules/tdlib/types/chats';\n\nimport Chat from './Chat';\n\nimport Loading from '../../../../components/Loading';\n\nimport './ChatList.scss';\nimport toArray from '../../../../util/toArray';\nimport orderBy from '../../../../util/orderBy';\n\ntype IProps = Pick<DispatchMap, 'loadChats'> & {\n  chats: ApiChat[],\n  areChatsLoaded: boolean;\n};\n\nconst ChatList: FC<IProps> = ({ chats, areChatsLoaded, loadChats }) => {\n  if (!areChatsLoaded) {\n    loadChats();\n  }\n\n  return (\n    <div className=\"ChatList\">{\n      areChatsLoaded ? (\n        <div>\n          {chats.map(({ id }) => (\n            <Chat key={id} id={id} />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )\n    }</div>\n  );\n};\n\nexport default withGlobal(\n  global => {\n    const idsLength = global.chats.ids.length;\n    const areChatsLoaded = idsLength > 0 && Object.keys(global.chats.byId).length >= idsLength;\n    const sortedChats = areChatsLoaded\n      // TODO @perf New object returned each time.\n      ? orderBy(toArray(global.chats.byId), chat => chat.last_message && chat.last_message.date)\n      : null;\n\n    return {\n      chats: sortedChats,\n      areChatsLoaded,\n    };\n  },\n  (setGlobal, actions) => {\n    const { loadChats } = actions;\n    return { loadChats };\n  },\n)(ChatList);\n","import React, { FC } from '../../../../lib/teact';\n\nimport ChatList from './ChatList';\n\nconst LeftColumn: FC = () => {\n  return (\n    <ChatList />\n  );\n};\n\nexport default LeftColumn;\n","import React, { FC } from '../../../../lib/teact';\nimport { withGlobal } from '../../../../lib/teactn';\n\nimport Avatar from '../../../../components/Avatar';\n\nimport './MiddleHeader.scss';\n\ntype IProps = {\n  chat: AnyLiteral;\n};\n\nconst MiddleHeader: FC<IProps> = ({ chat }) => {\n  return (\n    <div className=\"MiddleHeader\">\n      <Avatar size=\"medium\" chat={chat} />\n      <div className=\"title\">{chat.title}</div>\n    </div>\n  );\n};\n\nexport default withGlobal(\n  global => {\n    const { selectedId, byId } = global.chats;\n\n    const chat = selectedId && byId[selectedId];\n\n    return {\n      chat,\n    };\n  },\n)(MiddleHeader);\n","export default (cb: () => void) => {\n  Promise.resolve().then(cb);\n};\n","\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n","// @ts-ignore\nimport emojiRegex from 'emoji-regex';\n\nconst RE_EMOJI = emojiRegex();\nconst RE_EMOJI_ONLY = new RegExp('^(?:' + emojiRegex().source + ')+$', '');\n\nexport default (text: string): number | false => {\n  const isEmojiOnly = RE_EMOJI_ONLY.exec(text);\n\n  if (!isEmojiOnly) {\n    return false;\n  }\n\n  let emojiCount = 0;\n  while(RE_EMOJI.exec(text)) {\n    emojiCount++\n  }\n\n  return emojiCount;\n}\n","import React, { FC } from '../../../../lib/teact';\nimport { DispatchMap, withGlobal } from '../../../../lib/teactn';\nimport { ApiMessage } from '../../../../modules/tdlib/types/messages';\n\nimport { getMessageText, isOwnMessage } from '../../../../modules/tdlib/helpers';\nimport parseEmojiOnlyString from '../../../../util/parseEmojiOnlyString';\nimport Avatar from '../../../../components/Avatar';\nimport './Message.scss';\n\ntype IProps = {\n  message: ApiMessage,\n  isSelected: boolean,\n} & Pick<DispatchMap, 'selectMessage'>;\n\ntype TextPart = string | Element;\n\nconst Message: FC<IProps> = ({ message, isSelected }) => {\n  const text = getMessageText(message);\n  let className;\n  let textParts: TextPart | TextPart[] | undefined;\n\n  if (text) {\n    const emojiOnlyCount = parseEmojiOnlyString(text);\n\n    if (emojiOnlyCount) {\n      className = emojiOnlyCount ? `emoji-only-${emojiOnlyCount}` : undefined;\n      textParts = text;\n    } else {\n      className = 'text';\n      textParts = enhanceTextParts(text, [addLineBreaks, addBreaksToLongWords, addLinks]);\n    }\n  }\n\n  return (\n    <div className={`Message ${isSelected ? 'selected' : ''} ${isOwnMessage(message) ? 'own' : ''}`}>\n      <Avatar size=\"small\">HE</Avatar>\n      <div className={className}>{textParts}</div>\n    </div>\n  );\n};\n\nfunction enhanceTextParts(text: string, enhancers: ((part: TextPart) => TextPart[])[]) {\n  let parts: TextPart[] = [text];\n\n  for (let i = 0, l = enhancers.length; i < l; i++) {\n    parts = parts.reduce((enhancedParts: TextPart[], part) => {\n      const newParts = enhancers[i](part);\n\n      return [\n        ...enhancedParts,\n        ...newParts,\n      ];\n    }, []);\n  }\n\n  return parts.length === 1 ? parts[0] : parts;\n}\n\nfunction addLineBreaks(part: TextPart): TextPart[] {\n  if (typeof part !== 'string') {\n    return [part];\n  }\n\n  return part\n    .split(/\\n/g)\n    .reduce((parts: TextPart[], line: string) => {\n      parts.push(line);\n      parts.push(<br />);\n\n      return parts;\n    }, []);\n}\n\nfunction addLinks(part: TextPart): TextPart[] {\n  return replaceWordsWithElements(\n    part,\n    word => word.startsWith('http:') || word.startsWith('https:'),\n    word => (\n      <a href={word} target=\"_blank\">{word}</a>\n    ),\n  );\n}\n\nfunction addBreaksToLongWords(part: TextPart): TextPart[] {\n  return replaceWordsWithElements(\n    part,\n    word => word.length > 50,\n    word => (\n      <div className=\"long-word-break-all\">{word}</div>\n    ),\n  );\n}\n\nfunction replaceWordsWithElements(\n  part: TextPart,\n  testFn: (word: string) => boolean,\n  replaceFn: (word: string) => Element,\n): TextPart[] {\n  if (typeof part !== 'string') {\n    return [part];\n  }\n\n  let wasLastTag = false;\n\n  return part\n    .split(' ')\n    .reduce((parts: TextPart[], word: string, i) => {\n      if (testFn(word)) {\n        if (parts.length > 0 && !wasLastTag) {\n          parts[parts.length - 1] += ' ';\n        }\n        parts.push(replaceFn(word));\n        wasLastTag = true;\n      } else {\n        if (parts.length > 0 && !wasLastTag) {\n          parts[parts.length - 1] += ` ${word}`;\n        } else {\n          parts.push(wasLastTag ? ` ${word}` : word);\n        }\n\n        wasLastTag = false;\n      }\n\n      return parts;\n    }, []);\n}\n\nexport default withGlobal(\n  (global, ownProps) => {\n    const { messages } = global;\n    const { id } = ownProps;\n\n    return {\n      isSelected: Number(id) === messages.selectedId,\n    };\n  },\n  (setGlobal, actions) => {\n    const { selectMessage } = actions;\n    return { selectMessage };\n  },\n)(Message);\n","import React, { FC } from '../../../../lib/teact';\nimport { DispatchMap, withGlobal } from '../../../../lib/teactn';\n\nimport { ApiMessage } from '../../../../modules/tdlib/types/messages';\n\nimport orderBy from '../../../../util/orderBy';\nimport onNextTick from '../../../../util/onNextTick';\n\nimport Loading from '../../../../components/Loading';\nimport Message from './Message';\n\nimport './MessageList.scss';\n\ntype IProps = Pick<DispatchMap, 'loadChatMessages'> & {\n  selectedChatId: number;\n  messages: ApiMessage[];\n};\n\nconst MessageList: FC<IProps> = ({ selectedChatId, messages, loadChatMessages }) => {\n  if (!messages) {\n    loadChatMessages({ chatId: selectedChatId });\n  }\n\n  onNextTick(() => {\n    const scrollContainer = document.getElementsByClassName('MessageList')[0];\n    scrollContainer.scrollTop = scrollContainer.scrollHeight;\n  });\n\n  return (\n    <div className=\"MessageList\">{\n      messages ? (\n        <div className=\"messages-container\">\n          {messages.map(message => (\n            <Message key={message.id} message={message} />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )\n    }</div>\n  );\n};\n\nexport default withGlobal(\n  global => {\n    const { chats, messages } = global;\n\n    const chatMessages = chats.selectedId ? messages.byChatId[chats.selectedId] : null;\n\n    return {\n      selectedChatId: chats.selectedId,\n      // TODO @perf New object returned each time.\n      messages: chatMessages && orderBy(chatMessages, 'date', 'desc'),\n    };\n  },\n  (setGlobal, actions) => {\n    const { loadChatMessages } = actions;\n    return { loadChatMessages };\n  },\n)(MessageList);\n","import React, { FC } from '../../../../lib/teact';\nimport { DispatchMap, withGlobal } from '../../../../lib/teactn';\n\nimport InputText from '../../../../components/ui/InputText';\nimport './MiddleFooter.scss';\nimport onNextTick from '../../../../util/onNextTick';\n\ntype IProps = Pick<DispatchMap, 'sendTextMessage'> & {\n  selectedChatId: number;\n};\n\nconst MiddleFooter: FC<IProps> = ({ selectedChatId, sendTextMessage }) => {\n  function onKeyPress(this: HTMLInputElement, e: React.KeyboardEvent) {\n    if (e.keyCode === 13 && this.value.trim().length) {\n      sendTextMessage({\n        chatId: selectedChatId,\n        text: this.value,\n      });\n\n      this.value = '';\n    }\n  }\n\n  onNextTick(focusInput);\n\n  return (\n    <div className=\"MiddleFooter\">{\n      <InputText id=\"message-input-text\" placeholder=\"Message\" onKeyPress={onKeyPress} />\n    }</div>\n  );\n};\n\nfunction focusInput() {\n  const input = document.getElementById('message-input-text');\n\n  if (input) {\n    input.focus();\n  }\n}\n\nexport default withGlobal(\n  (global) => {\n    const { chats } = global;\n\n    return {\n      selectedChatId: chats.selectedId,\n    };\n  },\n  (setGlobal, actions) => {\n    const { sendTextMessage } = actions;\n    return { sendTextMessage };\n  },\n)(MiddleFooter);\n","import React, { FC } from '../../../../lib/teact';\nimport { withGlobal } from '../../../../lib/teactn';\n\nimport MiddleHeader from './MiddleHeader';\nimport MessageList from './MessageList';\nimport MiddleFooter from './MiddleFooter';\n\nimport './MiddleColumn.scss';\n\ntype IProps = {\n  selectedChatId: number;\n};\n\nconst MiddleColumn: FC<IProps> = ({ selectedChatId }) => {\n  return (\n    <div className=\"MiddleColumn\">\n      {selectedChatId ? (\n        <div className=\"messages-layout\">\n          <MiddleHeader />\n          <MessageList />\n          <MiddleFooter />\n        </div>\n      ) : (\n        <div className=\"select-chat-note\">Select chat to start messaging...</div>\n      )}\n\n    </div>\n  );\n};\n\nexport default withGlobal(\n  (global) => {\n    return {\n      selectedChatId: global.chats.selectedId,\n    };\n  },\n)(MiddleColumn);\n","import React, { FC } from '../../lib/teact';\nimport { GlobalState, withGlobal } from '../../lib/teactn';\n\nimport LeftColumn from './components/left/LeftColumn';\nimport MiddleColumn from './components/middle/MiddleColumn';\nimport RightColumn from './components/right/RightColumn';\n\nimport './Main.scss';\n\ntype IProps = GlobalState;\n\nconst Main: FC<IProps> = () => {\n  return (\n    <div className=\"Main\">\n      <LeftColumn />\n      <MiddleColumn />\n      {/*<RightColumn />*/}\n    </div>\n  );\n};\n\nexport default withGlobal(\n\n)(Main);\n","import { FC } from './lib/teact';\nimport React, { DispatchMap, GlobalState, withGlobal } from './lib/teactn';\n\nimport './modules';\n\nimport Loading from './components/Loading';\nimport Auth from './pages/auth/Auth';\nimport Main from './pages/main/Main';\nimport Test from './pages/test/Test';\n\ntype IProps = Pick<GlobalState, 'isInitialized' | 'authState'> & Pick<DispatchMap, 'init'>\n\nconst App: FC<IProps> = ({ isInitialized, authState, init }) => {\n  console.log('APP RE-RENDER', authState);\n\n  // return <Test />;\n\n  if (!isInitialized) {\n    init();\n  }\n\n  if (authState) {\n    switch (authState) {\n      case 'authorizationStateWaitCode':\n      case 'authorizationStateWaitPassword':\n      case 'authorizationStateWaitPhoneNumber':\n        return <Auth />;\n      case 'authorizationStateClosed':\n      case 'authorizationStateClosing':\n      case 'authorizationStateLoggingOut':\n      case 'authorizationStateReady':\n        return <Main />;\n    }\n  }\n\n  return <Loading />;\n};\n\nexport default withGlobal(\n  global => {\n    const { isInitialized, authState } = global;\n    return { isInitialized, authState };\n  },\n  (setGlobal, actions) => {\n    const { init } = actions;\n    return { init };\n  },\n)(App);\n\n","import React, { getGlobal, setGlobal } from './lib/teactn';\nimport TeactDOM from './lib/teact-dom';\n\nimport App from './App';\nimport './global.scss';\n\nTeactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\ndocument.addEventListener('dblclick', () => {\n  console.log('GLOBAL STATE', getGlobal());\n});\n\ndocument.addEventListener('contextmenu', () => {\n  setGlobal({\n    ...getGlobal(),\n    authState: 'authorizationStateReady',\n  });\n});\n","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}